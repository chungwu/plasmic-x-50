{"version":3,"file":"index.js","sources":["../../src/auth/PlasmicPageGuard.tsx","../../src/render/Stack.tsx","../../src/render/elements.ts","../../src/render/global-variants.ts","../../src/render/PlasmicIcon.tsx","../../src/render/PlasmicLink.tsx","../../src/render/PlasmicSlot.tsx","../../src/render/screen-variants.ts","../../src/render/triggers.ts","../../src/states/types.ts","../../src/states/errors.ts","../../src/states/graph.ts","../../src/states/valtio.tsx","../../src/states/helpers.ts","../../src/index-common.tsx"],"sourcesContent":["import { usePlasmicDataSourceContext } from \"@plasmicapp/data-sources-context\";\nimport React from \"react\";\n\n// https://stackoverflow.com/a/2117523\nfunction uuidv4() {\n  // @ts-ignore\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\n    (\n      c ^\n      (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\n    ).toString(16)\n  );\n}\n\nasync function triggerLogin(\n  appId: string,\n  authorizeEndpoint: string,\n  redirectUri?: string\n) {\n  async function sha256(text: string) {\n    const encoder = new TextEncoder();\n    const data = encoder.encode(text);\n    const hashBuffer = await crypto.subtle.digest(\"SHA-256\", data);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    const hashHex = hashArray\n      .map((b) => b.toString(16).padStart(2, \"0\"))\n      .join(\"\");\n    return hashHex;\n  }\n\n  const continueTo = window.location.href;\n  const state = JSON.stringify({ continueTo });\n  const code_verifier = uuidv4();\n  localStorage.setItem(\"code_verifier\", code_verifier);\n  const code_challenge = await sha256(code_verifier);\n\n  const params = new URLSearchParams();\n  params.set(\"client_id\", appId);\n  params.set(\"state\", state);\n  params.set(\"response_type\", \"code\");\n  params.set(\"code_challenge\", code_challenge);\n  params.set(\"code_challenge_method\", \"S256\");\n\n  if (redirectUri) {\n    params.set(\"redirect_uri\", redirectUri);\n  }\n\n  const url = `${authorizeEndpoint}?${params.toString()}`;\n  window.location.href = url;\n}\n\ninterface PlasmicPageGuardProps {\n  appId: string;\n  authorizeEndpoint: string;\n  minRole?: string;\n  canTriggerLogin: boolean;\n  children: React.ReactNode;\n}\n\nexport function PlasmicPageGuard(props: PlasmicPageGuardProps) {\n  const {\n    appId,\n    authorizeEndpoint,\n    minRole,\n    canTriggerLogin,\n    children,\n  } = props;\n\n  const dataSourceCtxValue = usePlasmicDataSourceContext();\n\n  React.useEffect(() => {\n    if (canTriggerLogin) {\n      if (\n        minRole &&\n        dataSourceCtxValue &&\n        \"isUserLoading\" in dataSourceCtxValue &&\n        !dataSourceCtxValue.isUserLoading &&\n        !dataSourceCtxValue.user\n      ) {\n        triggerLogin(\n          appId,\n          authorizeEndpoint,\n          dataSourceCtxValue.authRedirectUri\n        );\n      }\n    }\n  }, [dataSourceCtxValue, appId, authorizeEndpoint, canTriggerLogin, minRole]);\n\n  function canUserViewPage() {\n    if (!minRole) {\n      return true;\n    }\n    if (!dataSourceCtxValue) {\n      return false;\n    }\n    if (!dataSourceCtxValue.user) {\n      return false;\n    }\n    if (!(\"roleIds\" in dataSourceCtxValue.user)) {\n      return false;\n    }\n    if (!Array.isArray(dataSourceCtxValue.user.roleIds)) {\n      return false;\n    }\n    return dataSourceCtxValue.user.roleIds.includes(minRole);\n  }\n\n  if (\n    !dataSourceCtxValue ||\n    dataSourceCtxValue.isUserLoading ||\n    (!dataSourceCtxValue.user && minRole && canTriggerLogin)\n  ) {\n    return null;\n  }\n\n  if (!canUserViewPage()) {\n    return <div>You don't have access to this page</div>;\n  }\n\n  return <>{children}</>;\n}\n\nexport function withPlasmicPageGuard<P extends object>(\n  WrappedComponent: React.ComponentType<P>,\n  options: Omit<PlasmicPageGuardProps, \"children\">\n) {\n  const PageGuard: React.FC<P> = (props) => (\n    <PlasmicPageGuard {...options}>\n      <WrappedComponent {...props} />\n    </PlasmicPageGuard>\n  );\n  return PageGuard;\n}\n","import * as React from \"react\";\nimport { createElementWithChildren } from \"../react-utils\";\nimport { wrapFlexContainerChildren } from \"./elements\";\n\nfunction renderStack<T extends keyof JSX.IntrinsicElements>(\n  as: T,\n  props: React.ComponentProps<T>,\n  hasGap: boolean | undefined,\n  ref: React.Ref<any>\n) {\n  const { children, ...rest } = props;\n  const wrappedChildren = wrapFlexContainerChildren(children, hasGap ?? false);\n  return createElementWithChildren(as, { ref, ...rest }, wrappedChildren);\n}\n\nfunction FlexStack_<T extends keyof JSX.IntrinsicElements = \"div\">(\n  props: { as?: T; hasGap?: boolean } & React.ComponentProps<T>,\n  outerRef: React.Ref<any>\n) {\n  const { as, hasGap, ...rest } = props;\n  return renderStack(\n    as ?? \"div\",\n    rest as React.ComponentProps<T>,\n    hasGap,\n    outerRef\n  );\n}\n\nconst FlexStack = React.forwardRef(FlexStack_) as <\n  T extends keyof JSX.IntrinsicElements = \"div\"\n>(\n  props: { as?: T; hasGap?: boolean } & React.ComponentProps<T>\n) => React.ReactElement;\n\nconst makeStackImpl = <T extends keyof JSX.IntrinsicElements>(as: T) => {\n  return React.forwardRef(\n    (\n      props: React.ComponentProps<T> & { hasGap?: boolean },\n      ref: React.Ref<any>\n    ) => {\n      const { hasGap, ...rest } = props;\n      return renderStack(as, rest as React.ComponentProps<T>, hasGap, ref);\n    }\n  ) as React.FC<React.ComponentProps<T> & { hasGap?: boolean }>;\n};\n\nexport const Stack = Object.assign(FlexStack, {\n  div: makeStackImpl(\"div\"),\n  a: makeStackImpl(\"a\"),\n  button: makeStackImpl(\"button\"),\n  h1: makeStackImpl(\"h1\"),\n  h2: makeStackImpl(\"h2\"),\n  h3: makeStackImpl(\"h3\"),\n  h4: makeStackImpl(\"h4\"),\n  h5: makeStackImpl(\"h5\"),\n  h6: makeStackImpl(\"h6\"),\n  label: makeStackImpl(\"label\"),\n  form: makeStackImpl(\"form\"),\n  section: makeStackImpl(\"section\"),\n  head: makeStackImpl(\"head\"),\n  main: makeStackImpl(\"main\"),\n  nav: makeStackImpl(\"nav\"),\n});\n","import get from \"dlv\";\nimport * as React from \"react\";\nimport { chainSingleArgFuncs, isSubset, notNil, omit, pick } from \"../common\";\nimport {\n  createElementWithChildren,\n  ensureNotArray,\n  isReactNode,\n  mergeProps,\n  mergePropVals,\n  NONE,\n} from \"../react-utils\";\nimport { $State } from \"../states\";\nimport { Stack } from \"./Stack\";\n\ninterface Variants {\n  [vg: string]: any;\n}\n\nexport type MultiChoiceArg<M extends string> = M | M[] | { [v in M]?: boolean };\nexport type SingleChoiceArg<M extends string> = M;\nexport type SingleBooleanChoiceArg<M extends string> = M | boolean;\n\ninterface OverrideTwiddle {\n  wrapChildren?: (children: React.ReactNode) => React.ReactNode;\n  wrap?: (node: React.ReactNode) => React.ReactNode;\n}\n\nexport type DefaultOverride<C extends React.ElementType> = {\n  type: \"default\";\n  props?: Partial<React.ComponentProps<C>>;\n} & OverrideTwiddle;\n\nexport type AsOverride<C extends React.ElementType> = {\n  type: \"as\";\n  as: C;\n  props?: Partial<React.ComponentProps<C>>;\n} & OverrideTwiddle;\n\nexport type RenderOverride<C extends React.ElementType> = {\n  type: \"render\";\n  render: (props: React.ComponentProps<C>, Comp: C) => React.ReactNode;\n  props?: Partial<React.ComponentProps<C>>;\n} & OverrideTwiddle;\n\nexport type Override<DefaultElementType extends React.ElementType> =\n  | DefaultOverride<DefaultElementType>\n  | AsOverride<any>\n  | RenderOverride<DefaultElementType>;\n\nexport type Overrides = Record<string, Flex<any>>;\nexport type Args = Record<string, any>;\n\n// Flex provides a more \"flexible\" way to specify bindings.\nexport type Flex<DefaultElementType extends React.ElementType> =\n  // Fully-specified bindings\n  | (Omit<DefaultOverride<DefaultElementType>, \"type\"> & {\n      as?: never;\n      render?: never;\n    })\n  | Omit<AsOverride<any>, \"type\">\n  | (Omit<RenderOverride<DefaultElementType>, \"type\"> & {\n      as?: never;\n    })\n\n  // Valid ReactNode, used as children.\n  // Note: We use React.ReactChild instead of React.ReactNode because we don't want to include\n  // React.ReactFragment, which includes {}, which would allow any object to be passed in,\n  // defeating any attempt to type-check!\n  | React.ReactChild\n\n  // Ignored\n  | null\n  | undefined\n\n  // dict of props for the DefaultElementType\n  | (Partial<React.ComponentProps<DefaultElementType>> & {\n      wrap?: never;\n      wrapChildren?: never;\n      props?: never;\n      as?: never;\n      render?: never;\n    })\n\n  // render function taking in dict of props for the DefaultElementType\n  | ((props: React.ComponentProps<DefaultElementType>) => React.ReactNode);\n\nexport function hasVariant<V extends Variants>(\n  variants: V | undefined,\n  groupName: keyof V,\n  variant: string\n) {\n  if (variants == null) {\n    return false;\n  }\n  const groupVariants = variants[groupName];\n  if (groupVariants == null) {\n    return false;\n  } else if (groupVariants === true) {\n    return variant === groupName;\n  } else if (groupVariants === false) {\n    return false;\n  } else if (Array.isArray(groupVariants)) {\n    return groupVariants.includes(variant);\n  } else if (typeof groupVariants === \"string\") {\n    return groupVariants === variant;\n  } else {\n    return (\n      groupVariants[variant] !== undefined && groupVariants[variant] !== false\n    );\n  }\n}\n\nexport function wrapFlexContainerChildren(\n  children: React.ReactNode,\n  hasGap: boolean\n) {\n  // We need to always wrap the children, even if there are no gaps, because\n  // otherwise if we toggle between with and without gap, React reconciliation\n  // will blow away the children tree and all state if we switch from having\n  // a wrapper and not.\n  const className = hasGap ? \"__wab_flex-container\" : \"__wab_passthrough\";\n  if (!children) {\n    return null;\n  } else if (Array.isArray(children)) {\n    return React.createElement(\"div\", { className }, ...children);\n  } else {\n    return React.createElement(\"div\", { className }, children);\n  }\n}\n\nfunction createPlasmicElement<DefaultElementType extends React.ElementType>(\n  override: Flex<DefaultElementType>,\n  defaultRoot: DefaultElementType,\n  defaultProps: Partial<React.ComponentProps<DefaultElementType>>,\n  wrapChildrenInFlex?: boolean\n): React.ReactNode | null {\n  if (!override || Object.keys(override).length === 0) {\n    return createElementWithChildren(\n      defaultRoot,\n      defaultProps,\n      defaultProps.children\n    );\n  }\n  const override2 = deriveOverride(override);\n  const props = mergeOverrideProps(defaultProps, override2.props);\n  if (override2.type === \"render\") {\n    return override2.render(\n      props as React.ComponentProps<DefaultElementType>,\n      defaultRoot\n    );\n  }\n\n  let root = defaultRoot;\n  if (override2.type === \"as\" && override2.as) {\n    if (defaultRoot === (Stack as React.ElementType)) {\n      // If there was an \"as\" override specified, but the default type is\n      // a Stack, then we don't want to switch to using \"as\" as the root,\n      // because then we'd lose the flex wrapper that Stack provides.\n      // Instead, we specify the \"as\" as the \"as\" prop to Stack.\n      props.as = override2.as;\n    } else {\n      root = override2.as;\n    }\n  }\n\n  let children = props.children;\n\n  if (override2.wrapChildren) {\n    children = override2.wrapChildren(ensureNotArray(children));\n  }\n\n  if (wrapChildrenInFlex) {\n    // For legacy, we still support data-plasmic-wrap-flex-children\n    children = wrapFlexContainerChildren(children, true);\n  }\n\n  let result = createElementWithChildren(root, props, children);\n\n  if (override2.wrap) {\n    result = override2.wrap(result) as React.ReactElement;\n  }\n\n  return result;\n}\n\n// We use data-plasmic-XXX attributes for custom properties since Typescript doesn't\n// support type check on jsx pragma. See https://github.com/microsoft/TypeScript/issues/21699\n// for more info.\nconst seenElements = new Map<string, React.ReactNode>();\nexport function createPlasmicElementProxy<\n  DefaultElementType extends React.ElementType\n>(\n  defaultElement: DefaultElementType,\n  props: Partial<React.ComponentProps<DefaultElementType>>,\n  ...children: React.ReactNode[]\n) {\n  // We use seenElements to keep track of elements that has been rendered by\n  // createPlasmicElementProxy().  When a JSX tree is evaluated, the JSX factory\n  // is invoked from the leaf to the root as the last call.  So we can store\n  // all the elements we've created until we encounter the leaf, at which point\n  // we will clear this map.  We are guaranteed that this map will only contain\n  // elements from one Plasmic* component at a time, because we're just creating\n  // elements and not \"rendering\" at this point; even if this JSX tree references\n  // other Plasmic* elements, we'll just create an element referencing that component,\n  // rather than following into the content of that component.\n  //\n  // TODO: is this ConcurrentMode friendly?\n\n  if (props == null) {\n    props = {};\n  }\n\n  const name = props[\"data-plasmic-name\"];\n  const isRoot = props[\"data-plasmic-root\"];\n  const forNodeName = props[\"data-plasmic-for-node\"];\n\n  delete props[\"data-plasmic-name\"];\n  delete props[\"data-plasmic-root\"];\n  delete props[\"data-plasmic-for-node\"];\n\n  const element = createPlasmicElementFromJsx(\n    defaultElement,\n    props,\n    ...children\n  );\n  if (name) {\n    seenElements.set(name, element);\n  }\n\n  if (isRoot) {\n    // If this is the root, and we requested a specific node by specifying data-plasmic-for-node,\n    // then return that node instead\n    const forNode = forNodeName\n      ? seenElements.get(forNodeName) ?? null\n      : element;\n\n    // Clear out the seenElements map, as we're done rendering this Plasmic* component.\n    seenElements.clear();\n    return forNode;\n  }\n  return element;\n}\n\nfunction createPlasmicElementFromJsx<\n  DefaultElementType extends React.ElementType\n>(\n  defaultElement: DefaultElementType,\n  props: Partial<React.ComponentProps<DefaultElementType>>,\n  ...children: React.ReactNode[]\n) {\n  const override = props[\"data-plasmic-override\"];\n  const wrapFlexChild = props[\"data-plasmic-wrap-flex-child\"];\n  const triggerProps = (props[\"data-plasmic-trigger-props\"] ??\n    []) as React.HTMLAttributes<HTMLElement>[];\n  delete props[\"data-plasmic-override\"];\n  delete props[\"data-plasmic-wrap-flex-child\"];\n  delete props[\"data-plasmic-trigger-props\"];\n  return createPlasmicElement(\n    override,\n    defaultElement,\n    mergeProps(\n      props,\n      children.length === 0\n        ? {}\n        : { children: children.length === 1 ? children[0] : children },\n      ...triggerProps\n    ) as any,\n    wrapFlexChild\n  );\n}\n\nexport function makeFragment(...children: React.ReactNode[]) {\n  return React.createElement(React.Fragment, {}, ...children);\n}\n\nexport const UNSET = Symbol(\"UNSET\");\n\nfunction mergeOverrideProps(\n  defaults: Record<string, any>,\n  overrides?: Record<string, any>\n): Record<string, any> {\n  if (!overrides) {\n    return defaults;\n  }\n\n  const result = { ...defaults };\n\n  for (const key of Object.keys(overrides)) {\n    const defaultVal = defaults[key];\n    let overrideVal = overrides[key];\n    if (overrideVal === UNSET) {\n      delete result[key];\n    } else {\n      // We use the NONE sentinel if the overrideVal is nil, and is not one of the\n      // props that we merge by default -- which are className, style, and\n      // event handlers.  This means for all other \"normal\" props -- like children,\n      // title, etc -- a nil value will unset the default.\n      if (\n        overrideVal == null &&\n        key !== \"className\" &&\n        key !== \"style\" &&\n        !(key.startsWith(\"on\") && typeof defaultVal === \"function\")\n      ) {\n        overrideVal = NONE;\n      }\n      result[key] = mergePropVals(key, defaultVal, overrideVal);\n    }\n  }\n\n  return result;\n}\n\nexport function wrapWithClassName(element: React.ReactNode, className: string) {\n  const key = React.isValidElement(element)\n    ? element.key || undefined\n    : undefined;\n  return React.createElement(\n    \"div\",\n    {\n      key,\n      className,\n      style: {\n        display: \"grid\",\n      },\n    },\n    element\n  );\n}\n\nfunction deriveOverride<C extends React.ElementType>(x: Flex<C>): Override<C> {\n  if (!x) {\n    // undefined Binding is an empty Binding\n    return {\n      type: \"default\",\n      props: {} as any,\n    };\n  } else if (isReactNode(x)) {\n    // If ReactNode, then assume this is the children\n    return {\n      type: \"default\",\n      props: {\n        children: x,\n      } as any,\n    };\n  } else if (typeof x === \"object\") {\n    // If any of the overrideKeys is a key of this object, then assume\n    // this is a full Override\n    if (\"as\" in x) {\n      return {\n        ...x,\n        props: x.props || {},\n        type: \"as\",\n      } as any;\n    } else if (\"render\" in x) {\n      return {\n        ...x,\n        type: \"render\",\n      } as any;\n    } else if (\"props\" in x) {\n      return {\n        ...x,\n        props: x.props || {},\n        type: \"default\",\n      };\n    } else if (isSubset(Object.keys(x), [\"wrap\", \"wrapChildren\"])) {\n      // Only twiddling functions present, so assume no props overrides\n      // (otherwise we'd assume these were props).\n      return {\n        ...x,\n        props: {},\n        type: \"default\",\n      };\n    }\n\n    // Else, assume this is just a props object.\n    return {\n      type: \"default\",\n      props: x as any,\n    };\n  } else if (typeof x === \"function\") {\n    return {\n      type: \"render\",\n      render: x,\n    };\n  }\n\n  throw new Error(`Unexpected override: ${x}`);\n}\n\nfunction mergeVariants<V extends Variants>(\n  v1: Partial<V> | undefined,\n  v2: Partial<V> | undefined\n): Partial<V> {\n  if (!v1 || !v2) {\n    return v1 || v2 || {};\n  }\n  return { ...v1, ...v2 };\n}\n\nexport function mergeVariantsWithStates(\n  variants: Variants,\n  $state: $State,\n  linkedStates: {\n    variantGroup: string;\n    statePath: (string | number)[];\n  }[]\n): Variants {\n  return {\n    ...variants,\n    ...Object.fromEntries(\n      linkedStates.map(({ variantGroup, statePath }) => [\n        variantGroup,\n        get($state, statePath),\n      ])\n    ),\n  };\n}\n\nfunction mergeArgs<A extends Args>(\n  a1: Partial<A> | undefined,\n  a2: Partial<A> | undefined\n): Partial<A> {\n  if (!a1 || !a2) {\n    return a1 || a2 || {};\n  }\n  return { ...a1, ...a2 };\n}\n\nfunction mergeFlexOverrides<O extends Overrides>(\n  o1: Partial<O>,\n  o2: Partial<O> | undefined\n): Partial<O> {\n  if (!o2) {\n    return o1;\n  }\n  const keys = Array.from(new Set([...Object.keys(o1), ...Object.keys(o2)]));\n  const merged: Record<string, any> = {};\n  for (const key of keys) {\n    merged[key] = mergeFlexOverride(o1[key], o2[key]);\n  }\n  return merged as Partial<O>;\n}\n\nfunction mergeFlexOverride<C extends React.ElementType<any>>(\n  fo1: Flex<C> | undefined,\n  fo2: Flex<C> | undefined\n): Flex<C> | undefined {\n  if (!fo1) {\n    return fo2;\n  }\n  if (!fo2) {\n    return fo1;\n  }\n\n  const o1 = deriveOverride(fo1);\n  const o2 = deriveOverride(fo2);\n  const wrap = chainSingleArgFuncs(...[o1.wrap, o2.wrap].filter(notNil));\n  const wrapChildren = chainSingleArgFuncs(\n    ...[o1.wrapChildren, o2.wrapChildren].filter(notNil)\n  );\n\n  // \"render\" type always takes precedence, but we still merge the props\n  const props = mergeOverrideProps(o1.props ?? {}, o2.props) as Partial<\n    React.ComponentProps<C>\n  >;\n  if (o2.type === \"render\") {\n    return {\n      render: o2.render,\n      props,\n      wrap,\n      wrapChildren,\n    };\n  }\n\n  if (o1.type === \"render\") {\n    return {\n      render: o1.render,\n      props,\n      wrap,\n      wrapChildren,\n    };\n  }\n\n  // \"as\" will take precedence\n  const as =\n    (o2.type === \"as\" ? o2.as : undefined) ??\n    (o1.type === \"as\" ? o1.as : undefined);\n\n  return {\n    props,\n    wrap,\n    wrapChildren,\n    ...(as ? { as } : {}),\n  };\n}\n\nexport function deriveRenderOpts(\n  props: Record<string, any>,\n  config: {\n    name: string;\n    descendantNames: string[];\n    internalVariantPropNames: string[];\n    internalArgPropNames: string[];\n  }\n) {\n  const {\n    name,\n    descendantNames,\n    internalVariantPropNames,\n    internalArgPropNames,\n  } = config;\n  const reservedPropNames = [\"variants\", \"args\", \"overrides\"];\n  const variants = mergeVariants(\n    omit(pick(props, ...internalVariantPropNames), ...reservedPropNames),\n    props.variants\n  );\n  const args = mergeArgs(\n    omit(pick(props, ...internalArgPropNames), ...reservedPropNames),\n    props.args\n  );\n  let overrides = mergeFlexOverrides(\n    omit(\n      pick(props, ...descendantNames),\n      ...internalArgPropNames,\n      ...internalVariantPropNames,\n      ...reservedPropNames\n    ),\n    props.overrides\n  );\n\n  const leftoverProps = omit(\n    props,\n    \"variants\",\n    \"args\",\n    \"overrides\",\n    ...descendantNames,\n    ...internalVariantPropNames,\n    ...internalArgPropNames\n  ) as Partial<React.ComponentProps<\"button\">>;\n\n  if (Object.keys(leftoverProps).length > 0) {\n    overrides = mergeFlexOverrides(overrides, {\n      [name]: {\n        props: leftoverProps,\n      },\n    });\n  }\n  return { variants, args, overrides };\n}\n","const isDefaultValue = (val: string) => val === \"PLEASE_RENDER_INSIDE_PROVIDER\";\nconst seenDefaultVariants: Record<string, boolean> = {};\nexport function ensureGlobalVariants<T extends Record<string, any>>(\n  globalVariantValues: T\n) {\n  Object.entries(globalVariantValues)\n    .filter(([_, value]) => isDefaultValue(value))\n    .forEach(([key, _]) => {\n      (globalVariantValues as any)[key] = undefined;\n\n      if (!seenDefaultVariants[key] && process.env.NODE_ENV === \"development\") {\n        seenDefaultVariants[key] = true;\n        const providerName = `${key[0].toUpperCase()}${key.substring(\n          1\n        )}Context.Provider`;\n        console.warn(\n          `Plasmic context value for global variant \"${key}\" was not provided; please use ${providerName} at the root of your React app. Learn More: https://www.plasmic.app/learn/other-assets/#global-variants`\n        );\n      }\n    });\n  return globalVariantValues;\n}\n","import * as React from \"react\";\n\nexport function PlasmicIcon(\n  props: React.ComponentProps<\"svg\"> & {\n    PlasmicIconType: React.ComponentType;\n  }\n) {\n  const { PlasmicIconType, ...rest } = props;\n  return <PlasmicIconType {...rest} />;\n}\n","import React from \"react\";\nimport { omit, pick } from \"../common\";\n\nexport const PlasmicLink = React.forwardRef(function PlasmicLink(\n  props: any,\n  ref: React.Ref<any>\n) {\n  // props.href is required for nextjs; if no props.href,\n  // then we just render the default anchor element\n  if (props.platform === \"nextjs\" && props.href) {\n    const nextjsProps = [\n      \"href\",\n      \"replace\",\n      \"scroll\",\n      \"shallow\",\n      \"passHref\",\n      \"prefetch\",\n      \"locale\",\n    ];\n\n    return React.createElement(\n      props.component,\n      { ...pick(props, ...nextjsProps), legacyBehavior: true },\n      <a {...omit(props, \"component\", \"platform\", ...nextjsProps)} ref={ref} />\n    );\n  }\n\n  if (props.platform === \"gatsby\" && isInternalHref(props.href)) {\n    return React.createElement(props.component, {\n      ...omit(props, \"component\", \"platform\", \"href\"),\n      ...{ to: props.href, ref },\n    });\n  }\n\n  return <a {...omit(props, \"component\", \"platform\")} ref={ref} />;\n});\n\nfunction isInternalHref(href: string): boolean {\n  return /^\\/(?!\\/)/.test(href);\n}\n","import * as React from \"react\";\nimport { mergeProps } from \"../react-utils\";\nimport { Trans } from \"./translation\";\n\nexport function PlasmicSlot<T extends keyof JSX.IntrinsicElements = \"div\">(\n  props: React.ComponentProps<T> & {\n    as?: T;\n    defaultContents?: React.ReactNode;\n    value?: React.ReactNode;\n  }\n) {\n  return renderPlasmicSlot(props);\n}\n\nexport function renderPlasmicSlot<\n  T extends keyof JSX.IntrinsicElements = \"div\"\n>(opts: {\n  as?: T;\n  defaultContents?: React.ReactNode;\n  value?: React.ReactNode;\n}) {\n  const { as, defaultContents, value, ...rest } = opts;\n\n  let content = value === undefined ? defaultContents : value;\n  if (!content || (Array.isArray(content) && content.length === 0)) {\n    return null;\n  }\n\n  // If the content is a raw string, then we need to wrap the raw string\n  // into an element, in case the slot is inside a flex-gap\n  // container (you cannot apply margin to just a text node).\n  const maybeString = maybeAsString(content);\n  if (maybeString) {\n    content = <span className=\"__wab_slot-string-wrapper\">{maybeString}</span>;\n  }\n\n  const nonEmptyProps = Object.keys(rest).filter((p) => !!(rest as any)[p]);\n  if (nonEmptyProps.length === 0) {\n    // No attrs to apply to the slot (which means the slot is unstyled), then\n    // just render the content directly; no need for style wrapper.\n    return <>{content}</>;\n  }\n\n  return React.createElement(\n    as || \"span\",\n    mergeProps({ className: \"__wab_slot\" }, rest),\n    content\n  );\n}\n\nfunction maybeAsString(\n  node: React.ReactNode\n): string | React.ReactElement | undefined {\n  // Unwrap fragments\n  if (React.isValidElement(node)) {\n    // Fragment doesn't render DOM elements\n    if (node.type === React.Fragment) {\n      return maybeAsString(node.props.children);\n    } else if (node.type === Trans) {\n      // Trans also doesn't render DOM elements. But we don't want to just render\n      // its content string, because we want to keep the <Trans/> for the localization.\n      // So we render the same node, to be wrapped into __wab_slot-string-wrapper.\n      return node;\n    }\n  }\n\n  if (typeof node === \"string\") {\n    return node;\n  }\n\n  if (Array.isArray(node) && node.length === 1 && typeof node[0] === \"string\") {\n    return node[0];\n  }\n\n  return undefined;\n}\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { isBrowser, useIsomorphicLayoutEffect } from \"../react-utils\";\n\ntype Queries = { [name: string]: string };\n\nconst listeners: Array<() => void> = [];\nconst queries: Queries = {};\n\nfunction matchScreenVariants() {\n  if (!isBrowser) {\n    return [];\n  }\n  return Object.entries(queries)\n    .filter(([, query]) => window.matchMedia(query).matches)\n    .map(([name]) => name);\n}\n\n// undefined if screen variants have never been calculated\nlet curScreenVariants: string[] | undefined = undefined;\n\nfunction recalculateScreenVariants() {\n  const screenVariant = matchScreenVariants();\n  if (\n    !curScreenVariants ||\n    screenVariant.join(\"\") !== curScreenVariants.join(\"\")\n  ) {\n    curScreenVariants = screenVariant;\n    ReactDOM.unstable_batchedUpdates(() =>\n      listeners.forEach((listener) => listener())\n    );\n  }\n}\n\nfunction ensureInitCurScreenVariants() {\n  // Initializes curScreenVariants if it hadn't been before. Note that this must\n  // be called from within an effect.\n  if (curScreenVariants === undefined) {\n    curScreenVariants = matchScreenVariants();\n  }\n}\n\nif (isBrowser) {\n  window.addEventListener(\"resize\", recalculateScreenVariants);\n}\n\nexport function createUseScreenVariants(\n  isMulti: boolean,\n  screenQueries: Queries\n) {\n  Object.assign(queries, screenQueries);\n  curScreenVariants = undefined;\n\n  return function () {\n    // It is important that upon first render, we return [] or undefined, because\n    // that is what SSR will use, and the client must match.  In an effect (which\n    // only happens on the client), we then actually ask for the real screen variant\n    // and, if different from [] or undefined, forces a re-render.\n\n    const [, updateState] = React.useState<{}>();\n    const lastScreenVariantsRef = React.useRef<string[]>(\n      curScreenVariants || []\n    );\n\n    // We do useLayoutEffect instead of useEffect to immediately\n    // register our forceUpdate. This ensures that if there was\n    // a window resize event between render and effects, that the\n    // listener will be registered in time\n    useIsomorphicLayoutEffect(() => {\n      const updateIfChanged = () => {\n        if (\n          curScreenVariants &&\n          lastScreenVariantsRef.current.join(\"\") !== curScreenVariants.join(\"\")\n        ) {\n          lastScreenVariantsRef.current = curScreenVariants;\n          // Force update\n          updateState({});\n        }\n      };\n\n      // Listeners are invoked whenever the window is resized\n      listeners.push(updateIfChanged);\n\n      // Initialize the curScreenVariants for the first time.  We don't need\n      // to invoke the listeners here because all components will already\n      // have this effect running and will re-render if the real screen\n      // variant is non-empty.\n      ensureInitCurScreenVariants();\n\n      // Now, if the curScreenVariants differs from what we returned last,\n      // then force a re-render.\n      updateIfChanged();\n      return () => {\n        // Remove our listener on unmount\n        listeners.splice(listeners.indexOf(updateIfChanged), 1);\n      };\n    }, []);\n\n    if (isMulti) {\n      return curScreenVariants || [];\n    } else if (curScreenVariants) {\n      return curScreenVariants[curScreenVariants.length - 1];\n    } else {\n      return undefined;\n    }\n  };\n}\n","import * as React from \"react\";\nimport { useFocusRing as useAriaFocusRing } from \"@react-aria/focus\";\n\nfunction useFocused(opts: { isTextInput?: boolean }) {\n  const { isFocused, focusProps } = useAriaFocusRing({\n    within: false,\n    isTextInput: opts.isTextInput,\n  });\n\n  return [isFocused, focusProps];\n}\n\nfunction useFocusVisible(opts: { isTextInput?: boolean }) {\n  const { isFocusVisible, focusProps } = useAriaFocusRing({\n    within: false,\n    isTextInput: opts.isTextInput,\n  });\n\n  return [isFocusVisible, focusProps];\n}\n\nfunction useFocusedWithin(opts: { isTextInput?: boolean }) {\n  const { isFocused, focusProps } = useAriaFocusRing({\n    within: true,\n    isTextInput: opts.isTextInput,\n  });\n\n  return [isFocused, focusProps];\n}\n\nfunction useFocusVisibleWithin(opts: { isTextInput?: boolean }) {\n  const { isFocusVisible, focusProps } = useAriaFocusRing({\n    within: true,\n    isTextInput: opts.isTextInput,\n  });\n\n  return [isFocusVisible, focusProps];\n}\n\nfunction useHover() {\n  const [isHover, setHover] = React.useState(false);\n  return [\n    isHover,\n    {\n      onMouseEnter: () => setHover(true),\n      onMouseLeave: () => setHover(false),\n    },\n  ];\n}\n\nfunction usePressed() {\n  const [isPressed, setPressed] = React.useState(false);\n  return [\n    isPressed,\n    {\n      onMouseDown: () => setPressed(true),\n      onMouseUp: () => setPressed(false),\n    },\n  ];\n}\n\nconst TRIGGER_TO_HOOK = {\n  useHover,\n  useFocused,\n  useFocusVisible,\n  useFocusedWithin,\n  useFocusVisibleWithin,\n  usePressed,\n} as const;\n\ntype TriggerType = keyof typeof TRIGGER_TO_HOOK;\n\ninterface TriggerOpts {\n  isTextInput?: boolean;\n}\n\n/**\n * Installs argment trigger. All the useTrigger calls must use hardcoded `trigger` arg,\n * as it's not valid to install variable React hooks!\n */\nexport function useTrigger(trigger: TriggerType, opts: TriggerOpts) {\n  return TRIGGER_TO_HOOK[trigger](opts) as [\n    boolean,\n    React.HTMLAttributes<HTMLElement>\n  ];\n}\n","import { StateSpecNode } from \"./graph\";\n\nexport type InitFuncEnv = {\n  $props: Record<string, any>;\n  $state: Record<string, any>;\n  $queries?: Record<string, any>;\n  $ctx?: Record<string, any>;\n};\n\nexport type DollarStateEnv = Omit<InitFuncEnv, \"$state\">;\n\nexport type NoUndefinedField<T> = { [P in keyof T]-?: T[P] };\n\nexport type InitFunc<T> = (env: NoUndefinedField<InitFuncEnv>) => T;\n\nexport type DeprecatedInitFunc<T> = (\n  $props: Record<string, any>,\n  $state: $State,\n  $ctx: Record<string, any>\n) => T;\n\nexport type ObjectPath = (string | number)[];\n\nexport interface $StateSpec<T> {\n  // path of the state, like `count` or `list.selectedIndex`\n  path: string;\n  // if initial value is defined by a js expression\n  initFunc?: InitFunc<T>;\n  // if initial value is a hard-coded value\n  initVal?: T;\n  // Whether this state is private, readonly, or writable in\n  // this component\n  type: \"private\" | \"readonly\" | \"writable\";\n\n  // If writable, there should be a valueProp that maps props[valueProp]\n  // to the value of the state\n  valueProp?: string;\n\n  // If writable or readonly, there should be an onChangeProp where\n  // props[onChangeProp] is invoked whenever the value changes\n  onChangeProp?: string;\n\n  isImmutable?: boolean;\n\n  variableType: \"text\" | \"number\" | \"boolean\" | \"array\" | \"object\" | \"variant\";\n\n  // Hash used to re-create the state\n  // This is only used in canvas where the state specs are dynamic\n  initFuncHash?: string;\n}\n\nexport interface $State {\n  [key: string]: any;\n  registerInitFunc?: (\n    path: string,\n    f: InitFunc<any>,\n    repetitonIndex?: number[],\n    overrideEnv?: DollarStateEnv\n  ) => any;\n}\n\nexport const ARRAY_SYMBOL = Symbol(\"[]\");\nexport const PLASMIC_STATE_PROXY_SYMBOL = Symbol(\"plasmic.state.proxy\");\nexport const UNINITIALIZED = Symbol(\"plasmic.unitialized\");\n\nexport interface Internal$StateSpec<T> extends $StateSpec<T> {\n  isRepeated: boolean;\n  pathObj: (string | symbol)[];\n}\n\nexport interface Internal$StateInstance {\n  path: ObjectPath; // [\"counter\", 0, \"count\"]\n  specKey: string;\n}\n\nexport interface StateCell<T> {\n  initialValue?: T | Symbol;\n  node: StateSpecNode<any>;\n  path: ObjectPath;\n  initFunc?: InitFunc<T>;\n  listeners: (() => void)[];\n  initFuncHash: string;\n  overrideEnv?: NoUndefinedField<DollarStateEnv>;\n}\n\nexport interface Internal$State {\n  registrationsQueue: {\n    node: StateSpecNode<any>;\n    path: ObjectPath;\n    f: InitFunc<any>;\n    overrideEnv?: NoUndefinedField<DollarStateEnv>;\n  }[];\n  stateValues: Record<string, any>;\n  env: NoUndefinedField<DollarStateEnv>;\n  rootSpecTree: StateSpecNode<any>;\n  specTreeLeaves: StateSpecNode<any>[];\n  specs: $StateSpec<any>[];\n  stateInitializationEnv: {\n    stack: string[];\n    visited: Set<string>;\n  };\n}\n","export class CustomError extends Error {\n  name: string;\n  constructor(msg?: string) {\n    super(msg);\n    this.name = this.constructor.name;\n    ({ message: this.message, stack: this.stack } = this);\n  }\n}\n\nexport class CyclicStatesReferencesError extends Error {\n  constructor(stateAccessCycle: string[]) {\n    super(\n      \"Cyclic reference found in state initialization: \" +\n        stateAccessCycle.join(\" -> \")\n    );\n  }\n}\n\nexport class InvalidOperation extends Error {\n  constructor(msg: string) {\n    super(msg);\n  }\n}\n\nexport class UnknownError extends Error {\n  constructor(msg: string) {\n    super(msg);\n  }\n}\n","import { isNum, shallowEqual } from \"./helpers\";\nimport {\n  $StateSpec,\n  ARRAY_SYMBOL,\n  Internal$StateSpec,\n  ObjectPath,\n} from \"./types\";\n\nexport class StateSpecNode<T> {\n  private _specs: Internal$StateSpec<T>[];\n  private _edges: Map<string | symbol, StateSpecNode<any>>;\n\n  constructor(specs: Internal$StateSpec<T>[]) {\n    this._specs = specs;\n    this._edges = new Map();\n  }\n\n  setSpecs(specs: Internal$StateSpec<T>[]) {\n    this._specs = specs;\n  }\n\n  edges() {\n    return this._edges;\n  }\n\n  hasEdge(key: string | symbol) {\n    return this._edges.has(key);\n  }\n\n  addEdge(key: string | symbol, node: StateSpecNode<any>) {\n    this._edges.set(key, node);\n  }\n\n  clearEdges() {\n    this._edges = new Map();\n  }\n\n  children() {\n    return this._edges.values();\n  }\n\n  makeTransition(key: string | symbol | number) {\n    key = isNum(key) ? ARRAY_SYMBOL : key;\n    return this._edges.get(key);\n  }\n\n  isLeaf() {\n    return this._edges.size === 0 && this.getAllSpecs().length > 0;\n  }\n\n  hasArrayTransition() {\n    return this._edges.has(ARRAY_SYMBOL);\n  }\n\n  getSpec() {\n    return this._specs[0];\n  }\n\n  getAllSpecs() {\n    return this._specs;\n  }\n}\n\nexport const transformPathStringToObj = (str: string) => {\n  const splitStatePathPart = (state: string): (string | symbol)[] =>\n    state.endsWith(\"[]\")\n      ? [...splitStatePathPart(state.slice(0, -2)), ARRAY_SYMBOL]\n      : [state];\n  return str.split(\".\").flatMap(splitStatePathPart);\n};\n\nexport function buildTree(specs: $StateSpec<any>[]) {\n  const internalSpec = specs.map(\n    (spec) =>\n      ({\n        ...spec,\n        pathObj: transformPathStringToObj(spec.path),\n        isRepeated: spec.path.split(\".\").some((part) => part.endsWith(\"[]\")),\n      } as Internal$StateSpec<any>)\n  );\n\n  const rec = (currentPath: (string | symbol)[]): StateSpecNode<any> => {\n    const node = new StateSpecNode(\n      internalSpec.filter((spec) =>\n        shallowEqual(currentPath, spec.pathObj.slice(0, currentPath.length))\n      )!\n    );\n    node.getAllSpecs().forEach((spec) => {\n      if (spec.pathObj.length > currentPath.length) {\n        const nextKey = spec.pathObj[currentPath.length];\n        if (!node.hasEdge(nextKey)) {\n          node.addEdge(nextKey, rec([...currentPath, nextKey]));\n        }\n      }\n    });\n    return node;\n  };\n\n  return rec([]);\n}\n\nexport function updateTree(root: StateSpecNode<any>, specs: $StateSpec<any>[]) {\n  const internalSpec = specs.map(\n    (spec) =>\n      ({\n        ...spec,\n        pathObj: transformPathStringToObj(spec.path),\n        isRepeated: spec.path.split(\".\").some((part) => part.endsWith(\"[]\")),\n      } as Internal$StateSpec<any>)\n  );\n\n  const rec = (\n    oldNode: StateSpecNode<any> | undefined,\n    currentPath: (string | symbol)[]\n  ): StateSpecNode<any> => {\n    const nodeSpecs = internalSpec.filter((spec) =>\n      shallowEqual(currentPath, spec.pathObj.slice(0, currentPath.length))\n    )!;\n    const node = oldNode ?? new StateSpecNode(nodeSpecs);\n    node.setSpecs(nodeSpecs);\n    const oldEdges = oldNode?.edges();\n    node.clearEdges();\n    node.getAllSpecs().forEach((spec) => {\n      if (spec.pathObj.length > currentPath.length) {\n        const nextKey = spec.pathObj[currentPath.length];\n        if (!node.hasEdge(nextKey)) {\n          node.addEdge(\n            nextKey,\n            rec(oldEdges?.get(nextKey), [...currentPath, nextKey])\n          );\n        }\n      }\n    });\n    return node;\n  };\n\n  return rec(root, []);\n}\n\nexport function getSpecTreeLeaves(root: StateSpecNode<any>) {\n  const leaves: StateSpecNode<any>[] = [];\n  const rec = (node: StateSpecNode<any>) => {\n    for (const child of node.children()) {\n      rec(child);\n    }\n    if (node.isLeaf() && node.getAllSpecs().length > 0) {\n      leaves.push(node);\n    }\n  };\n  rec(root);\n  return leaves;\n}\n\nexport function findStateCell(\n  root: StateSpecNode<any>,\n  pathStr: string,\n  repetitionIndex?: number[]\n) {\n  const realPath: ObjectPath = [];\n  const pathObj = transformPathStringToObj(pathStr);\n  let currRepIndex = 0;\n  for (const part of pathObj) {\n    if (typeof part === \"symbol\") {\n      if (\n        !root.hasArrayTransition() ||\n        !repetitionIndex ||\n        currRepIndex > repetitionIndex.length\n      ) {\n        throw new Error(\n          `transition not found: pathStr ${pathStr} part ${\n            typeof part === \"symbol\" ? \"[]\" : part\n          }`\n        );\n      }\n      realPath.push(repetitionIndex[currRepIndex++]);\n      root = root.makeTransition(ARRAY_SYMBOL)!;\n    } else {\n      if (!root.hasEdge(part)) {\n        throw new Error(\n          `transition not found: pathStr ${pathStr} part ${\n            typeof part === \"symbol\" ? \"[]\" : part\n          }`\n        );\n      }\n      realPath.push(part);\n      root = root.makeTransition(part)!;\n    }\n  }\n  return {\n    node: root,\n    realPath,\n  };\n}\n","import clone from \"clone\";\nimport get from \"dlv\";\nimport deepEqual from \"fast-deep-equal\";\nimport React from \"react\";\nimport {\n  getVersion as isValtioProxy,\n  proxy as createValtioProxy,\n  ref,\n  subscribe,\n  useSnapshot,\n} from \"valtio\";\nimport { ensure } from \"../common\";\nimport {\n  CyclicStatesReferencesError,\n  InvalidOperation,\n  UnknownError,\n} from \"./errors\";\nimport {\n  buildTree,\n  findStateCell,\n  getSpecTreeLeaves,\n  StateSpecNode,\n  updateTree,\n} from \"./graph\";\nimport {\n  arrayEq,\n  getStateCells,\n  set,\n  useIsomorphicLayoutEffect,\n} from \"./helpers\";\nimport {\n  $State,\n  $StateSpec,\n  DeprecatedInitFunc,\n  DollarStateEnv,\n  InitFunc,\n  InitFuncEnv,\n  Internal$State,\n  NoUndefinedField,\n  ObjectPath,\n  PLASMIC_STATE_PROXY_SYMBOL,\n  StateCell,\n  UNINITIALIZED,\n} from \"./types\";\n\nfunction isNum(value: string | number | symbol): value is number {\n  return typeof value === \"symbol\" ? false : !isNaN(+value);\n}\n\nfunction canProxy(value: any) {\n  return typeof value === \"object\" && value != null;\n}\n\nexport const proxyObjToStateCell = new WeakMap<\n  object,\n  Record<string | number | symbol, StateCell<any>>\n>();\nexport const valtioSubscriptions = new WeakMap<\n  object,\n  ReturnType<typeof subscribe>[]\n>();\n\nfunction ensureStateCell(\n  target: any,\n  property: string | number | symbol,\n  path: ObjectPath,\n  node: StateSpecNode<any>\n) {\n  if (!proxyObjToStateCell.has(target)) {\n    proxyObjToStateCell.set(target, {});\n  }\n  const stateCell = proxyObjToStateCell.get(target)!;\n  if (!(property in stateCell)) {\n    stateCell[property as any] = {\n      listeners: [],\n      initialValue: UNINITIALIZED,\n      path,\n      node,\n      initFunc: node.getSpec().initFunc,\n      initFuncHash: node.getSpec().initFuncHash ?? \"\",\n    };\n  }\n  return stateCell[property as any];\n}\n\nfunction getStateCell(target: any, property: string | number | symbol) {\n  return proxyObjToStateCell.get(target)?.[property as any];\n}\n\nexport function tryGetStateCellFrom$StateRoot(\n  $state: $State,\n  path: ObjectPath\n) {\n  if (path.length === 0) {\n    throw new UnknownError(\"expected a path with length greater than 0\");\n  }\n  const target = get($state, path.slice(0, -1));\n  get(target, path.slice(-1)); // create state cell;\n  return getStateCell(target, path.slice(-1)[0]);\n}\n\nexport function getStateCellFrom$StateRoot($state: $State, path: ObjectPath) {\n  return ensure(tryGetStateCellFrom$StateRoot($state, path));\n}\n\nexport function unsubscribeToValtio(\n  $$state: Internal$State,\n  statePath: ObjectPath\n) {\n  const oldValue = get($$state.stateValues, statePath);\n  if (isValtioProxy(oldValue)) {\n    valtioSubscriptions.get(oldValue)?.forEach((f) => f());\n    valtioSubscriptions.delete(oldValue);\n  }\n}\n\nexport function subscribeToValtio(\n  $$state: Internal$State,\n  statePath: ObjectPath,\n  node: StateSpecNode<any>\n) {\n  const spec = node.getSpec();\n  const maybeValtioProxy = spec.valueProp\n    ? $$state.env.$props[spec.valueProp]\n    : get($$state.stateValues, statePath);\n  if (isValtioProxy(maybeValtioProxy) && spec.onChangeProp) {\n    const unsub = subscribe(maybeValtioProxy, () => {\n      $$state.env.$props[spec.onChangeProp!]?.(\n        spec.valueProp\n          ? $$state.env.$props[spec.valueProp]\n          : get($$state.stateValues, statePath)\n      );\n    });\n    if (!valtioSubscriptions.has(maybeValtioProxy)) {\n      valtioSubscriptions.set(maybeValtioProxy, []);\n    }\n    ensure(valtioSubscriptions.get(maybeValtioProxy)).push(unsub);\n  }\n}\n\nfunction initializeStateValue(\n  $$state: Internal$State,\n  initialStateCell: StateCell<any>,\n  proxyRoot: any\n) {\n  const initialStateName = initialStateCell.node.getSpec().path;\n  const stateAccess: Set<{\n    stateCell: StateCell<any>;\n  }> = new Set();\n  $$state.stateInitializationEnv.visited.add(initialStateName);\n  $$state.stateInitializationEnv.stack.push(initialStateName);\n  const $state = create$StateProxy($$state, (internalStateCell) => ({\n    get() {\n      const spec = internalStateCell.node.getSpec();\n      if ($$state.stateInitializationEnv.visited.has(spec.path)) {\n        // cyclic reference found\n        const stateAccessCycle: string[] = [spec.path];\n        while ($$state.stateInitializationEnv.stack.length > 0) {\n          const curr = $$state.stateInitializationEnv.stack.pop();\n          if (!curr) {\n            break;\n          }\n          stateAccessCycle.push(curr);\n          if (curr === spec.path) {\n            throw new CyclicStatesReferencesError(stateAccessCycle);\n          }\n        }\n        throw new UnknownError(\"Internal error: cycle not found\");\n      }\n\n      const stateCell = getStateCellFrom$StateRoot(\n        proxyRoot,\n        internalStateCell.path\n      );\n      stateAccess.add({ stateCell });\n      if (spec.valueProp) {\n        return $$state.env.$props[spec.valueProp];\n      } else if (spec.initFunc && stateCell.initialValue === UNINITIALIZED) {\n        return initializeStateValue($$state, stateCell, proxyRoot);\n      }\n      return get(proxyRoot, stateCell.path);\n    },\n    set() {\n      throw new InvalidOperation(\n        `Cannot update state values during initialization`\n      );\n    },\n  }));\n\n  stateAccess.forEach(({ stateCell }) => {\n    stateCell.listeners.push(() => {\n      const newValue = invokeInitFuncBackwardsCompatible(\n        initialStateCell.node.getSpec().initFunc!,\n        {\n          $state,\n          ...(initialStateCell.overrideEnv ?? $$state.env),\n        }\n      );\n      set(proxyRoot, initialStateCell.path, newValue);\n    });\n  });\n\n  const initialValue = invokeInitFuncBackwardsCompatible(\n    initialStateCell.initFunc!,\n    {\n      $state,\n      ...(initialStateCell.overrideEnv ?? $$state.env),\n    }\n  );\n  initialStateCell.initialValue = clone(initialValue);\n\n  const initialSpec = initialStateCell.node.getSpec();\n  const value = initialSpec.isImmutable\n    ? mkUntrackedValue(initialValue)\n    : clone(initialValue);\n  set(proxyRoot, initialStateCell.path, value);\n  //immediately fire onChange\n  if (initialSpec.onChangeProp) {\n    $$state.env.$props[initialSpec.onChangeProp]?.(initialValue);\n  }\n  $$state.stateInitializationEnv.visited.delete(initialStateName);\n  $$state.stateInitializationEnv.stack.pop();\n  return initialValue;\n}\n\nfunction create$StateProxy(\n  $$state: Internal$State,\n  leafHandlers: (stateCell: StateCell<any>) => ProxyHandler<any>\n) {\n  let proxyRoot: any;\n  const rec = (currPath: ObjectPath, currNode: StateSpecNode<any>) => {\n    const getNextPath = (property: string | number | symbol) => [\n      ...currPath,\n      isNum(property) ? +property : (property as string),\n    ];\n    const spec = currNode.getSpec();\n    const handlers: ProxyHandler<any> = {\n      deleteProperty(target, property) {\n        if (\n          !currNode.isLeaf() &&\n          !currNode.hasArrayTransition() &&\n          !isNum(property)\n        ) {\n          throw new InvalidOperation(\n            \"Can't delete a property in the middle of the state spec\"\n          );\n        }\n        delete get($$state.stateValues, currPath)[property];\n        if (spec.onChangeProp) {\n          //we are always in a leaf, since we only have two cases:\n          // 1 - delete properties outside the state tree\n          // 2 - delete indices in repeated implicit states, but these can't be exposed, so they don't have onChangeProp\n          $$state.env.$props[spec.onChangeProp]?.(\n            get(proxyRoot, currPath.slice(spec.pathObj.length))\n          );\n        }\n        return Reflect.deleteProperty(target, property);\n      },\n      get(target, property, receiver) {\n        if (property === PLASMIC_STATE_PROXY_SYMBOL) {\n          return {\n            node: currNode,\n            path: currPath,\n          };\n        }\n        const nextPath = getNextPath(property);\n\n        const nextNode = currNode.makeTransition(property);\n        if (nextNode?.isLeaf()) {\n          return leafHandlers(\n            ensureStateCell(receiver, property, nextPath, nextNode)\n          ).get?.(target, property, receiver);\n        } else if (nextNode && !(property in target)) {\n          target[property] = rec(nextPath, nextNode);\n        }\n        return Reflect.get(target, property, receiver);\n      },\n      set(target, property, value, receiver) {\n        const nextPath = getNextPath(property);\n        let nextNode = currNode.makeTransition(property);\n        const nextSpec = nextNode?.getSpec();\n\n        if (property === \"registerInitFunc\" && currPath.length === 0) {\n          return Reflect.set(target, property, value, receiver);\n        }\n        if (!nextNode && currNode.hasArrayTransition()) {\n          set($$state.stateValues, nextPath, value);\n          //array can set his own properties such as length, map, ...\n          return Reflect.set(target, property, value, receiver);\n        }\n        if (nextNode?.isLeaf()) {\n          leafHandlers(\n            ensureStateCell(receiver, property, nextPath, nextNode)\n          ).set?.(target, property, value, receiver);\n          Reflect.set(target, property, value, receiver);\n          if (nextSpec?.onChangeProp) {\n            $$state.env.$props[nextSpec.onChangeProp]?.(value);\n          }\n        }\n        if (!nextNode) {\n          // can't set an unknown field in $state\n          return false;\n        }\n        if (canProxy(value) && !nextNode.isLeaf()) {\n          target[property] = rec(nextPath, nextNode);\n          Reflect.ownKeys(value).forEach((key) => {\n            target[property][key] = value[key];\n          });\n        } else if (!nextNode.isLeaf()) {\n          throw new InvalidOperation(\n            \"inserting a primitive value into a non-leaf\"\n          );\n        }\n        const newValue =\n          nextNode.isLeaf() && nextSpec?.isImmutable\n            ? mkUntrackedValue(value)\n            : value;\n\n        unsubscribeToValtio($$state, nextPath);\n        set($$state.stateValues, nextPath, newValue);\n        subscribeToValtio($$state, nextPath, nextNode);\n        return true;\n      },\n    };\n    const baseObject = currNode.hasArrayTransition() ? [] : {};\n    const proxyObj = new Proxy(baseObject, handlers);\n    if (currPath.length === 0) {\n      proxyRoot = proxyObj;\n    }\n    return proxyObj;\n  };\n\n  return rec([], $$state.rootSpecTree);\n}\n\nconst mkUntrackedValue = (o: any) =>\n  o != null && typeof o === \"object\" ? ref(o) : o;\n\nconst envFieldsAreNonNill = (\n  env: DollarStateEnv\n): NoUndefinedField<DollarStateEnv> => ({\n  $props: env.$props,\n  $ctx: env.$ctx ?? {},\n  $queries: env.$queries ?? {},\n});\n\n/**\n * We need to support two versions with different parameters to be backward compatible\n *    {\n *       specs: $StateSpec<any>[],\n *       props: Record<string, any>,\n *       $ctx?: Record<string, any>,\n *       opts?: { inCanvas: boolean; }\n *    }\n *    {\n *       specs: $StateSpec<any>[],\n *       env: { $props; $queries; $ctx },\n *       opts?: { inCanvas: boolean }\n *    }\n */\nfunction extractDollarStateParametersBackwardCompatible(\n  ...rest: any[]\n): {\n  env: DollarStateEnv;\n  opts?: { inCanvas: boolean };\n} {\n  if (\"$props\" in rest[0]) {\n    // latest version\n    return {\n      env: rest[0],\n      opts: rest[1],\n    };\n  } else {\n    return {\n      env: {\n        $props: rest[0],\n        $ctx: rest[1],\n        $queries: {},\n      },\n      opts: rest[2],\n    };\n  }\n}\n\nfunction invokeInitFuncBackwardsCompatible<T>(\n  initFunc: InitFunc<T> | DeprecatedInitFunc<T>,\n  env: NoUndefinedField<InitFuncEnv>\n) {\n  if (initFunc.length > 1) {\n    return (initFunc as DeprecatedInitFunc<T>)(\n      env.$props,\n      env.$state,\n      env.$ctx\n    );\n  } else {\n    return (initFunc as InitFunc<T>)(env);\n  }\n}\n\nexport function useDollarState(\n  specs: $StateSpec<any>[],\n  ...rest: any[]\n): $State {\n  const { env, opts } = extractDollarStateParametersBackwardCompatible(...rest);\n  const $$state = React.useRef<Internal$State>(\n    (() => {\n      const rootSpecTree = buildTree(specs);\n      return {\n        rootSpecTree: rootSpecTree,\n        specTreeLeaves: getSpecTreeLeaves(rootSpecTree),\n        stateValues: createValtioProxy({}),\n        env: envFieldsAreNonNill(env),\n        specs: [],\n        registrationsQueue: createValtioProxy([]),\n        stateInitializationEnv: { stack: [], visited: new Set<string>() },\n      };\n    })()\n  ).current;\n  $$state.env = envFieldsAreNonNill(env);\n  $$state.specs = specs;\n\n  const create$State = React.useCallback(() => {\n    const $state = Object.assign(\n      create$StateProxy($$state, (stateCell) => {\n        const spec = stateCell.node.getSpec();\n        if (stateCell.initialValue === UNINITIALIZED && spec.initFunc) {\n          initializeStateValue($$state, stateCell, $state);\n        } else if (\n          stateCell.initialValue === UNINITIALIZED &&\n          !spec.valueProp\n        ) {\n          stateCell.initialValue = spec.initVal;\n          set($state, stateCell.path, spec.initVal);\n        }\n        return {\n          get() {\n            const spec = stateCell.node.getSpec();\n            if (spec.valueProp) {\n              const valueProp = $$state.env.$props[spec.valueProp];\n              subscribeToValtio($$state, stateCell.path, stateCell.node);\n              return valueProp;\n            } else {\n              return get($$state.stateValues, stateCell.path);\n            }\n          },\n        };\n      }),\n      {\n        registerInitFunc: function <T>(\n          pathStr: string,\n          f: InitFunc<T>,\n          repetitionIndex?: number[],\n          overrideEnv?: DollarStateEnv\n        ) {\n          const { node, realPath } = findStateCell(\n            $$state.rootSpecTree,\n            pathStr,\n            repetitionIndex\n          );\n          const stateCell = getStateCellFrom$StateRoot($state, realPath);\n          const env = overrideEnv\n            ? envFieldsAreNonNill(overrideEnv)\n            : $$state.env;\n          if (!deepEqual(stateCell.initialValue, f({ $state, ...env }))) {\n            $$state.registrationsQueue.push(\n              mkUntrackedValue({\n                node,\n                path: realPath,\n                f,\n                overrideEnv: overrideEnv\n                  ? envFieldsAreNonNill(overrideEnv)\n                  : undefined,\n              })\n            );\n          }\n        },\n      }\n    );\n    return $state;\n  }, []);\n  const ref = React.useRef<undefined | $State>(undefined);\n  if (!ref.current) {\n    ref.current = create$State();\n  }\n  let $state = ref.current as $State;\n  if (opts?.inCanvas) {\n    $$state.rootSpecTree = updateTree($$state.rootSpecTree, specs);\n    const newLeaves = getSpecTreeLeaves($$state.rootSpecTree);\n    if (!arrayEq(newLeaves, $$state.specTreeLeaves)) {\n      const old$state = $state;\n      $state = ref.current = create$State();\n      $$state.specTreeLeaves = newLeaves;\n      getStateCells(old$state, $$state.rootSpecTree).forEach(({ path }) => {\n        const oldStateCell = tryGetStateCellFrom$StateRoot(old$state, path);\n        if (oldStateCell) {\n          set($state, path, get(old$state, path));\n          const newStateCell = getStateCellFrom$StateRoot($state, path);\n          newStateCell.initialValue = oldStateCell.initialValue;\n        }\n      });\n    }\n    // we need to eager initialize all states in canvas to populate the data picker\n    $$state.specTreeLeaves.forEach((node) => {\n      const spec = node.getSpec();\n      if (spec.isRepeated) {\n        return;\n      }\n      const stateCell = getStateCellFrom$StateRoot(\n        $state,\n        spec.pathObj as string[]\n      );\n      const newSpec = specs.find((sp) => sp.path === spec.path);\n      if (\n        !newSpec ||\n        (stateCell.initFuncHash === (newSpec?.initFuncHash ?? \"\") &&\n          stateCell.initialValue !== UNINITIALIZED)\n      ) {\n        return;\n      }\n      stateCell.initFunc = newSpec.initFunc;\n      stateCell.initFuncHash = newSpec.initFuncHash ?? \"\";\n      const init = spec.valueProp\n        ? $$state.env.$props[spec.valueProp]\n        : spec.initFunc\n        ? initializeStateValue($$state, stateCell, $state)\n        : spec.initVal;\n      set($state, spec.pathObj, init);\n    });\n  }\n\n  // For each spec with an initFunc, evaluate it and see if\n  // the init value has changed. If so, reset its state.\n  const resetSpecs: {\n    stateCell: StateCell<any>;\n  }[] = [];\n  getStateCells($state, $$state.rootSpecTree).forEach((stateCell) => {\n    if (stateCell.initFunc) {\n      const newInit = invokeInitFuncBackwardsCompatible(stateCell.initFunc, {\n        $state,\n        ...(stateCell.overrideEnv ?? envFieldsAreNonNill(env)),\n      });\n      if (!deepEqual(newInit, stateCell.initialValue)) {\n        resetSpecs.push({ stateCell });\n      }\n    }\n  });\n  const reInitializeState = (stateCell: StateCell<any>) => {\n    const newInit = initializeStateValue($$state, stateCell, $state);\n    const spec = stateCell.node.getSpec();\n    if (spec.onChangeProp) {\n      $$state.env.$props[spec.onChangeProp]?.(newInit);\n    }\n  };\n  useIsomorphicLayoutEffect(() => {\n    resetSpecs.forEach(({ stateCell }) => {\n      reInitializeState(stateCell);\n    });\n  }, [env.$props, resetSpecs]);\n  useIsomorphicLayoutEffect(() => {\n    while ($$state.registrationsQueue.length) {\n      const { path, f, overrideEnv } = $$state.registrationsQueue.shift()!;\n      const stateCell = getStateCellFrom$StateRoot($state, path);\n      stateCell.initFunc = f;\n      stateCell.overrideEnv = overrideEnv;\n      reInitializeState(stateCell);\n    }\n  }, [$$state.registrationsQueue.length]);\n  // immediately initialize exposed non-private states\n  useIsomorphicLayoutEffect(() => {\n    $$state.specTreeLeaves.forEach((node) => {\n      const spec = node.getSpec();\n      if (!spec.isRepeated && spec.type !== \"private\" && spec.initFunc) {\n        const stateCell = getStateCellFrom$StateRoot(\n          $state,\n          spec.pathObj as ObjectPath\n        );\n        initializeStateValue($$state, stateCell, $state);\n      }\n    });\n  }, []);\n\n  // Re-render if any value changed in one of these objects\n  useSnapshot($$state.stateValues, { sync: true });\n  useSnapshot($$state.registrationsQueue, { sync: true });\n  return $state;\n}\n\nexport default useDollarState;\n","import type { ComponentHelpers } from \"@plasmicapp/host\";\nimport get from \"dlv\";\nimport { useEffect, useLayoutEffect } from \"react\";\nimport { getVersion as isValtioProxy } from \"valtio\";\nimport { ensure } from \"../common\";\nimport { StateSpecNode } from \"./graph\";\nimport {\n  $State,\n  ARRAY_SYMBOL,\n  InitFunc,\n  ObjectPath,\n  PLASMIC_STATE_PROXY_SYMBOL,\n  StateCell,\n} from \"./types\";\nimport { proxyObjToStateCell, tryGetStateCellFrom$StateRoot } from \"./valtio\";\n\nexport function initializeCodeComponentStates(\n  $state: $State,\n  states: {\n    name: string;\n    plasmicStateName: string;\n  }[],\n  repetitionIndex: number[],\n  componentHelpers: ComponentHelpers<any>,\n  child$Props: Record<string, any>\n) {\n  const stateHelpers = componentHelpers?.states ?? {};\n  for (const { name, plasmicStateName } of states) {\n    if (name in stateHelpers && \"initFunc\" in stateHelpers[name]) {\n      $state.registerInitFunc?.(\n        plasmicStateName,\n        ({ $props }) => stateHelpers[name].initFunc?.($props),\n        repetitionIndex ?? [],\n        { $props: child$Props }\n      );\n    }\n  }\n}\n\nexport function initializePlasmicStates(\n  $state: $State,\n  states: {\n    name: string;\n    initFunc: InitFunc<any>;\n  }[],\n  repetitionIndex: number[]\n) {\n  for (const { name, initFunc } of states) {\n    $state.registerInitFunc?.(name, initFunc, repetitionIndex ?? []);\n  }\n}\n\nexport function generateStateOnChangeProp(\n  $state: $State,\n  path: ObjectPath\n): (val: any) => void {\n  return (val) => set($state, path, val);\n}\n\nexport function generateStateOnChangePropForCodeComponents(\n  $state: $State,\n  stateName: string,\n  plasmicStatePath: ObjectPath,\n  componentHelpers: ComponentHelpers<any>\n): (val: any) => void {\n  const onChangeArgsToValue =\n    componentHelpers?.states?.[stateName]?.onChangeArgsToValue;\n  if (!onChangeArgsToValue || typeof onChangeArgsToValue !== \"function\") {\n    return generateStateOnChangeProp($state, plasmicStatePath);\n  }\n  return (...args) =>\n    generateStateOnChangeProp(\n      $state,\n      plasmicStatePath\n    )(onChangeArgsToValue.apply(null, args));\n}\n\nexport function generateStateValueProp($state: $State, path: ObjectPath) {\n  return get($state, path);\n}\n\nexport const useIsomorphicLayoutEffect =\n  typeof window !== \"undefined\" ? useLayoutEffect : useEffect;\n\nexport function isPlasmicStateProxy(obj: any) {\n  return (\n    obj != null && typeof obj === \"object\" && !!obj[PLASMIC_STATE_PROXY_SYMBOL]\n  );\n}\n\nexport function is$StateProxy(obj: any) {\n  return (\n    obj != null &&\n    typeof obj === \"object\" &&\n    (!!obj[PLASMIC_STATE_PROXY_SYMBOL] || isValtioProxy(obj))\n  );\n}\n\nexport function getStateCells(\n  $state: $State,\n  root: StateSpecNode<any>\n): StateCell<any>[] {\n  if ($state == null || typeof $state !== \"object\") {\n    return [];\n  }\n\n  if (root.hasArrayTransition()) {\n    return Object.keys($state).flatMap((key) =>\n      getStateCells($state[key], ensure(root.makeTransition(ARRAY_SYMBOL)))\n    );\n  } else {\n    const stateCell = proxyObjToStateCell.get($state) ?? {};\n    const stateCells: StateCell<any>[] = [];\n    for (const [key, child] of root.edges().entries()) {\n      if (typeof key === \"string\" && key in $state) {\n        stateCells.push(...getStateCells($state[key], child));\n        if (key in stateCell) {\n          stateCells.push(stateCell[key]);\n        }\n      }\n    }\n    return stateCells;\n  }\n}\n\nexport function getStateCellsInPlasmicProxy(\n  obj: any\n): { realPath: ObjectPath; path: string }[] {\n  if (!isPlasmicStateProxy(obj)) {\n    return [];\n  }\n  const { node: rootNode, path: rootPath, isOutside } = obj[\n    PLASMIC_STATE_PROXY_SYMBOL\n  ];\n  if (isOutside) {\n    return [];\n  }\n  return getStateCells(obj, rootNode).map((stateCell) => ({\n    path: stateCell.node.getSpec().path,\n    realPath: stateCell.path.slice(rootPath.length),\n  }));\n}\n\nexport function getStateSpecInPlasmicProxy(obj: any, path: ObjectPath) {\n  obj = get(obj, path.slice(0, path.length - 1));\n  if (!isPlasmicStateProxy(obj)) {\n    return undefined;\n  }\n  const { node } = obj[PLASMIC_STATE_PROXY_SYMBOL] as {\n    node: StateSpecNode<any>;\n  };\n  const nextNode = node.makeTransition(path[path.length - 1]);\n  if (node.isLeaf() || !nextNode) {\n    return undefined;\n  }\n  return {\n    spec: nextNode.getSpec(),\n    isImplicitStateArray: nextNode.hasArrayTransition(),\n  };\n}\n\nexport function getCurrentInitialValue(obj: any, path: ObjectPath) {\n  if (!isPlasmicStateProxy(obj)) {\n    return undefined;\n  }\n  return tryGetStateCellFrom$StateRoot(obj, path)?.initialValue;\n}\n\nexport function resetToInitialValue(obj: any, path: ObjectPath) {\n  const stateCell = tryGetStateCellFrom$StateRoot(obj, path);\n  if (stateCell) {\n    set(obj, path, stateCell.initialValue);\n  }\n}\n\nexport function shallowEqual<T>(a1: T[], a2: T[]) {\n  if (a1.length !== a2.length) {\n    return false;\n  }\n  for (let i = 0; i < a1.length; i++) {\n    if (a1[i] !== a2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Shallow comparison of arrays.\n */\nexport function arrayEq(xs: ReadonlyArray<any>, ys: ReadonlyArray<any>) {\n  return (\n    xs.length === ys.length && xs.every((_, index) => xs[index] === ys[index])\n  );\n}\n\nexport function isNum(value: string | number | symbol): value is number {\n  return typeof value === \"symbol\" ? false : !isNaN(+value);\n}\n\ntype StringGen = string | (() => string);\nexport function assert<T>(\n  cond: T,\n  msg: StringGen = \"Assertion failed\"\n): asserts cond {\n  if (!cond) {\n    // We always generate an non empty message so that it doesn't get swallowed\n    // by the async library.\n    msg = (typeof msg === \"string\" ? msg : msg()) || \"Assertion failed\";\n    debugger;\n    throw new Error(msg);\n  }\n}\n\n/**\n * Forked from https://github.com/lukeed/dset\n * Changes: fixed setting a deep value to a proxy object\n */\nexport function set(obj: any, keys: any, val: any) {\n  keys = keys.split ? keys.split(\".\") : keys;\n  var i = 0,\n    l = keys.length,\n    t = obj,\n    x,\n    k;\n  while (i < l) {\n    k = keys[i++];\n    if (k === \"__proto__\" || k === \"constructor\" || k === \"prototype\") break;\n    const newValue =\n      i === l\n        ? val\n        : typeof (x = t[k]) === typeof keys\n        ? x\n        : keys[i] * 0 !== 0 || !!~(\"\" + keys[i]).indexOf(\".\")\n        ? {}\n        : [];\n    assignValue(t, k, newValue);\n    t = t[k];\n  }\n}\n\n/**\n * Forked from lodash\n */\nfunction baseAssignValue(object: any, key: any, value: any) {\n  if (key == \"__proto__\") {\n    Object.defineProperty(object, key, {\n      configurable: true,\n      enumerable: true,\n      value: value,\n      writable: true,\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nfunction eq(value: any, other: any) {\n  return value === other || (value !== value && other !== other);\n}\n\nfunction assignValue(object: any, key: any, value: any) {\n  const objValue = object[key];\n  if (\n    !(\n      Object.prototype.hasOwnProperty.call(object, key) && eq(objValue, value)\n    ) ||\n    (value === undefined && !(key in object))\n  ) {\n    baseAssignValue(object, key, value);\n  }\n}\n","// Utilities used by generated code\nimport _classNames from \"classnames\";\nexport {\n  PlasmicPageGuard,\n  withPlasmicPageGuard,\n} from \"./auth/PlasmicPageGuard\";\nexport { omit, pick } from \"./common\";\nexport { HTMLElementRefOf, StrictProps } from \"./react-utils\";\nexport {\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  Flex,\n  hasVariant,\n  makeFragment,\n  mergeVariantsWithStates,\n  MultiChoiceArg,\n  SingleBooleanChoiceArg,\n  SingleChoiceArg,\n  wrapWithClassName,\n} from \"./render/elements\";\nexport { ensureGlobalVariants } from \"./render/global-variants\";\nexport { PlasmicHead, plasmicHeadMeta } from \"./render/PlasmicHead\";\nexport { PlasmicIcon } from \"./render/PlasmicIcon\";\nexport { PlasmicImg } from \"./render/PlasmicImg\";\nexport { PlasmicLink } from \"./render/PlasmicLink\";\nexport { PlasmicSlot, renderPlasmicSlot } from \"./render/PlasmicSlot\";\nexport { createUseScreenVariants } from \"./render/screen-variants\";\nexport {\n  PlasmicDataSourceContextProvider,\n  PlasmicRootProvider,\n  useCurrentUser,\n  useIsSSR,\n} from \"./render/ssr\";\nexport { Stack } from \"./render/Stack\";\nexport { genTranslatableString, Trans } from \"./render/translation\";\nexport { useTrigger } from \"./render/triggers\";\nexport * from \"./states\";\nexport const classNames = _classNames;\n"],"names":["React","ReactDOM","useIsomorphicLayoutEffect","useAriaFocusRing","isNum","isValtioProxy","createValtioProxy","_classNames"],"mappings":"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"}