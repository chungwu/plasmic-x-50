{"version":3,"file":"react-web.cjs.production.min.js","sources":["../../../node_modules/regenerator-runtime/runtime.js","../src/auth/PlasmicPageGuard.tsx","../src/common.ts","../src/react-utils.tsx","../src/render/Stack.tsx","../src/render/elements.ts","../src/render/PlasmicHead/index.tsx","../src/render/PlasmicImg/index.tsx","../src/render/PlasmicLink.tsx","../src/render/translation.tsx","../src/render/PlasmicSlot.tsx","../src/render/screen-variants.ts","../src/render/ssr.tsx","../src/render/triggers.ts","../src/states/types.ts","../src/states/errors.ts","../src/states/graph.ts","../src/states/helpers.ts","../src/states/valtio.tsx","../src/index-common.tsx","../src/plume/plume-utils.ts","../src/plume/props-utils.ts","../src/plume/collection-utils.tsx","../src/plume/triggered-overlay/context.tsx","../src/plume/menu/context.tsx","../src/plume/menu/menu.tsx","../src/plume/menu-button/menu-trigger.tsx","../src/plume/select/context.tsx","../src/plume/select/select.tsx","../src/plume/menu-button/DropdownMenu.tsx","../src/render/PlasmicIcon.tsx","../src/render/global-variants.ts","../src/plume/button/index.tsx","../src/plume/checkbox/index.tsx","../src/plume/menu-button/menu-button.tsx","../src/plume/menu/menu-group.tsx","../src/plume/menu/menu-item.tsx","../src/plume/select/select-option.tsx","../src/plume/select/select-option-group.tsx","../src/plume/switch/index.tsx","../src/plume/text-input/index.tsx","../src/plume/triggered-overlay/triggered-overlay.tsx"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import { usePlasmicDataSourceContext } from \"@plasmicapp/data-sources-context\";\nimport React from \"react\";\n\n// https://stackoverflow.com/a/2117523\nfunction uuidv4() {\n  // @ts-ignore\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\n    (\n      c ^\n      (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\n    ).toString(16)\n  );\n}\n\nasync function triggerLogin(\n  appId: string,\n  authorizeEndpoint: string,\n  redirectUri?: string\n) {\n  async function sha256(text: string) {\n    const encoder = new TextEncoder();\n    const data = encoder.encode(text);\n    const hashBuffer = await crypto.subtle.digest(\"SHA-256\", data);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    const hashHex = hashArray\n      .map((b) => b.toString(16).padStart(2, \"0\"))\n      .join(\"\");\n    return hashHex;\n  }\n\n  const continueTo = window.location.href;\n  const state = JSON.stringify({ continueTo });\n  const code_verifier = uuidv4();\n  localStorage.setItem(\"code_verifier\", code_verifier);\n  const code_challenge = await sha256(code_verifier);\n\n  const params = new URLSearchParams();\n  params.set(\"client_id\", appId);\n  params.set(\"state\", state);\n  params.set(\"response_type\", \"code\");\n  params.set(\"code_challenge\", code_challenge);\n  params.set(\"code_challenge_method\", \"S256\");\n\n  if (redirectUri) {\n    params.set(\"redirect_uri\", redirectUri);\n  }\n\n  const url = `${authorizeEndpoint}?${params.toString()}`;\n  window.location.href = url;\n}\n\ninterface PlasmicPageGuardProps {\n  appId: string;\n  authorizeEndpoint: string;\n  minRole?: string;\n  canTriggerLogin: boolean;\n  children: React.ReactNode;\n}\n\nexport function PlasmicPageGuard(props: PlasmicPageGuardProps) {\n  const {\n    appId,\n    authorizeEndpoint,\n    minRole,\n    canTriggerLogin,\n    children,\n  } = props;\n\n  const dataSourceCtxValue = usePlasmicDataSourceContext();\n\n  React.useEffect(() => {\n    if (canTriggerLogin) {\n      if (\n        minRole &&\n        dataSourceCtxValue &&\n        \"isUserLoading\" in dataSourceCtxValue &&\n        !dataSourceCtxValue.isUserLoading &&\n        !dataSourceCtxValue.user\n      ) {\n        triggerLogin(\n          appId,\n          authorizeEndpoint,\n          dataSourceCtxValue.authRedirectUri\n        );\n      }\n    }\n  }, [dataSourceCtxValue, appId, authorizeEndpoint, canTriggerLogin, minRole]);\n\n  function canUserViewPage() {\n    if (!minRole) {\n      return true;\n    }\n    if (!dataSourceCtxValue) {\n      return false;\n    }\n    if (!dataSourceCtxValue.user) {\n      return false;\n    }\n    if (!(\"roleIds\" in dataSourceCtxValue.user)) {\n      return false;\n    }\n    if (!Array.isArray(dataSourceCtxValue.user.roleIds)) {\n      return false;\n    }\n    return dataSourceCtxValue.user.roleIds.includes(minRole);\n  }\n\n  if (\n    !dataSourceCtxValue ||\n    dataSourceCtxValue.isUserLoading ||\n    (!dataSourceCtxValue.user && minRole && canTriggerLogin)\n  ) {\n    return null;\n  }\n\n  if (!canUserViewPage()) {\n    return <div>You don't have access to this page</div>;\n  }\n\n  return <>{children}</>;\n}\n\nexport function withPlasmicPageGuard<P extends object>(\n  WrappedComponent: React.ComponentType<P>,\n  options: Omit<PlasmicPageGuardProps, \"children\">\n) {\n  const PageGuard: React.FC<P> = (props) => (\n    <PlasmicPageGuard {...options}>\n      <WrappedComponent {...props} />\n    </PlasmicPageGuard>\n  );\n  return PageGuard;\n}\n","export function notNil<T>(x: T | undefined | null): x is T {\n  return x != null;\n}\n\nexport function pick<T extends {}>(\n  obj: T,\n  ...keys: (string | number | symbol)[]\n): Partial<T> {\n  if (Object.keys(obj).length === 0) {\n    return obj;\n  }\n  const res: any = {};\n  for (const key of keys) {\n    if (key in obj) {\n      res[key] = obj[key as keyof T];\n    }\n  }\n  return res as Partial<T>;\n}\n\nexport function pickBy<T extends {}>(\n  obj: T,\n  func: (key: string, val: any) => boolean\n): Partial<T> {\n  const res: any = {};\n  for (const [key, val] of Object.entries(obj)) {\n    if (func(key, val)) {\n      res[key] = obj[key as keyof T];\n    }\n  }\n  return res as Partial<T>;\n}\n\nexport function omit<T extends {}>(obj: T, ...keys: (keyof T)[]): Partial<T> {\n  if (Object.keys(obj).length === 0) {\n    return obj;\n  }\n  const res: Partial<T> = {};\n  for (const key of Object.keys(obj) as (keyof T)[]) {\n    if (!keys.includes(key)) {\n      res[key] = obj[key];\n    }\n  }\n  return res;\n}\n\nexport function isSubset<T>(a1: T[], a2: T[]) {\n  return a1.every((x) => a2.includes(x));\n}\n\nexport function chainSingleArgFuncs<A>(...funcs: ((arg: A) => A)[]) {\n  if (funcs.length === 0) {\n    return undefined;\n  }\n  return (arg: A) => {\n    let res: A = arg;\n    for (const func of funcs) {\n      res = func(res);\n    }\n    return res;\n  };\n}\n\nexport function ensure<T>(x: T | null | undefined): T {\n  if (x === null || x === undefined) {\n    debugger;\n    throw new Error(`Value must not be undefined or null`);\n  } else {\n    return x;\n  }\n}\n\nexport function isString(x: any): x is string {\n  return typeof x === \"string\";\n}\n\nexport function groupBy<T>(\n  collection: T[],\n  keyFunc: (x: T) => string\n): Record<string, T[]> {\n  const result: Record<string, T[]> = {};\n  for (const obj of collection) {\n    const key = keyFunc(obj);\n    if (key in result) {\n      result[key].push(obj);\n    } else {\n      result[key] = [obj];\n    }\n  }\n  return result;\n}\n\nexport function mapValues<V, V2>(\n  obj: Record<string, V>,\n  mapper: (value: V) => V2\n): Record<string, V2> {\n  const result: Record<string, V2> = {};\n  for (const key in obj) {\n    result[key] = mapper(obj[key]);\n  }\n  return result;\n}\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nexport const isBrowser = typeof window !== \"undefined\";\nexport const NONE = Symbol(\"NONE\");\n\nexport const useIsomorphicLayoutEffect = isBrowser\n  ? React.useLayoutEffect\n  : React.useEffect;\n\nexport function createElementWithChildren(\n  elementType: any,\n  props: any,\n  children: React.ReactNode\n) {\n  if (Array.isArray(children)) {\n    return React.createElement(\n      elementType,\n      props,\n      ...children\n    ) as React.ReactElement;\n  } else if (children || \"children\" in props) {\n    // Only call React.createElement with `children` if there are actual children,\n    // or if there was an explicit (albeit undefined) children passed via\n    // props.  Otherwise, if you pass `undefined` as the children argument\n    // to React.createElement, the created element will have prop {children: undefined}.\n    // If the `root` is an PlasmicGeneratedComponent, and these props with {children: undefined}\n    // are used, then it will be taken as a `children` override, and will thus blank out\n    // everything under the root node.\n    return React.createElement(elementType, props, children);\n  } else {\n    return React.createElement(elementType, props);\n  }\n}\n\nexport function ensureNotArray(children: React.ReactNode) {\n  if (Array.isArray(children)) {\n    if (children.length === 1) {\n      return children[0];\n    } else {\n      return React.createElement(React.Fragment, {}, ...children);\n    }\n  } else {\n    return children;\n  }\n}\n\n/**\n * Flattens ReactNode into an array of ReactChild, but does NOT replace\n * missing keys with array index, as React.Children.toArray() does.\n */\nexport function toChildArray(children: React.ReactNode): React.ReactChild[] {\n  if (isReactChild(children)) {\n    return [children];\n  } else if (Array.isArray(children)) {\n    return children.flatMap(toChildArray);\n  } else {\n    return [];\n  }\n}\n\nexport function isReactText(child: React.ReactNode): child is React.ReactText {\n  return typeof child === \"string\" || typeof child === \"number\";\n}\n\nexport function isReactChild(\n  child: React.ReactNode\n): child is React.ReactChild {\n  return React.isValidElement(child) || isReactText(child);\n}\n\nexport function isReactFragment(\n  child: React.ReactNode\n): child is React.ReactElement {\n  return React.isValidElement(child) && child.type === React.Fragment;\n}\n\nexport function isReactNode(x: any) {\n  return (\n    typeof x === \"string\" || typeof x === \"number\" || React.isValidElement(x)\n  );\n}\n\n// From https://stackoverflow.com/questions/54775790/forcing-excess-property-checking-on-variable-passed-to-typescript-function\n// We also wrap the error message in a Partial<> because otherwise Jetbrains IDEs will autocomplete the component with all the string methods as props - see https://github.com/plasmicapp/plasmic/issues/16.\nexport type StrictProps<T, TExpected> = Exclude<\n  keyof T,\n  keyof TExpected\n> extends never\n  ? {}\n  : Partial<\"Unexpected extraneous props\">;\n\nexport type HTMLElementRefOf<T extends keyof JSX.IntrinsicElements> = Exclude<\n  React.ComponentProps<T>[\"ref\"],\n  string\n>;\n\nexport function mergeProps(\n  props: Record<string, any>,\n  ...restProps: Record<string, any>[]\n): Record<string, any> {\n  if (restProps.every((rest) => Object.keys(rest).length === 0)) {\n    return props;\n  }\n\n  const result = { ...props };\n\n  for (const rest of restProps) {\n    for (const key of Object.keys(rest)) {\n      result[key] = mergePropVals(key, result[key], rest[key]);\n    }\n  }\n\n  return result;\n}\n\nfunction updateRef<T>(ref: React.Ref<T> | undefined, value: T | null) {\n  if (!ref) {\n    return;\n  }\n\n  if (typeof ref === \"function\") {\n    ref(value);\n  } else {\n    if (!Object.isFrozen(ref)) {\n      (ref as React.MutableRefObject<T | null>).current = value;\n    }\n  }\n}\n\nexport function mergeRefs<T>(...refs: (React.Ref<T> | undefined)[]) {\n  return (value: T) => {\n    for (const ref of refs) {\n      updateRef(ref, value);\n    }\n  };\n}\n\nexport function mergePropVals(name: string, val1: any, val2: any): any {\n  if (val1 === NONE || val2 === NONE) {\n    // The NONE sentinel always skips all merging and returns null\n    return null;\n  } else if (val1 == null) {\n    // If either of them is nil, prefer the other\n    return val2;\n  } else if (val2 == null) {\n    return val1;\n  } else if (name === \"className\") {\n    // Special case for className -- always combine both class names\n    return classNames(val1, val2);\n  } else if (name === \"style\") {\n    // Special case for style -- always shallow-merge style dicts\n    return { ...val1, ...val2 };\n  } else if (name === \"ref\") {\n    // Special case for ref\n    return mergeRefs(val1, val2);\n  } else if (typeof val1 !== typeof val2) {\n    // If the type of the two values are different, then no way to merge them.\n    // Prefer val2.\n    return val2;\n  } else if (name.startsWith(\"on\") && typeof val1 === \"function\") {\n    // Special case for event handlers -- always call both handlers\n    return (...args: any[]) => {\n      let res: any;\n      if (typeof val1 === \"function\") {\n        res = val1(...args);\n      }\n      if (typeof val2 === \"function\") {\n        res = val2(...args);\n      }\n      return res;\n    };\n  } else {\n    // For all else, prefer val2\n    return val2;\n  }\n}\n\nexport function getElementTypeName(element: React.ReactElement) {\n  if (typeof element.type === \"string\") {\n    return element.type;\n  } else {\n    const comp = element.type as any;\n    return comp.displayName ?? comp.name ?? comp.render?.name ?? \"Component\";\n  }\n}\n","import * as React from \"react\";\nimport { createElementWithChildren } from \"../react-utils\";\nimport { wrapFlexContainerChildren } from \"./elements\";\n\nfunction renderStack<T extends keyof JSX.IntrinsicElements>(\n  as: T,\n  props: React.ComponentProps<T>,\n  hasGap: boolean | undefined,\n  ref: React.Ref<any>\n) {\n  const { children, ...rest } = props;\n  const wrappedChildren = wrapFlexContainerChildren(children, hasGap ?? false);\n  return createElementWithChildren(as, { ref, ...rest }, wrappedChildren);\n}\n\nfunction FlexStack_<T extends keyof JSX.IntrinsicElements = \"div\">(\n  props: { as?: T; hasGap?: boolean } & React.ComponentProps<T>,\n  outerRef: React.Ref<any>\n) {\n  const { as, hasGap, ...rest } = props;\n  return renderStack(\n    as ?? \"div\",\n    rest as React.ComponentProps<T>,\n    hasGap,\n    outerRef\n  );\n}\n\nconst FlexStack = React.forwardRef(FlexStack_) as <\n  T extends keyof JSX.IntrinsicElements = \"div\"\n>(\n  props: { as?: T; hasGap?: boolean } & React.ComponentProps<T>\n) => React.ReactElement;\n\nconst makeStackImpl = <T extends keyof JSX.IntrinsicElements>(as: T) => {\n  return React.forwardRef(\n    (\n      props: React.ComponentProps<T> & { hasGap?: boolean },\n      ref: React.Ref<any>\n    ) => {\n      const { hasGap, ...rest } = props;\n      return renderStack(as, rest as React.ComponentProps<T>, hasGap, ref);\n    }\n  ) as React.FC<React.ComponentProps<T> & { hasGap?: boolean }>;\n};\n\nexport const Stack = Object.assign(FlexStack, {\n  div: makeStackImpl(\"div\"),\n  a: makeStackImpl(\"a\"),\n  button: makeStackImpl(\"button\"),\n  h1: makeStackImpl(\"h1\"),\n  h2: makeStackImpl(\"h2\"),\n  h3: makeStackImpl(\"h3\"),\n  h4: makeStackImpl(\"h4\"),\n  h5: makeStackImpl(\"h5\"),\n  h6: makeStackImpl(\"h6\"),\n  label: makeStackImpl(\"label\"),\n  form: makeStackImpl(\"form\"),\n  section: makeStackImpl(\"section\"),\n  head: makeStackImpl(\"head\"),\n  main: makeStackImpl(\"main\"),\n  nav: makeStackImpl(\"nav\"),\n});\n","import get from \"dlv\";\nimport * as React from \"react\";\nimport { chainSingleArgFuncs, isSubset, notNil, omit, pick } from \"../common\";\nimport {\n  createElementWithChildren,\n  ensureNotArray,\n  isReactNode,\n  mergeProps,\n  mergePropVals,\n  NONE,\n} from \"../react-utils\";\nimport { $State } from \"../states\";\nimport { Stack } from \"./Stack\";\n\ninterface Variants {\n  [vg: string]: any;\n}\n\nexport type MultiChoiceArg<M extends string> = M | M[] | { [v in M]?: boolean };\nexport type SingleChoiceArg<M extends string> = M;\nexport type SingleBooleanChoiceArg<M extends string> = M | boolean;\n\ninterface OverrideTwiddle {\n  wrapChildren?: (children: React.ReactNode) => React.ReactNode;\n  wrap?: (node: React.ReactNode) => React.ReactNode;\n}\n\nexport type DefaultOverride<C extends React.ElementType> = {\n  type: \"default\";\n  props?: Partial<React.ComponentProps<C>>;\n} & OverrideTwiddle;\n\nexport type AsOverride<C extends React.ElementType> = {\n  type: \"as\";\n  as: C;\n  props?: Partial<React.ComponentProps<C>>;\n} & OverrideTwiddle;\n\nexport type RenderOverride<C extends React.ElementType> = {\n  type: \"render\";\n  render: (props: React.ComponentProps<C>, Comp: C) => React.ReactNode;\n  props?: Partial<React.ComponentProps<C>>;\n} & OverrideTwiddle;\n\nexport type Override<DefaultElementType extends React.ElementType> =\n  | DefaultOverride<DefaultElementType>\n  | AsOverride<any>\n  | RenderOverride<DefaultElementType>;\n\nexport type Overrides = Record<string, Flex<any>>;\nexport type Args = Record<string, any>;\n\n// Flex provides a more \"flexible\" way to specify bindings.\nexport type Flex<DefaultElementType extends React.ElementType> =\n  // Fully-specified bindings\n  | (Omit<DefaultOverride<DefaultElementType>, \"type\"> & {\n      as?: never;\n      render?: never;\n    })\n  | Omit<AsOverride<any>, \"type\">\n  | (Omit<RenderOverride<DefaultElementType>, \"type\"> & {\n      as?: never;\n    })\n\n  // Valid ReactNode, used as children.\n  // Note: We use React.ReactChild instead of React.ReactNode because we don't want to include\n  // React.ReactFragment, which includes {}, which would allow any object to be passed in,\n  // defeating any attempt to type-check!\n  | React.ReactChild\n\n  // Ignored\n  | null\n  | undefined\n\n  // dict of props for the DefaultElementType\n  | (Partial<React.ComponentProps<DefaultElementType>> & {\n      wrap?: never;\n      wrapChildren?: never;\n      props?: never;\n      as?: never;\n      render?: never;\n    })\n\n  // render function taking in dict of props for the DefaultElementType\n  | ((props: React.ComponentProps<DefaultElementType>) => React.ReactNode);\n\nexport function hasVariant<V extends Variants>(\n  variants: V | undefined,\n  groupName: keyof V,\n  variant: string\n) {\n  if (variants == null) {\n    return false;\n  }\n  const groupVariants = variants[groupName];\n  if (groupVariants == null) {\n    return false;\n  } else if (groupVariants === true) {\n    return variant === groupName;\n  } else if (groupVariants === false) {\n    return false;\n  } else if (Array.isArray(groupVariants)) {\n    return groupVariants.includes(variant);\n  } else if (typeof groupVariants === \"string\") {\n    return groupVariants === variant;\n  } else {\n    return (\n      groupVariants[variant] !== undefined && groupVariants[variant] !== false\n    );\n  }\n}\n\nexport function wrapFlexContainerChildren(\n  children: React.ReactNode,\n  hasGap: boolean\n) {\n  // We need to always wrap the children, even if there are no gaps, because\n  // otherwise if we toggle between with and without gap, React reconciliation\n  // will blow away the children tree and all state if we switch from having\n  // a wrapper and not.\n  const className = hasGap ? \"__wab_flex-container\" : \"__wab_passthrough\";\n  if (!children) {\n    return null;\n  } else if (Array.isArray(children)) {\n    return React.createElement(\"div\", { className }, ...children);\n  } else {\n    return React.createElement(\"div\", { className }, children);\n  }\n}\n\nfunction createPlasmicElement<DefaultElementType extends React.ElementType>(\n  override: Flex<DefaultElementType>,\n  defaultRoot: DefaultElementType,\n  defaultProps: Partial<React.ComponentProps<DefaultElementType>>,\n  wrapChildrenInFlex?: boolean\n): React.ReactNode | null {\n  if (!override || Object.keys(override).length === 0) {\n    return createElementWithChildren(\n      defaultRoot,\n      defaultProps,\n      defaultProps.children\n    );\n  }\n  const override2 = deriveOverride(override);\n  const props = mergeOverrideProps(defaultProps, override2.props);\n  if (override2.type === \"render\") {\n    return override2.render(\n      props as React.ComponentProps<DefaultElementType>,\n      defaultRoot\n    );\n  }\n\n  let root = defaultRoot;\n  if (override2.type === \"as\" && override2.as) {\n    if (defaultRoot === (Stack as React.ElementType)) {\n      // If there was an \"as\" override specified, but the default type is\n      // a Stack, then we don't want to switch to using \"as\" as the root,\n      // because then we'd lose the flex wrapper that Stack provides.\n      // Instead, we specify the \"as\" as the \"as\" prop to Stack.\n      props.as = override2.as;\n    } else {\n      root = override2.as;\n    }\n  }\n\n  let children = props.children;\n\n  if (override2.wrapChildren) {\n    children = override2.wrapChildren(ensureNotArray(children));\n  }\n\n  if (wrapChildrenInFlex) {\n    // For legacy, we still support data-plasmic-wrap-flex-children\n    children = wrapFlexContainerChildren(children, true);\n  }\n\n  let result = createElementWithChildren(root, props, children);\n\n  if (override2.wrap) {\n    result = override2.wrap(result) as React.ReactElement;\n  }\n\n  return result;\n}\n\n// We use data-plasmic-XXX attributes for custom properties since Typescript doesn't\n// support type check on jsx pragma. See https://github.com/microsoft/TypeScript/issues/21699\n// for more info.\nconst seenElements = new Map<string, React.ReactNode>();\nexport function createPlasmicElementProxy<\n  DefaultElementType extends React.ElementType\n>(\n  defaultElement: DefaultElementType,\n  props: Partial<React.ComponentProps<DefaultElementType>>,\n  ...children: React.ReactNode[]\n) {\n  // We use seenElements to keep track of elements that has been rendered by\n  // createPlasmicElementProxy().  When a JSX tree is evaluated, the JSX factory\n  // is invoked from the leaf to the root as the last call.  So we can store\n  // all the elements we've created until we encounter the leaf, at which point\n  // we will clear this map.  We are guaranteed that this map will only contain\n  // elements from one Plasmic* component at a time, because we're just creating\n  // elements and not \"rendering\" at this point; even if this JSX tree references\n  // other Plasmic* elements, we'll just create an element referencing that component,\n  // rather than following into the content of that component.\n  //\n  // TODO: is this ConcurrentMode friendly?\n\n  if (props == null) {\n    props = {};\n  }\n\n  const name = props[\"data-plasmic-name\"];\n  const isRoot = props[\"data-plasmic-root\"];\n  const forNodeName = props[\"data-plasmic-for-node\"];\n\n  delete props[\"data-plasmic-name\"];\n  delete props[\"data-plasmic-root\"];\n  delete props[\"data-plasmic-for-node\"];\n\n  const element = createPlasmicElementFromJsx(\n    defaultElement,\n    props,\n    ...children\n  );\n  if (name) {\n    seenElements.set(name, element);\n  }\n\n  if (isRoot) {\n    // If this is the root, and we requested a specific node by specifying data-plasmic-for-node,\n    // then return that node instead\n    const forNode = forNodeName\n      ? seenElements.get(forNodeName) ?? null\n      : element;\n\n    // Clear out the seenElements map, as we're done rendering this Plasmic* component.\n    seenElements.clear();\n    return forNode;\n  }\n  return element;\n}\n\nfunction createPlasmicElementFromJsx<\n  DefaultElementType extends React.ElementType\n>(\n  defaultElement: DefaultElementType,\n  props: Partial<React.ComponentProps<DefaultElementType>>,\n  ...children: React.ReactNode[]\n) {\n  const override = props[\"data-plasmic-override\"];\n  const wrapFlexChild = props[\"data-plasmic-wrap-flex-child\"];\n  const triggerProps = (props[\"data-plasmic-trigger-props\"] ??\n    []) as React.HTMLAttributes<HTMLElement>[];\n  delete props[\"data-plasmic-override\"];\n  delete props[\"data-plasmic-wrap-flex-child\"];\n  delete props[\"data-plasmic-trigger-props\"];\n  return createPlasmicElement(\n    override,\n    defaultElement,\n    mergeProps(\n      props,\n      children.length === 0\n        ? {}\n        : { children: children.length === 1 ? children[0] : children },\n      ...triggerProps\n    ) as any,\n    wrapFlexChild\n  );\n}\n\nexport function makeFragment(...children: React.ReactNode[]) {\n  return React.createElement(React.Fragment, {}, ...children);\n}\n\nexport const UNSET = Symbol(\"UNSET\");\n\nfunction mergeOverrideProps(\n  defaults: Record<string, any>,\n  overrides?: Record<string, any>\n): Record<string, any> {\n  if (!overrides) {\n    return defaults;\n  }\n\n  const result = { ...defaults };\n\n  for (const key of Object.keys(overrides)) {\n    const defaultVal = defaults[key];\n    let overrideVal = overrides[key];\n    if (overrideVal === UNSET) {\n      delete result[key];\n    } else {\n      // We use the NONE sentinel if the overrideVal is nil, and is not one of the\n      // props that we merge by default -- which are className, style, and\n      // event handlers.  This means for all other \"normal\" props -- like children,\n      // title, etc -- a nil value will unset the default.\n      if (\n        overrideVal == null &&\n        key !== \"className\" &&\n        key !== \"style\" &&\n        !(key.startsWith(\"on\") && typeof defaultVal === \"function\")\n      ) {\n        overrideVal = NONE;\n      }\n      result[key] = mergePropVals(key, defaultVal, overrideVal);\n    }\n  }\n\n  return result;\n}\n\nexport function wrapWithClassName(element: React.ReactNode, className: string) {\n  const key = React.isValidElement(element)\n    ? element.key || undefined\n    : undefined;\n  return React.createElement(\n    \"div\",\n    {\n      key,\n      className,\n      style: {\n        display: \"grid\",\n      },\n    },\n    element\n  );\n}\n\nfunction deriveOverride<C extends React.ElementType>(x: Flex<C>): Override<C> {\n  if (!x) {\n    // undefined Binding is an empty Binding\n    return {\n      type: \"default\",\n      props: {} as any,\n    };\n  } else if (isReactNode(x)) {\n    // If ReactNode, then assume this is the children\n    return {\n      type: \"default\",\n      props: {\n        children: x,\n      } as any,\n    };\n  } else if (typeof x === \"object\") {\n    // If any of the overrideKeys is a key of this object, then assume\n    // this is a full Override\n    if (\"as\" in x) {\n      return {\n        ...x,\n        props: x.props || {},\n        type: \"as\",\n      } as any;\n    } else if (\"render\" in x) {\n      return {\n        ...x,\n        type: \"render\",\n      } as any;\n    } else if (\"props\" in x) {\n      return {\n        ...x,\n        props: x.props || {},\n        type: \"default\",\n      };\n    } else if (isSubset(Object.keys(x), [\"wrap\", \"wrapChildren\"])) {\n      // Only twiddling functions present, so assume no props overrides\n      // (otherwise we'd assume these were props).\n      return {\n        ...x,\n        props: {},\n        type: \"default\",\n      };\n    }\n\n    // Else, assume this is just a props object.\n    return {\n      type: \"default\",\n      props: x as any,\n    };\n  } else if (typeof x === \"function\") {\n    return {\n      type: \"render\",\n      render: x,\n    };\n  }\n\n  throw new Error(`Unexpected override: ${x}`);\n}\n\nfunction mergeVariants<V extends Variants>(\n  v1: Partial<V> | undefined,\n  v2: Partial<V> | undefined\n): Partial<V> {\n  if (!v1 || !v2) {\n    return v1 || v2 || {};\n  }\n  return { ...v1, ...v2 };\n}\n\nexport function mergeVariantsWithStates(\n  variants: Variants,\n  $state: $State,\n  linkedStates: {\n    variantGroup: string;\n    statePath: (string | number)[];\n  }[]\n): Variants {\n  return {\n    ...variants,\n    ...Object.fromEntries(\n      linkedStates.map(({ variantGroup, statePath }) => [\n        variantGroup,\n        get($state, statePath),\n      ])\n    ),\n  };\n}\n\nfunction mergeArgs<A extends Args>(\n  a1: Partial<A> | undefined,\n  a2: Partial<A> | undefined\n): Partial<A> {\n  if (!a1 || !a2) {\n    return a1 || a2 || {};\n  }\n  return { ...a1, ...a2 };\n}\n\nfunction mergeFlexOverrides<O extends Overrides>(\n  o1: Partial<O>,\n  o2: Partial<O> | undefined\n): Partial<O> {\n  if (!o2) {\n    return o1;\n  }\n  const keys = Array.from(new Set([...Object.keys(o1), ...Object.keys(o2)]));\n  const merged: Record<string, any> = {};\n  for (const key of keys) {\n    merged[key] = mergeFlexOverride(o1[key], o2[key]);\n  }\n  return merged as Partial<O>;\n}\n\nfunction mergeFlexOverride<C extends React.ElementType<any>>(\n  fo1: Flex<C> | undefined,\n  fo2: Flex<C> | undefined\n): Flex<C> | undefined {\n  if (!fo1) {\n    return fo2;\n  }\n  if (!fo2) {\n    return fo1;\n  }\n\n  const o1 = deriveOverride(fo1);\n  const o2 = deriveOverride(fo2);\n  const wrap = chainSingleArgFuncs(...[o1.wrap, o2.wrap].filter(notNil));\n  const wrapChildren = chainSingleArgFuncs(\n    ...[o1.wrapChildren, o2.wrapChildren].filter(notNil)\n  );\n\n  // \"render\" type always takes precedence, but we still merge the props\n  const props = mergeOverrideProps(o1.props ?? {}, o2.props) as Partial<\n    React.ComponentProps<C>\n  >;\n  if (o2.type === \"render\") {\n    return {\n      render: o2.render,\n      props,\n      wrap,\n      wrapChildren,\n    };\n  }\n\n  if (o1.type === \"render\") {\n    return {\n      render: o1.render,\n      props,\n      wrap,\n      wrapChildren,\n    };\n  }\n\n  // \"as\" will take precedence\n  const as =\n    (o2.type === \"as\" ? o2.as : undefined) ??\n    (o1.type === \"as\" ? o1.as : undefined);\n\n  return {\n    props,\n    wrap,\n    wrapChildren,\n    ...(as ? { as } : {}),\n  };\n}\n\nexport function deriveRenderOpts(\n  props: Record<string, any>,\n  config: {\n    name: string;\n    descendantNames: string[];\n    internalVariantPropNames: string[];\n    internalArgPropNames: string[];\n  }\n) {\n  const {\n    name,\n    descendantNames,\n    internalVariantPropNames,\n    internalArgPropNames,\n  } = config;\n  const reservedPropNames = [\"variants\", \"args\", \"overrides\"];\n  const variants = mergeVariants(\n    omit(pick(props, ...internalVariantPropNames), ...reservedPropNames),\n    props.variants\n  );\n  const args = mergeArgs(\n    omit(pick(props, ...internalArgPropNames), ...reservedPropNames),\n    props.args\n  );\n  let overrides = mergeFlexOverrides(\n    omit(\n      pick(props, ...descendantNames),\n      ...internalArgPropNames,\n      ...internalVariantPropNames,\n      ...reservedPropNames\n    ),\n    props.overrides\n  );\n\n  const leftoverProps = omit(\n    props,\n    \"variants\",\n    \"args\",\n    \"overrides\",\n    ...descendantNames,\n    ...internalVariantPropNames,\n    ...internalArgPropNames\n  ) as Partial<React.ComponentProps<\"button\">>;\n\n  if (Object.keys(leftoverProps).length > 0) {\n    overrides = mergeFlexOverrides(overrides, {\n      [name]: {\n        props: leftoverProps,\n      },\n    });\n  }\n  return { variants, args, overrides };\n}\n","import * as React from \"react\";\n\nexport const PlasmicHeadContext = React.createContext<\n  React.ComponentType<any> | undefined\n>(undefined);\n\ntype PlasmicHeadProps = {\n  title?: string;\n  description?: string;\n  image?: string;\n  canonical?: string;\n};\n\nexport function PlasmicHead(props: PlasmicHeadProps) {\n  const Head = React.useContext(PlasmicHeadContext);\n  if (!Head) {\n    console.warn(\n      `Plasmic: Head meta tags are being ignored. To make them work, pass a Head component into PlasmicRootProvider.`\n    );\n    // TODO: Link to doc about Head.\n    return null;\n  }\n\n  // Helmet does not support React.Fragments, so we need to use `[<meta />,\n  // <meta />]` instead of `<><meta /><meta /></>`.\n  return (\n    <Head>\n      {props.image ? (\n        [\n          <meta\n            key=\"twitter:card\"\n            name=\"twitter:card\"\n            content=\"summary_large_image\"\n          />,\n          <meta key=\"og:image\" property=\"og:image\" content={props.image} />,\n          <meta\n            key=\"twitter:image\"\n            name=\"twitter:image\"\n            content={props.image}\n          />,\n        ]\n      ) : (\n        <meta key=\"twitter:card\" name=\"twitter:card\" content=\"summary\" />\n      )}\n      {props.title && [\n        <title key=\"title\">{props.title}</title>,\n        <meta key=\"og:title\" property=\"og:title\" content={props.title} />,\n        <meta\n          key=\"twitter:title\"\n          property=\"twitter:title\"\n          content={props.title}\n        />,\n      ]}\n      {props.description && [\n        <meta\n          key=\"description\"\n          name=\"description\"\n          content={props.description}\n        />,\n        <meta\n          key=\"og:description\"\n          property=\"og:description\"\n          content={props.description}\n        />,\n        <meta\n          key=\"twitter:description\"\n          name=\"twitter:description\"\n          content={props.description}\n        />,\n      ]}\n      {props.canonical && (\n        <link key=\"canonical\" ref=\"canonical\" href={props.canonical} />\n      )}\n    </Head>\n  );\n}\n\nexport const plasmicHeadMeta = {\n  name: \"hostless-plasmic-head\",\n  displayName: \"Head\",\n  description: \"Used to add page metadata to HTML <head />.\",\n  importName: \"PlasmicHead\",\n  importPath: \"@plasmicapp/react-web\",\n  isRepeatable: false,\n  styleSections: false,\n  props: {\n    title: {\n      type: \"string\",\n      displayName: \"Title\",\n    },\n    description: {\n      type: \"string\",\n      displayName: \"Description\",\n    },\n    image: {\n      type: \"imageUrl\",\n      displayName: \"Image\",\n    },\n    canonical: {\n      type: \"string\",\n      displayName: \"Canonical URL\",\n    },\n  },\n};\n","/**\n * Responsive `<img/>` replacement, based on `next/image`\n */\n\nimport classNames from \"classnames\";\nimport React, { CSSProperties } from \"react\";\nimport { pick } from \"../../common\";\nimport { mergeRefs } from \"../../react-utils\";\n\nexport interface ImageLoader {\n  supportsUrl: (url: string) => boolean;\n  transformUrl: (opts: {\n    src: string;\n    width?: number;\n    quality?: number;\n    format?: \"webp\";\n  }) => string;\n}\n\ntype ImgTagProps = Omit<\n  React.ComponentProps<\"img\">,\n  \"src\" | \"srcSet\" | \"ref\" | \"style\"\n>;\n\n// Default image sizes to snap to\n// TODO: make this configurable?\nconst IMG_SIZES = [16, 32, 48, 64, 96, 128, 256, 384];\nconst DEVICE_SIZES = [640, 750, 828, 1080, 1200, 1920, 2048, 3840];\nconst ALL_SIZES = [...IMG_SIZES, ...DEVICE_SIZES];\n\nexport interface PlasmicImgProps extends ImgTagProps {\n  /**\n   * Either an object with the src string, and its full width and height,\n   * or just a src string with unknown intrinsic dimensions.\n   */\n  src?:\n    | string\n    | {\n        src:\n          | string\n          | {\n              src: string;\n              height: number;\n              width: number;\n              blurDataURL?: string;\n            };\n        fullHeight: number;\n        fullWidth: number;\n        // We might also get a more precise aspectRatio for SVGs\n        // instead of relyiing on fullWidth / fullHeight, because\n        // those values might be rounded and not so accurate.\n        aspectRatio?: number;\n      };\n\n  /**\n   * className applied to the wrapper element if one is used.\n   */\n  className?: string;\n\n  /**\n   * css width\n   */\n  displayWidth?: number | string;\n\n  /**\n   * css height\n   */\n  displayHeight?: number | string;\n\n  /**\n   * css min-width\n   */\n  displayMinWidth?: number | string;\n\n  /**\n   * css min-height\n   */\n  displayMinHeight?: number | string;\n\n  /**\n   * css max-width\n   */\n  displayMaxWidth?: number | string;\n\n  /**\n   * css max-height\n   */\n  displayMaxHeight?: number | string;\n\n  /**\n   * For variable quality formats like jpg, the quality from 0 to 100\n   */\n  quality?: number;\n\n  /**\n   * ImageLoader to use for loading different dimensions of the image.\n   * If none specified, will not attempt to load different dimensions.\n   */\n  loader?: \"plasmic\" | ImageLoader;\n\n  /**\n   * Style applied to the wrapper element. objectFit and objectPosition\n   * rules are applied to the img element.\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Ref for the img element.  The normal <PlasmicImg ref={...} />\n   * prop gives the root element instead, which may be the img element\n   * or a wrapper element\n   */\n  imgRef?: React.Ref<HTMLImageElement>;\n}\n\nexport const PlasmicImg = React.forwardRef(function PlasmicImg(\n  props: PlasmicImgProps,\n  outerRef: React.Ref<HTMLElement>\n) {\n  let {\n    src,\n    className,\n    displayWidth,\n    displayHeight,\n    displayMinWidth,\n    displayMinHeight,\n    displayMaxWidth,\n    displayMaxHeight,\n    quality,\n    loader,\n    imgRef,\n    style,\n    loading,\n    ...rest\n  } = props;\n\n  const imgProps = Object.assign({}, rest, {\n    // Default loading to \"lazy\" if not specified (which is different from the\n    // html img, which defaults to eager!)\n    loading: loading ?? \"lazy\",\n  });\n\n  const { fullWidth, fullHeight, aspectRatio } =\n    typeof src === \"string\" || !src\n      ? { fullWidth: undefined, fullHeight: undefined, aspectRatio: undefined }\n      : src;\n  const srcStr = src\n    ? typeof src === \"string\"\n      ? src\n      : typeof src.src === \"string\"\n      ? src.src\n      : src.src.src\n    : \"\";\n\n  // Assume external image if either dimension is null and use usual <img>\n  if (fullHeight == null || fullWidth == null) {\n    return (\n      <img\n        src={srcStr}\n        className={className}\n        style={style}\n        {...imgProps}\n        loading={loading}\n        ref={mergeRefs(imgRef, outerRef) as any}\n      />\n    );\n  }\n\n  if (\n    isSvg(srcStr) &&\n    (displayHeight == null || displayHeight === \"auto\") &&\n    (displayWidth == null || displayWidth === \"auto\")\n  ) {\n    displayWidth = \"100%\";\n  }\n\n  let computedDisplayWidth = displayWidth;\n  if (\n    fullWidth &&\n    fullHeight &&\n    (!displayWidth || displayWidth === \"auto\") &&\n    !!getPixelLength(displayHeight)\n  ) {\n    // If there's a pixel length specified for displayHeight but not displayWidth,\n    // then we can derive the pixel length for displayWidth.  Having an explicit\n    // displayWidth makes this a fixed-size image, which makes it possible for us to\n    // generate better markup!\n    if (!isSvg(srcStr)) {\n      // We shouldn't do it for SVGs though, because `fullWidth` and\n      // `fullHeight` might have rounded values so the final\n      // `displayWidth` could differ by 1px or so.\n      computedDisplayWidth =\n        (getPixelLength(displayHeight)! * fullWidth) / fullHeight;\n    }\n  }\n\n  let spacerWidth = fullWidth;\n  let spacerHeight = fullHeight;\n  if (aspectRatio && isFinite(aspectRatio) && isSvg(srcStr)) {\n    // For SVGs, fullWidth and fullHeight can be rounded values, which would\n    // cause some discrepancy between the actual aspect ratio and the aspect\n    // ratio from those values. So, for those cases, we set large width / height\n    // values to get a more precise ratio from the spacer.\n    spacerWidth = DEFAULT_SVG_WIDTH;\n    spacerHeight = Math.round(spacerWidth / aspectRatio);\n  }\n\n  const { sizes, widthDescs } = getWidths(computedDisplayWidth, fullWidth, {\n    minWidth: displayMinWidth,\n  });\n  const imageLoader = getImageLoader(loader);\n  const spacerSvg = `<svg width=\"${spacerWidth}\" height=\"${spacerHeight}\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"/>`;\n  const spacerSvgBase64 =\n    typeof window === \"undefined\"\n      ? Buffer.from(spacerSvg).toString(\"base64\")\n      : window.btoa(spacerSvg);\n\n  let wrapperStyle: CSSProperties = { ...(style || {}) };\n  let spacerStyle: CSSProperties = {\n    ...pick(style || {}, \"objectFit\", \"objectPosition\"),\n  };\n\n  if (displayWidth != null && displayWidth !== \"auto\") {\n    // If width is set, set it on the wrapper along with min/max width\n    // and just use `width: 100%` on the spacer\n    spacerStyle.width = \"100%\";\n    // Rely on the styles set by `classname` on the wrapper:\n    // wrapperStyle.width = displayWidth;\n    // wrapperStyle.minWidth = displayMinWidth;\n    // wrapperStyle.maxWidth = displayMaxWidth;\n  } else {\n    // Otherwise, we want auto sizing from the spacer, so set width there.\n    //\n    // But if we have min/max width, it should be set in the wrapper and it\n    // can be percentage values (and we add corresponding min/max width to\n    // 100% in the spacer). In general it ends up with the correct effect,\n    // but some edge cases might make `min-width: 100%` shrink the image more\n    // than it should.\n    spacerStyle.width = displayWidth;\n    wrapperStyle.width = \"auto\";\n    if (displayMinWidth) {\n      spacerStyle.minWidth = \"100%\";\n      // Rely on min-width set by `classname` on the wrapper:\n      // wrapperStyle.minWidth = displayMinWidth;\n    }\n    if (displayMaxWidth != null && displayMaxWidth !== \"none\") {\n      spacerStyle.maxWidth = \"100%\";\n      // Rely on max-width set by `classname` on the wrapper:\n      // wrapperStyle.maxWidth = displayMaxWidth;\n    }\n  }\n\n  if (displayHeight != null && displayHeight !== \"auto\") {\n    spacerStyle.height = \"100%\";\n    // wrapperStyle.height = displayHeight;\n    // wrapperStyle.minHeight = displayMinHeight;\n    // wrapperStyle.maxHeight = displayMaxHeight;\n  } else {\n    spacerStyle.height = displayHeight;\n    wrapperStyle.height = \"auto\";\n    if (displayMinHeight) {\n      spacerStyle.minHeight = \"100%\";\n      // wrapperStyle.minHeight = displayMinHeight;\n    }\n    if (displayMaxHeight != null && displayMaxHeight !== \"none\") {\n      spacerStyle.maxHeight = \"100%\";\n      // wrapperStyle.maxHeight = displayMaxHeight;\n    }\n  }\n\n  return (\n    <div\n      className={classNames(className, \"__wab_img-wrapper\")}\n      ref={outerRef as any}\n      style={wrapperStyle}\n    >\n      <img\n        alt=\"\"\n        aria-hidden\n        className=\"__wab_img-spacer-svg\"\n        src={`data:image/svg+xml;base64,${spacerSvgBase64}`}\n        style={spacerStyle}\n      />\n      {makePicture({\n        imageLoader,\n        widthDescs,\n        sizes,\n        src: srcStr,\n        quality,\n        ref: imgRef,\n        style: style ? pick(style, \"objectFit\", \"objectPosition\") : undefined,\n        imgProps,\n        className: \"__wab_img\",\n      })}\n    </div>\n  );\n});\n\nfunction makePicture(opts: {\n  imageLoader?: ImageLoader;\n  widthDescs: WidthDesc[];\n  sizes?: string;\n  src: string;\n  quality?: number;\n  style?: React.CSSProperties;\n  className?: string;\n  imgProps: ImgTagProps;\n  ref?: React.Ref<HTMLImageElement>;\n}) {\n  // If imageLoader is undefined, then this renders to just a normal\n  // <img />.  Else it will render to a <picture> with a <source> for\n  // webp, and srcSet/sizes set according to width requirements.\n  const {\n    imageLoader,\n    widthDescs,\n    src,\n    quality,\n    style,\n    className,\n    sizes,\n    imgProps,\n    ref,\n  } = opts;\n  return (\n    <picture className=\"__wab_picture\">\n      {imageLoader && imageLoader.supportsUrl(src) && (\n        <source\n          type=\"image/webp\"\n          srcSet={widthDescs\n            .map(\n              (wd) =>\n                `${imageLoader.transformUrl({\n                  src,\n                  quality,\n                  width: wd.width,\n                  format: \"webp\",\n                })} ${wd.desc}`\n            )\n            .join(\", \")}\n        />\n      )}\n      <img\n        {...imgProps}\n        ref={ref}\n        className={className}\n        decoding=\"async\"\n        src={\n          imageLoader && imageLoader.supportsUrl(src)\n            ? imageLoader.transformUrl({\n                src,\n                quality,\n                width: widthDescs[widthDescs.length - 1].width,\n              })\n            : src\n        }\n        srcSet={\n          imageLoader && imageLoader.supportsUrl(src)\n            ? widthDescs\n                .map(\n                  (wd) =>\n                    `${imageLoader.transformUrl({\n                      src,\n                      quality,\n                      width: wd.width,\n                    })} ${wd.desc}`\n                )\n                .join(\", \")\n            : undefined\n        }\n        sizes={imageLoader && imageLoader.supportsUrl(src) ? sizes : undefined}\n        style={{\n          ...(style ? pick(style, \"objectFit\", \"objectPosition\") : {}),\n          width: 0,\n          height: 0,\n        }}\n      />\n    </picture>\n  );\n}\n\nconst DEFAULT_SVG_WIDTH = 10000;\n\nfunction isSvg(src: string) {\n  return src.endsWith(\".svg\") || src.startsWith(\"data:image/svg\");\n}\n\ninterface WidthDesc {\n  width?: number;\n  desc: string;\n}\n\nfunction getClosestPresetSize(width: number, fullWidth: number) {\n  const nextBiggerIndex =\n    ALL_SIZES.findIndex((w) => w >= width) ?? ALL_SIZES.length - 1;\n  const nextBigger = ALL_SIZES[nextBiggerIndex];\n  if (nextBigger >= fullWidth) {\n    // If the requested width is larger than the fullWidth,\n    // we just use the original width instead. It's impossible\n    // to make an image bigger than fullWidth!\n    return undefined;\n  } else if (\n    nextBiggerIndex + 1 < ALL_SIZES.length &&\n    fullWidth <= ALL_SIZES[nextBiggerIndex + 1]\n  ) {\n    // If the fullWidth is just between nextBigger and the one after that,\n    // then also might as well just use the original size (so, width is 30,\n    // nextBigger is 32, then we just use the original as long as fullWidth is\n    // less than 48)\n    return undefined;\n  }\n\n  return nextBigger;\n}\n\n/**\n * Computes the appropriate srcSet and sizes to use\n */\nfunction getWidths(\n  width: number | string | undefined,\n  fullWidth: number,\n  extra?: { minWidth: string | number | undefined }\n): { sizes: string | undefined; widthDescs: WidthDesc[] } {\n  const minWidth = extra?.minWidth;\n  const pixelWidth = getPixelLength(width);\n  const pixelMinWidth = getPixelLength(minWidth);\n  if (pixelWidth != null && (!minWidth || pixelMinWidth != null)) {\n    // If there's an exact width, then we just need to display it at 1x and 2x density\n    return {\n      widthDescs: [\n        {\n          width: getClosestPresetSize(\n            Math.max(pixelWidth, pixelMinWidth ?? 0),\n            fullWidth\n          ),\n          desc: \"1x\",\n        },\n        {\n          width: getClosestPresetSize(\n            Math.max(pixelWidth, pixelMinWidth ?? 0) * 2,\n            fullWidth\n          ),\n          desc: \"2x\",\n        },\n      ],\n      sizes: undefined,\n    };\n  }\n  // Otherwise we don't know what sizes we'll end up, so we just cap it at\n  // device width.  TODO: do better!\n  const usefulSizes = DEVICE_SIZES.filter(\n    (size) => !fullWidth || size < fullWidth\n  );\n  if (!!fullWidth && usefulSizes.length === 0) {\n    // image fullWidth is smaller than all device sizes.  So all we can do\n    // is offer 1x\n    return {\n      widthDescs: [\n        {\n          width: getClosestPresetSize(fullWidth, fullWidth),\n          desc: \"1x\",\n        },\n      ],\n      sizes: undefined,\n    };\n  }\n  return {\n    widthDescs: usefulSizes.map((size) => ({\n      width: getClosestPresetSize(size, fullWidth),\n      // If this is the last (buggest) useful width, but it is\n      // still within the bounds set by DEVICE_SIZES, then just\n      // use the original, unresized image.  This means if we match\n      // the largest size, we use unresized and best quality image.\n      // We only do this, though, if fullWidth is \"reasonable\" --\n      // smaller than the largest size we would consider.\n      // i === usefulSizes.length - 1 &&\n      // fullWidth < DEVICE_SIZES[DEVICE_SIZES.length - 1]\n      //   ? undefined\n      //   : size,\n      desc: `${size}w`,\n    })),\n    sizes: \"100vw\",\n  };\n}\n\nfunction getPixelLength(length: number | string | undefined) {\n  if (length == null || length == \"\") {\n    return undefined;\n  }\n\n  if (typeof length === \"number\") {\n    return length;\n  }\n\n  const parsed = parseNumeric(length);\n  if (parsed && (!parsed.units || parsed.units === \"px\")) {\n    return parsed.num;\n  }\n\n  return undefined;\n}\n\nfunction parseNumeric(val: string) {\n  // Parse strings like \"30\", \"30px\", \"30%\", \"30px /* blah blah */\"\n  const res = val.match(\n    /^\\s*(-?(?:\\d+\\.\\d*|\\d*\\.\\d+|\\d+))\\s*([a-z]*|%)\\s*(?:\\/\\*.*)?$/i\n  );\n  if (res == null) {\n    return undefined;\n  }\n  const num = res[1];\n  const units = res[2];\n  return { num: +num, units };\n}\n\nfunction getImageLoader(loader: \"plasmic\" | ImageLoader | undefined) {\n  if (loader == null) {\n    return undefined;\n  } else if (loader === \"plasmic\") {\n    return PLASMIC_IMAGE_LOADER;\n  } else {\n    return loader;\n  }\n}\n\nconst PLASMIC_IMAGE_LOADER: ImageLoader = {\n  supportsUrl: (src) => {\n    return src.startsWith(\"https://img.plasmic.app\") && !isSvg(src);\n  },\n  transformUrl: (opts) => {\n    const params = [\n      opts.width ? `w=${opts.width}` : undefined,\n      `q=${opts.quality ?? 75}`,\n      opts.format ? `f=${opts.format}` : undefined,\n    ].filter((x) => !!x);\n    return `${opts.src}?${params.join(\"&\")}`;\n  },\n};\n","import React from \"react\";\nimport { omit, pick } from \"../common\";\n\nexport const PlasmicLink = React.forwardRef(function PlasmicLink(\n  props: any,\n  ref: React.Ref<any>\n) {\n  // props.href is required for nextjs; if no props.href,\n  // then we just render the default anchor element\n  if (props.platform === \"nextjs\" && props.href) {\n    const nextjsProps = [\n      \"href\",\n      \"replace\",\n      \"scroll\",\n      \"shallow\",\n      \"passHref\",\n      \"prefetch\",\n      \"locale\",\n    ];\n\n    return React.createElement(\n      props.component,\n      { ...pick(props, ...nextjsProps), legacyBehavior: true },\n      <a {...omit(props, \"component\", \"platform\", ...nextjsProps)} ref={ref} />\n    );\n  }\n\n  if (props.platform === \"gatsby\" && isInternalHref(props.href)) {\n    return React.createElement(props.component, {\n      ...omit(props, \"component\", \"platform\", \"href\"),\n      ...{ to: props.href, ref },\n    });\n  }\n\n  return <a {...omit(props, \"component\", \"platform\")} ref={ref} />;\n});\n\nfunction isInternalHref(href: string): boolean {\n  return /^\\/(?!\\/)/.test(href);\n}\n","import React from \"react\";\n\nexport type PlasmicTranslator = (\n  str: string,\n  opts?: {\n    components?: {\n      [key: string]: React.ReactElement;\n    };\n  }\n) => React.ReactNode;\n\nexport const PlasmicTranslatorContext = React.createContext<\n  PlasmicTranslator | undefined\n>(undefined);\n\nexport interface TransProps {\n  transKey?: string;\n  children?: React.ReactNode;\n}\n\nfunction isIterable(val: any): val is Iterable<any> {\n  return val != null && typeof val[Symbol.iterator] === \"function\";\n}\n\nexport function genTranslatableString(elt: React.ReactNode) {\n  const components: {\n    [key: string]: React.ReactElement;\n  } = {};\n  let componentsCount = 0;\n\n  const getText = (node: React.ReactNode): string => {\n    if (!node) {\n      return \"\";\n    }\n    if (\n      typeof node === \"number\" ||\n      typeof node === \"boolean\" ||\n      typeof node === \"string\"\n    ) {\n      return node.toString();\n    }\n    if (typeof node !== \"object\") {\n      return \"\";\n    }\n    if (Array.isArray(node) || isIterable(node)) {\n      return Array.from(node)\n        .map((child) => getText(child))\n        .filter((child) => !!child)\n        .join(\"\");\n    }\n    const nodeChildren: React.ReactNode =\n      (hasKey(node, \"props\") &&\n        hasKey(node.props, \"children\") &&\n        (node.props.children as React.ReactNode | undefined)) ||\n      (hasKey(node, \"children\") && node.children) ||\n      [];\n    const contents = `${React.Children.toArray(nodeChildren)\n      .map((child) => getText(child))\n      .filter((child) => !!child)\n      .join(\"\")}`;\n    if (React.isValidElement(node) && node.type === React.Fragment) {\n      return contents;\n    }\n    const componentId = componentsCount + 1;\n    componentsCount++;\n    components[componentId] = React.isValidElement(node)\n      ? React.cloneElement(node as any, {\n          key: componentId,\n          children: undefined,\n        })\n      : (node as never);\n    return `<${componentId}>${contents}</${componentId}>`;\n  };\n\n  const str = getText(elt);\n  return {\n    str,\n    components,\n    componentsCount,\n  };\n}\n\nexport function Trans({ transKey, children }: TransProps) {\n  const _t = React.useContext(PlasmicTranslatorContext);\n  if (!_t) {\n    warnNoTranslationFunctionAtMostOnce();\n    return children;\n  }\n\n  const { str, components, componentsCount } = genTranslatableString(children);\n  return _t(transKey ?? str, componentsCount > 0 ? { components } : undefined);\n}\n\nlet hasWarned = false;\nfunction warnNoTranslationFunctionAtMostOnce() {\n  if (!hasWarned) {\n    console.warn(\n      \"Using Plasmic Translation but no translation function has been provided\"\n    );\n    hasWarned = true;\n  }\n}\n\nfunction hasKey<K extends string>(v: any, key: K): v is Record<K, any> {\n  return typeof v === \"object\" && v !== null && key in v;\n}\n","import * as React from \"react\";\nimport { mergeProps } from \"../react-utils\";\nimport { Trans } from \"./translation\";\n\nexport function PlasmicSlot<T extends keyof JSX.IntrinsicElements = \"div\">(\n  props: React.ComponentProps<T> & {\n    as?: T;\n    defaultContents?: React.ReactNode;\n    value?: React.ReactNode;\n  }\n) {\n  return renderPlasmicSlot(props);\n}\n\nexport function renderPlasmicSlot<\n  T extends keyof JSX.IntrinsicElements = \"div\"\n>(opts: {\n  as?: T;\n  defaultContents?: React.ReactNode;\n  value?: React.ReactNode;\n}) {\n  const { as, defaultContents, value, ...rest } = opts;\n\n  let content = value === undefined ? defaultContents : value;\n  if (!content || (Array.isArray(content) && content.length === 0)) {\n    return null;\n  }\n\n  // If the content is a raw string, then we need to wrap the raw string\n  // into an element, in case the slot is inside a flex-gap\n  // container (you cannot apply margin to just a text node).\n  const maybeString = maybeAsString(content);\n  if (maybeString) {\n    content = <span className=\"__wab_slot-string-wrapper\">{maybeString}</span>;\n  }\n\n  const nonEmptyProps = Object.keys(rest).filter((p) => !!(rest as any)[p]);\n  if (nonEmptyProps.length === 0) {\n    // No attrs to apply to the slot (which means the slot is unstyled), then\n    // just render the content directly; no need for style wrapper.\n    return <>{content}</>;\n  }\n\n  return React.createElement(\n    as || \"span\",\n    mergeProps({ className: \"__wab_slot\" }, rest),\n    content\n  );\n}\n\nfunction maybeAsString(\n  node: React.ReactNode\n): string | React.ReactElement | undefined {\n  // Unwrap fragments\n  if (React.isValidElement(node)) {\n    // Fragment doesn't render DOM elements\n    if (node.type === React.Fragment) {\n      return maybeAsString(node.props.children);\n    } else if (node.type === Trans) {\n      // Trans also doesn't render DOM elements. But we don't want to just render\n      // its content string, because we want to keep the <Trans/> for the localization.\n      // So we render the same node, to be wrapped into __wab_slot-string-wrapper.\n      return node;\n    }\n  }\n\n  if (typeof node === \"string\") {\n    return node;\n  }\n\n  if (Array.isArray(node) && node.length === 1 && typeof node[0] === \"string\") {\n    return node[0];\n  }\n\n  return undefined;\n}\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { isBrowser, useIsomorphicLayoutEffect } from \"../react-utils\";\n\ntype Queries = { [name: string]: string };\n\nconst listeners: Array<() => void> = [];\nconst queries: Queries = {};\n\nfunction matchScreenVariants() {\n  if (!isBrowser) {\n    return [];\n  }\n  return Object.entries(queries)\n    .filter(([, query]) => window.matchMedia(query).matches)\n    .map(([name]) => name);\n}\n\n// undefined if screen variants have never been calculated\nlet curScreenVariants: string[] | undefined = undefined;\n\nfunction recalculateScreenVariants() {\n  const screenVariant = matchScreenVariants();\n  if (\n    !curScreenVariants ||\n    screenVariant.join(\"\") !== curScreenVariants.join(\"\")\n  ) {\n    curScreenVariants = screenVariant;\n    ReactDOM.unstable_batchedUpdates(() =>\n      listeners.forEach((listener) => listener())\n    );\n  }\n}\n\nfunction ensureInitCurScreenVariants() {\n  // Initializes curScreenVariants if it hadn't been before. Note that this must\n  // be called from within an effect.\n  if (curScreenVariants === undefined) {\n    curScreenVariants = matchScreenVariants();\n  }\n}\n\nif (isBrowser) {\n  window.addEventListener(\"resize\", recalculateScreenVariants);\n}\n\nexport function createUseScreenVariants(\n  isMulti: boolean,\n  screenQueries: Queries\n) {\n  Object.assign(queries, screenQueries);\n  curScreenVariants = undefined;\n\n  return function () {\n    // It is important that upon first render, we return [] or undefined, because\n    // that is what SSR will use, and the client must match.  In an effect (which\n    // only happens on the client), we then actually ask for the real screen variant\n    // and, if different from [] or undefined, forces a re-render.\n\n    const [, updateState] = React.useState<{}>();\n    const lastScreenVariantsRef = React.useRef<string[]>(\n      curScreenVariants || []\n    );\n\n    // We do useLayoutEffect instead of useEffect to immediately\n    // register our forceUpdate. This ensures that if there was\n    // a window resize event between render and effects, that the\n    // listener will be registered in time\n    useIsomorphicLayoutEffect(() => {\n      const updateIfChanged = () => {\n        if (\n          curScreenVariants &&\n          lastScreenVariantsRef.current.join(\"\") !== curScreenVariants.join(\"\")\n        ) {\n          lastScreenVariantsRef.current = curScreenVariants;\n          // Force update\n          updateState({});\n        }\n      };\n\n      // Listeners are invoked whenever the window is resized\n      listeners.push(updateIfChanged);\n\n      // Initialize the curScreenVariants for the first time.  We don't need\n      // to invoke the listeners here because all components will already\n      // have this effect running and will re-render if the real screen\n      // variant is non-empty.\n      ensureInitCurScreenVariants();\n\n      // Now, if the curScreenVariants differs from what we returned last,\n      // then force a re-render.\n      updateIfChanged();\n      return () => {\n        // Remove our listener on unmount\n        listeners.splice(listeners.indexOf(updateIfChanged), 1);\n      };\n    }, []);\n\n    if (isMulti) {\n      return curScreenVariants || [];\n    } else if (curScreenVariants) {\n      return curScreenVariants[curScreenVariants.length - 1];\n    } else {\n      return undefined;\n    }\n  };\n}\n","import {\n  PlasmicDataSourceContextProvider,\n  PlasmicDataSourceContextValue,\n} from \"@plasmicapp/data-sources-context\";\nimport { SSRProvider, useIsSSR as useAriaIsSSR } from \"@react-aria/ssr\";\nimport * as React from \"react\";\nimport { PlasmicHeadContext } from \"./PlasmicHead\";\nimport { PlasmicTranslator, PlasmicTranslatorContext } from \"./translation\";\nexport {\n  PlasmicDataSourceContextProvider,\n  useCurrentUser,\n} from \"@plasmicapp/data-sources-context\";\n\nexport interface PlasmicRootContextValue {\n  platform?: \"nextjs\" | \"gatsby\";\n}\n\nconst PlasmicRootContext = React.createContext<\n  PlasmicRootContextValue | undefined\n>(undefined);\n\nexport interface PlasmicRootProviderProps\n  extends PlasmicDataSourceContextValue {\n  platform?: \"nextjs\" | \"gatsby\";\n  children?: React.ReactNode;\n  translator?: PlasmicTranslator;\n  Head?: React.ComponentType<any>;\n}\n\nexport function PlasmicRootProvider(props: PlasmicRootProviderProps) {\n  const {\n    platform,\n    children,\n    userAuthToken,\n    isUserLoading,\n    authRedirectUri,\n    user,\n  } = props;\n  const context = React.useMemo(\n    () => ({\n      platform,\n    }),\n    [platform]\n  );\n  const dataSourceContextValue = React.useMemo(\n    () => ({\n      userAuthToken,\n      user,\n      isUserLoading,\n      authRedirectUri,\n    }),\n    [userAuthToken, isUserLoading, user, authRedirectUri]\n  );\n  return (\n    <PlasmicRootContext.Provider value={context}>\n      <SSRProvider>\n        <PlasmicDataSourceContextProvider value={dataSourceContextValue}>\n          <PlasmicTranslatorContext.Provider value={props.translator}>\n            <PlasmicHeadContext.Provider value={props.Head}>\n              {children}\n            </PlasmicHeadContext.Provider>\n          </PlasmicTranslatorContext.Provider>\n        </PlasmicDataSourceContextProvider>\n      </SSRProvider>\n    </PlasmicRootContext.Provider>\n  );\n}\n\nexport const useIsSSR = useAriaIsSSR;\n\nexport function useHasPlasmicRoot() {\n  return !!React.useContext(PlasmicRootContext);\n}\n\nlet hasWarnedSSR = false;\n/**\n * Warns the user if PlasmicRootProvider is not used\n */\nexport function useEnsureSSRProvider() {\n  const hasRoot = useHasPlasmicRoot();\n  if (hasRoot || hasWarnedSSR || process.env.NODE_ENV !== \"development\") {\n    return;\n  }\n\n  hasWarnedSSR = true;\n  console.warn(\n    `Plasmic: To ensure your components work correctly with server-side rendering, please use PlasmicRootProvider at the root of your application.  See https://docs.plasmic.app/learn/ssr`\n  );\n}\n","import * as React from \"react\";\nimport { useFocusRing as useAriaFocusRing } from \"@react-aria/focus\";\n\nfunction useFocused(opts: { isTextInput?: boolean }) {\n  const { isFocused, focusProps } = useAriaFocusRing({\n    within: false,\n    isTextInput: opts.isTextInput,\n  });\n\n  return [isFocused, focusProps];\n}\n\nfunction useFocusVisible(opts: { isTextInput?: boolean }) {\n  const { isFocusVisible, focusProps } = useAriaFocusRing({\n    within: false,\n    isTextInput: opts.isTextInput,\n  });\n\n  return [isFocusVisible, focusProps];\n}\n\nfunction useFocusedWithin(opts: { isTextInput?: boolean }) {\n  const { isFocused, focusProps } = useAriaFocusRing({\n    within: true,\n    isTextInput: opts.isTextInput,\n  });\n\n  return [isFocused, focusProps];\n}\n\nfunction useFocusVisibleWithin(opts: { isTextInput?: boolean }) {\n  const { isFocusVisible, focusProps } = useAriaFocusRing({\n    within: true,\n    isTextInput: opts.isTextInput,\n  });\n\n  return [isFocusVisible, focusProps];\n}\n\nfunction useHover() {\n  const [isHover, setHover] = React.useState(false);\n  return [\n    isHover,\n    {\n      onMouseEnter: () => setHover(true),\n      onMouseLeave: () => setHover(false),\n    },\n  ];\n}\n\nfunction usePressed() {\n  const [isPressed, setPressed] = React.useState(false);\n  return [\n    isPressed,\n    {\n      onMouseDown: () => setPressed(true),\n      onMouseUp: () => setPressed(false),\n    },\n  ];\n}\n\nconst TRIGGER_TO_HOOK = {\n  useHover,\n  useFocused,\n  useFocusVisible,\n  useFocusedWithin,\n  useFocusVisibleWithin,\n  usePressed,\n} as const;\n\ntype TriggerType = keyof typeof TRIGGER_TO_HOOK;\n\ninterface TriggerOpts {\n  isTextInput?: boolean;\n}\n\n/**\n * Installs argment trigger. All the useTrigger calls must use hardcoded `trigger` arg,\n * as it's not valid to install variable React hooks!\n */\nexport function useTrigger(trigger: TriggerType, opts: TriggerOpts) {\n  return TRIGGER_TO_HOOK[trigger](opts) as [\n    boolean,\n    React.HTMLAttributes<HTMLElement>\n  ];\n}\n","import { StateSpecNode } from \"./graph\";\n\nexport type InitFuncEnv = {\n  $props: Record<string, any>;\n  $state: Record<string, any>;\n  $queries?: Record<string, any>;\n  $ctx?: Record<string, any>;\n};\n\nexport type DollarStateEnv = Omit<InitFuncEnv, \"$state\">;\n\nexport type NoUndefinedField<T> = { [P in keyof T]-?: T[P] };\n\nexport type InitFunc<T> = (env: NoUndefinedField<InitFuncEnv>) => T;\n\nexport type DeprecatedInitFunc<T> = (\n  $props: Record<string, any>,\n  $state: $State,\n  $ctx: Record<string, any>\n) => T;\n\nexport type ObjectPath = (string | number)[];\n\nexport interface $StateSpec<T> {\n  // path of the state, like `count` or `list.selectedIndex`\n  path: string;\n  // if initial value is defined by a js expression\n  initFunc?: InitFunc<T>;\n  // if initial value is a hard-coded value\n  initVal?: T;\n  // Whether this state is private, readonly, or writable in\n  // this component\n  type: \"private\" | \"readonly\" | \"writable\";\n\n  // If writable, there should be a valueProp that maps props[valueProp]\n  // to the value of the state\n  valueProp?: string;\n\n  // If writable or readonly, there should be an onChangeProp where\n  // props[onChangeProp] is invoked whenever the value changes\n  onChangeProp?: string;\n\n  isImmutable?: boolean;\n\n  variableType: \"text\" | \"number\" | \"boolean\" | \"array\" | \"object\" | \"variant\";\n\n  // Hash used to re-create the state\n  // This is only used in canvas where the state specs are dynamic\n  initFuncHash?: string;\n}\n\nexport interface $State {\n  [key: string]: any;\n  registerInitFunc?: (\n    path: string,\n    f: InitFunc<any>,\n    repetitonIndex?: number[],\n    overrideEnv?: DollarStateEnv\n  ) => any;\n}\n\nexport const ARRAY_SYMBOL = Symbol(\"[]\");\nexport const PLASMIC_STATE_PROXY_SYMBOL = Symbol(\"plasmic.state.proxy\");\nexport const UNINITIALIZED = Symbol(\"plasmic.unitialized\");\n\nexport interface Internal$StateSpec<T> extends $StateSpec<T> {\n  isRepeated: boolean;\n  pathObj: (string | symbol)[];\n}\n\nexport interface Internal$StateInstance {\n  path: ObjectPath; // [\"counter\", 0, \"count\"]\n  specKey: string;\n}\n\nexport interface StateCell<T> {\n  initialValue?: T | Symbol;\n  node: StateSpecNode<any>;\n  path: ObjectPath;\n  initFunc?: InitFunc<T>;\n  listeners: (() => void)[];\n  initFuncHash: string;\n  overrideEnv?: NoUndefinedField<DollarStateEnv>;\n}\n\nexport interface Internal$State {\n  registrationsQueue: {\n    node: StateSpecNode<any>;\n    path: ObjectPath;\n    f: InitFunc<any>;\n    overrideEnv?: NoUndefinedField<DollarStateEnv>;\n  }[];\n  stateValues: Record<string, any>;\n  env: NoUndefinedField<DollarStateEnv>;\n  rootSpecTree: StateSpecNode<any>;\n  specTreeLeaves: StateSpecNode<any>[];\n  specs: $StateSpec<any>[];\n  stateInitializationEnv: {\n    stack: string[];\n    visited: Set<string>;\n  };\n}\n","export class CustomError extends Error {\n  name: string;\n  constructor(msg?: string) {\n    super(msg);\n    this.name = this.constructor.name;\n    ({ message: this.message, stack: this.stack } = this);\n  }\n}\n\nexport class CyclicStatesReferencesError extends Error {\n  constructor(stateAccessCycle: string[]) {\n    super(\n      \"Cyclic reference found in state initialization: \" +\n        stateAccessCycle.join(\" -> \")\n    );\n  }\n}\n\nexport class InvalidOperation extends Error {\n  constructor(msg: string) {\n    super(msg);\n  }\n}\n\nexport class UnknownError extends Error {\n  constructor(msg: string) {\n    super(msg);\n  }\n}\n","import { isNum, shallowEqual } from \"./helpers\";\nimport {\n  $StateSpec,\n  ARRAY_SYMBOL,\n  Internal$StateSpec,\n  ObjectPath,\n} from \"./types\";\n\nexport class StateSpecNode<T> {\n  private _specs: Internal$StateSpec<T>[];\n  private _edges: Map<string | symbol, StateSpecNode<any>>;\n\n  constructor(specs: Internal$StateSpec<T>[]) {\n    this._specs = specs;\n    this._edges = new Map();\n  }\n\n  setSpecs(specs: Internal$StateSpec<T>[]) {\n    this._specs = specs;\n  }\n\n  edges() {\n    return this._edges;\n  }\n\n  hasEdge(key: string | symbol) {\n    return this._edges.has(key);\n  }\n\n  addEdge(key: string | symbol, node: StateSpecNode<any>) {\n    this._edges.set(key, node);\n  }\n\n  clearEdges() {\n    this._edges = new Map();\n  }\n\n  children() {\n    return this._edges.values();\n  }\n\n  makeTransition(key: string | symbol | number) {\n    key = isNum(key) ? ARRAY_SYMBOL : key;\n    return this._edges.get(key);\n  }\n\n  isLeaf() {\n    return this._edges.size === 0 && this.getAllSpecs().length > 0;\n  }\n\n  hasArrayTransition() {\n    return this._edges.has(ARRAY_SYMBOL);\n  }\n\n  getSpec() {\n    return this._specs[0];\n  }\n\n  getAllSpecs() {\n    return this._specs;\n  }\n}\n\nexport const transformPathStringToObj = (str: string) => {\n  const splitStatePathPart = (state: string): (string | symbol)[] =>\n    state.endsWith(\"[]\")\n      ? [...splitStatePathPart(state.slice(0, -2)), ARRAY_SYMBOL]\n      : [state];\n  return str.split(\".\").flatMap(splitStatePathPart);\n};\n\nexport function buildTree(specs: $StateSpec<any>[]) {\n  const internalSpec = specs.map(\n    (spec) =>\n      ({\n        ...spec,\n        pathObj: transformPathStringToObj(spec.path),\n        isRepeated: spec.path.split(\".\").some((part) => part.endsWith(\"[]\")),\n      } as Internal$StateSpec<any>)\n  );\n\n  const rec = (currentPath: (string | symbol)[]): StateSpecNode<any> => {\n    const node = new StateSpecNode(\n      internalSpec.filter((spec) =>\n        shallowEqual(currentPath, spec.pathObj.slice(0, currentPath.length))\n      )!\n    );\n    node.getAllSpecs().forEach((spec) => {\n      if (spec.pathObj.length > currentPath.length) {\n        const nextKey = spec.pathObj[currentPath.length];\n        if (!node.hasEdge(nextKey)) {\n          node.addEdge(nextKey, rec([...currentPath, nextKey]));\n        }\n      }\n    });\n    return node;\n  };\n\n  return rec([]);\n}\n\nexport function updateTree(root: StateSpecNode<any>, specs: $StateSpec<any>[]) {\n  const internalSpec = specs.map(\n    (spec) =>\n      ({\n        ...spec,\n        pathObj: transformPathStringToObj(spec.path),\n        isRepeated: spec.path.split(\".\").some((part) => part.endsWith(\"[]\")),\n      } as Internal$StateSpec<any>)\n  );\n\n  const rec = (\n    oldNode: StateSpecNode<any> | undefined,\n    currentPath: (string | symbol)[]\n  ): StateSpecNode<any> => {\n    const nodeSpecs = internalSpec.filter((spec) =>\n      shallowEqual(currentPath, spec.pathObj.slice(0, currentPath.length))\n    )!;\n    const node = oldNode ?? new StateSpecNode(nodeSpecs);\n    node.setSpecs(nodeSpecs);\n    const oldEdges = oldNode?.edges();\n    node.clearEdges();\n    node.getAllSpecs().forEach((spec) => {\n      if (spec.pathObj.length > currentPath.length) {\n        const nextKey = spec.pathObj[currentPath.length];\n        if (!node.hasEdge(nextKey)) {\n          node.addEdge(\n            nextKey,\n            rec(oldEdges?.get(nextKey), [...currentPath, nextKey])\n          );\n        }\n      }\n    });\n    return node;\n  };\n\n  return rec(root, []);\n}\n\nexport function getSpecTreeLeaves(root: StateSpecNode<any>) {\n  const leaves: StateSpecNode<any>[] = [];\n  const rec = (node: StateSpecNode<any>) => {\n    for (const child of node.children()) {\n      rec(child);\n    }\n    if (node.isLeaf() && node.getAllSpecs().length > 0) {\n      leaves.push(node);\n    }\n  };\n  rec(root);\n  return leaves;\n}\n\nexport function findStateCell(\n  root: StateSpecNode<any>,\n  pathStr: string,\n  repetitionIndex?: number[]\n) {\n  const realPath: ObjectPath = [];\n  const pathObj = transformPathStringToObj(pathStr);\n  let currRepIndex = 0;\n  for (const part of pathObj) {\n    if (typeof part === \"symbol\") {\n      if (\n        !root.hasArrayTransition() ||\n        !repetitionIndex ||\n        currRepIndex > repetitionIndex.length\n      ) {\n        throw new Error(\n          `transition not found: pathStr ${pathStr} part ${\n            typeof part === \"symbol\" ? \"[]\" : part\n          }`\n        );\n      }\n      realPath.push(repetitionIndex[currRepIndex++]);\n      root = root.makeTransition(ARRAY_SYMBOL)!;\n    } else {\n      if (!root.hasEdge(part)) {\n        throw new Error(\n          `transition not found: pathStr ${pathStr} part ${\n            typeof part === \"symbol\" ? \"[]\" : part\n          }`\n        );\n      }\n      realPath.push(part);\n      root = root.makeTransition(part)!;\n    }\n  }\n  return {\n    node: root,\n    realPath,\n  };\n}\n","import type { ComponentHelpers } from \"@plasmicapp/host\";\nimport get from \"dlv\";\nimport { useEffect, useLayoutEffect } from \"react\";\nimport { getVersion as isValtioProxy } from \"valtio\";\nimport { ensure } from \"../common\";\nimport { StateSpecNode } from \"./graph\";\nimport {\n  $State,\n  ARRAY_SYMBOL,\n  InitFunc,\n  ObjectPath,\n  PLASMIC_STATE_PROXY_SYMBOL,\n  StateCell,\n} from \"./types\";\nimport { proxyObjToStateCell, tryGetStateCellFrom$StateRoot } from \"./valtio\";\n\nexport function initializeCodeComponentStates(\n  $state: $State,\n  states: {\n    name: string;\n    plasmicStateName: string;\n  }[],\n  repetitionIndex: number[],\n  componentHelpers: ComponentHelpers<any>,\n  child$Props: Record<string, any>\n) {\n  const stateHelpers = componentHelpers?.states ?? {};\n  for (const { name, plasmicStateName } of states) {\n    if (name in stateHelpers && \"initFunc\" in stateHelpers[name]) {\n      $state.registerInitFunc?.(\n        plasmicStateName,\n        ({ $props }) => stateHelpers[name].initFunc?.($props),\n        repetitionIndex ?? [],\n        { $props: child$Props }\n      );\n    }\n  }\n}\n\nexport function initializePlasmicStates(\n  $state: $State,\n  states: {\n    name: string;\n    initFunc: InitFunc<any>;\n  }[],\n  repetitionIndex: number[]\n) {\n  for (const { name, initFunc } of states) {\n    $state.registerInitFunc?.(name, initFunc, repetitionIndex ?? []);\n  }\n}\n\nexport function generateStateOnChangeProp(\n  $state: $State,\n  path: ObjectPath\n): (val: any) => void {\n  return (val) => set($state, path, val);\n}\n\nexport function generateStateOnChangePropForCodeComponents(\n  $state: $State,\n  stateName: string,\n  plasmicStatePath: ObjectPath,\n  componentHelpers: ComponentHelpers<any>\n): (val: any) => void {\n  const onChangeArgsToValue =\n    componentHelpers?.states?.[stateName]?.onChangeArgsToValue;\n  if (!onChangeArgsToValue || typeof onChangeArgsToValue !== \"function\") {\n    return generateStateOnChangeProp($state, plasmicStatePath);\n  }\n  return (...args) =>\n    generateStateOnChangeProp(\n      $state,\n      plasmicStatePath\n    )(onChangeArgsToValue.apply(null, args));\n}\n\nexport function generateStateValueProp($state: $State, path: ObjectPath) {\n  return get($state, path);\n}\n\nexport const useIsomorphicLayoutEffect =\n  typeof window !== \"undefined\" ? useLayoutEffect : useEffect;\n\nexport function isPlasmicStateProxy(obj: any) {\n  return (\n    obj != null && typeof obj === \"object\" && !!obj[PLASMIC_STATE_PROXY_SYMBOL]\n  );\n}\n\nexport function is$StateProxy(obj: any) {\n  return (\n    obj != null &&\n    typeof obj === \"object\" &&\n    (!!obj[PLASMIC_STATE_PROXY_SYMBOL] || isValtioProxy(obj))\n  );\n}\n\nexport function getStateCells(\n  $state: $State,\n  root: StateSpecNode<any>\n): StateCell<any>[] {\n  if ($state == null || typeof $state !== \"object\") {\n    return [];\n  }\n\n  if (root.hasArrayTransition()) {\n    return Object.keys($state).flatMap((key) =>\n      getStateCells($state[key], ensure(root.makeTransition(ARRAY_SYMBOL)))\n    );\n  } else {\n    const stateCell = proxyObjToStateCell.get($state) ?? {};\n    const stateCells: StateCell<any>[] = [];\n    for (const [key, child] of root.edges().entries()) {\n      if (typeof key === \"string\" && key in $state) {\n        stateCells.push(...getStateCells($state[key], child));\n        if (key in stateCell) {\n          stateCells.push(stateCell[key]);\n        }\n      }\n    }\n    return stateCells;\n  }\n}\n\nexport function getStateCellsInPlasmicProxy(\n  obj: any\n): { realPath: ObjectPath; path: string }[] {\n  if (!isPlasmicStateProxy(obj)) {\n    return [];\n  }\n  const { node: rootNode, path: rootPath, isOutside } = obj[\n    PLASMIC_STATE_PROXY_SYMBOL\n  ];\n  if (isOutside) {\n    return [];\n  }\n  return getStateCells(obj, rootNode).map((stateCell) => ({\n    path: stateCell.node.getSpec().path,\n    realPath: stateCell.path.slice(rootPath.length),\n  }));\n}\n\nexport function getStateSpecInPlasmicProxy(obj: any, path: ObjectPath) {\n  obj = get(obj, path.slice(0, path.length - 1));\n  if (!isPlasmicStateProxy(obj)) {\n    return undefined;\n  }\n  const { node } = obj[PLASMIC_STATE_PROXY_SYMBOL] as {\n    node: StateSpecNode<any>;\n  };\n  const nextNode = node.makeTransition(path[path.length - 1]);\n  if (node.isLeaf() || !nextNode) {\n    return undefined;\n  }\n  return {\n    spec: nextNode.getSpec(),\n    isImplicitStateArray: nextNode.hasArrayTransition(),\n  };\n}\n\nexport function getCurrentInitialValue(obj: any, path: ObjectPath) {\n  if (!isPlasmicStateProxy(obj)) {\n    return undefined;\n  }\n  return tryGetStateCellFrom$StateRoot(obj, path)?.initialValue;\n}\n\nexport function resetToInitialValue(obj: any, path: ObjectPath) {\n  const stateCell = tryGetStateCellFrom$StateRoot(obj, path);\n  if (stateCell) {\n    set(obj, path, stateCell.initialValue);\n  }\n}\n\nexport function shallowEqual<T>(a1: T[], a2: T[]) {\n  if (a1.length !== a2.length) {\n    return false;\n  }\n  for (let i = 0; i < a1.length; i++) {\n    if (a1[i] !== a2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Shallow comparison of arrays.\n */\nexport function arrayEq(xs: ReadonlyArray<any>, ys: ReadonlyArray<any>) {\n  return (\n    xs.length === ys.length && xs.every((_, index) => xs[index] === ys[index])\n  );\n}\n\nexport function isNum(value: string | number | symbol): value is number {\n  return typeof value === \"symbol\" ? false : !isNaN(+value);\n}\n\ntype StringGen = string | (() => string);\nexport function assert<T>(\n  cond: T,\n  msg: StringGen = \"Assertion failed\"\n): asserts cond {\n  if (!cond) {\n    // We always generate an non empty message so that it doesn't get swallowed\n    // by the async library.\n    msg = (typeof msg === \"string\" ? msg : msg()) || \"Assertion failed\";\n    debugger;\n    throw new Error(msg);\n  }\n}\n\n/**\n * Forked from https://github.com/lukeed/dset\n * Changes: fixed setting a deep value to a proxy object\n */\nexport function set(obj: any, keys: any, val: any) {\n  keys = keys.split ? keys.split(\".\") : keys;\n  var i = 0,\n    l = keys.length,\n    t = obj,\n    x,\n    k;\n  while (i < l) {\n    k = keys[i++];\n    if (k === \"__proto__\" || k === \"constructor\" || k === \"prototype\") break;\n    const newValue =\n      i === l\n        ? val\n        : typeof (x = t[k]) === typeof keys\n        ? x\n        : keys[i] * 0 !== 0 || !!~(\"\" + keys[i]).indexOf(\".\")\n        ? {}\n        : [];\n    assignValue(t, k, newValue);\n    t = t[k];\n  }\n}\n\n/**\n * Forked from lodash\n */\nfunction baseAssignValue(object: any, key: any, value: any) {\n  if (key == \"__proto__\") {\n    Object.defineProperty(object, key, {\n      configurable: true,\n      enumerable: true,\n      value: value,\n      writable: true,\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nfunction eq(value: any, other: any) {\n  return value === other || (value !== value && other !== other);\n}\n\nfunction assignValue(object: any, key: any, value: any) {\n  const objValue = object[key];\n  if (\n    !(\n      Object.prototype.hasOwnProperty.call(object, key) && eq(objValue, value)\n    ) ||\n    (value === undefined && !(key in object))\n  ) {\n    baseAssignValue(object, key, value);\n  }\n}\n","import clone from \"clone\";\nimport get from \"dlv\";\nimport deepEqual from \"fast-deep-equal\";\nimport React from \"react\";\nimport {\n  getVersion as isValtioProxy,\n  proxy as createValtioProxy,\n  ref,\n  subscribe,\n  useSnapshot,\n} from \"valtio\";\nimport { ensure } from \"../common\";\nimport {\n  CyclicStatesReferencesError,\n  InvalidOperation,\n  UnknownError,\n} from \"./errors\";\nimport {\n  buildTree,\n  findStateCell,\n  getSpecTreeLeaves,\n  StateSpecNode,\n  updateTree,\n} from \"./graph\";\nimport {\n  arrayEq,\n  getStateCells,\n  set,\n  useIsomorphicLayoutEffect,\n} from \"./helpers\";\nimport {\n  $State,\n  $StateSpec,\n  DeprecatedInitFunc,\n  DollarStateEnv,\n  InitFunc,\n  InitFuncEnv,\n  Internal$State,\n  NoUndefinedField,\n  ObjectPath,\n  PLASMIC_STATE_PROXY_SYMBOL,\n  StateCell,\n  UNINITIALIZED,\n} from \"./types\";\n\nfunction isNum(value: string | number | symbol): value is number {\n  return typeof value === \"symbol\" ? false : !isNaN(+value);\n}\n\nfunction canProxy(value: any) {\n  return typeof value === \"object\" && value != null;\n}\n\nexport const proxyObjToStateCell = new WeakMap<\n  object,\n  Record<string | number | symbol, StateCell<any>>\n>();\nexport const valtioSubscriptions = new WeakMap<\n  object,\n  ReturnType<typeof subscribe>[]\n>();\n\nfunction ensureStateCell(\n  target: any,\n  property: string | number | symbol,\n  path: ObjectPath,\n  node: StateSpecNode<any>\n) {\n  if (!proxyObjToStateCell.has(target)) {\n    proxyObjToStateCell.set(target, {});\n  }\n  const stateCell = proxyObjToStateCell.get(target)!;\n  if (!(property in stateCell)) {\n    stateCell[property as any] = {\n      listeners: [],\n      initialValue: UNINITIALIZED,\n      path,\n      node,\n      initFunc: node.getSpec().initFunc,\n      initFuncHash: node.getSpec().initFuncHash ?? \"\",\n    };\n  }\n  return stateCell[property as any];\n}\n\nfunction getStateCell(target: any, property: string | number | symbol) {\n  return proxyObjToStateCell.get(target)?.[property as any];\n}\n\nexport function tryGetStateCellFrom$StateRoot(\n  $state: $State,\n  path: ObjectPath\n) {\n  if (path.length === 0) {\n    throw new UnknownError(\"expected a path with length greater than 0\");\n  }\n  const target = get($state, path.slice(0, -1));\n  get(target, path.slice(-1)); // create state cell;\n  return getStateCell(target, path.slice(-1)[0]);\n}\n\nexport function getStateCellFrom$StateRoot($state: $State, path: ObjectPath) {\n  return ensure(tryGetStateCellFrom$StateRoot($state, path));\n}\n\nexport function unsubscribeToValtio(\n  $$state: Internal$State,\n  statePath: ObjectPath\n) {\n  const oldValue = get($$state.stateValues, statePath);\n  if (isValtioProxy(oldValue)) {\n    valtioSubscriptions.get(oldValue)?.forEach((f) => f());\n    valtioSubscriptions.delete(oldValue);\n  }\n}\n\nexport function subscribeToValtio(\n  $$state: Internal$State,\n  statePath: ObjectPath,\n  node: StateSpecNode<any>\n) {\n  const spec = node.getSpec();\n  const maybeValtioProxy = spec.valueProp\n    ? $$state.env.$props[spec.valueProp]\n    : get($$state.stateValues, statePath);\n  if (isValtioProxy(maybeValtioProxy) && spec.onChangeProp) {\n    const unsub = subscribe(maybeValtioProxy, () => {\n      $$state.env.$props[spec.onChangeProp!]?.(\n        spec.valueProp\n          ? $$state.env.$props[spec.valueProp]\n          : get($$state.stateValues, statePath)\n      );\n    });\n    if (!valtioSubscriptions.has(maybeValtioProxy)) {\n      valtioSubscriptions.set(maybeValtioProxy, []);\n    }\n    ensure(valtioSubscriptions.get(maybeValtioProxy)).push(unsub);\n  }\n}\n\nfunction initializeStateValue(\n  $$state: Internal$State,\n  initialStateCell: StateCell<any>,\n  proxyRoot: any\n) {\n  const initialStateName = initialStateCell.node.getSpec().path;\n  const stateAccess: Set<{\n    stateCell: StateCell<any>;\n  }> = new Set();\n  $$state.stateInitializationEnv.visited.add(initialStateName);\n  $$state.stateInitializationEnv.stack.push(initialStateName);\n  const $state = create$StateProxy($$state, (internalStateCell) => ({\n    get() {\n      const spec = internalStateCell.node.getSpec();\n      if ($$state.stateInitializationEnv.visited.has(spec.path)) {\n        // cyclic reference found\n        const stateAccessCycle: string[] = [spec.path];\n        while ($$state.stateInitializationEnv.stack.length > 0) {\n          const curr = $$state.stateInitializationEnv.stack.pop();\n          if (!curr) {\n            break;\n          }\n          stateAccessCycle.push(curr);\n          if (curr === spec.path) {\n            throw new CyclicStatesReferencesError(stateAccessCycle);\n          }\n        }\n        throw new UnknownError(\"Internal error: cycle not found\");\n      }\n\n      const stateCell = getStateCellFrom$StateRoot(\n        proxyRoot,\n        internalStateCell.path\n      );\n      stateAccess.add({ stateCell });\n      if (spec.valueProp) {\n        return $$state.env.$props[spec.valueProp];\n      } else if (spec.initFunc && stateCell.initialValue === UNINITIALIZED) {\n        return initializeStateValue($$state, stateCell, proxyRoot);\n      }\n      return get(proxyRoot, stateCell.path);\n    },\n    set() {\n      throw new InvalidOperation(\n        `Cannot update state values during initialization`\n      );\n    },\n  }));\n\n  stateAccess.forEach(({ stateCell }) => {\n    stateCell.listeners.push(() => {\n      const newValue = invokeInitFuncBackwardsCompatible(\n        initialStateCell.node.getSpec().initFunc!,\n        {\n          $state,\n          ...(initialStateCell.overrideEnv ?? $$state.env),\n        }\n      );\n      set(proxyRoot, initialStateCell.path, newValue);\n    });\n  });\n\n  const initialValue = invokeInitFuncBackwardsCompatible(\n    initialStateCell.initFunc!,\n    {\n      $state,\n      ...(initialStateCell.overrideEnv ?? $$state.env),\n    }\n  );\n  initialStateCell.initialValue = clone(initialValue);\n\n  const initialSpec = initialStateCell.node.getSpec();\n  const value = initialSpec.isImmutable\n    ? mkUntrackedValue(initialValue)\n    : clone(initialValue);\n  set(proxyRoot, initialStateCell.path, value);\n  //immediately fire onChange\n  if (initialSpec.onChangeProp) {\n    $$state.env.$props[initialSpec.onChangeProp]?.(initialValue);\n  }\n  $$state.stateInitializationEnv.visited.delete(initialStateName);\n  $$state.stateInitializationEnv.stack.pop();\n  return initialValue;\n}\n\nfunction create$StateProxy(\n  $$state: Internal$State,\n  leafHandlers: (stateCell: StateCell<any>) => ProxyHandler<any>\n) {\n  let proxyRoot: any;\n  const rec = (currPath: ObjectPath, currNode: StateSpecNode<any>) => {\n    const getNextPath = (property: string | number | symbol) => [\n      ...currPath,\n      isNum(property) ? +property : (property as string),\n    ];\n    const spec = currNode.getSpec();\n    const handlers: ProxyHandler<any> = {\n      deleteProperty(target, property) {\n        if (\n          !currNode.isLeaf() &&\n          !currNode.hasArrayTransition() &&\n          !isNum(property)\n        ) {\n          throw new InvalidOperation(\n            \"Can't delete a property in the middle of the state spec\"\n          );\n        }\n        delete get($$state.stateValues, currPath)[property];\n        if (spec.onChangeProp) {\n          //we are always in a leaf, since we only have two cases:\n          // 1 - delete properties outside the state tree\n          // 2 - delete indices in repeated implicit states, but these can't be exposed, so they don't have onChangeProp\n          $$state.env.$props[spec.onChangeProp]?.(\n            get(proxyRoot, currPath.slice(spec.pathObj.length))\n          );\n        }\n        return Reflect.deleteProperty(target, property);\n      },\n      get(target, property, receiver) {\n        if (property === PLASMIC_STATE_PROXY_SYMBOL) {\n          return {\n            node: currNode,\n            path: currPath,\n          };\n        }\n        const nextPath = getNextPath(property);\n\n        const nextNode = currNode.makeTransition(property);\n        if (nextNode?.isLeaf()) {\n          return leafHandlers(\n            ensureStateCell(receiver, property, nextPath, nextNode)\n          ).get?.(target, property, receiver);\n        } else if (nextNode && !(property in target)) {\n          target[property] = rec(nextPath, nextNode);\n        }\n        return Reflect.get(target, property, receiver);\n      },\n      set(target, property, value, receiver) {\n        const nextPath = getNextPath(property);\n        let nextNode = currNode.makeTransition(property);\n        const nextSpec = nextNode?.getSpec();\n\n        if (property === \"registerInitFunc\" && currPath.length === 0) {\n          return Reflect.set(target, property, value, receiver);\n        }\n        if (!nextNode && currNode.hasArrayTransition()) {\n          set($$state.stateValues, nextPath, value);\n          //array can set his own properties such as length, map, ...\n          return Reflect.set(target, property, value, receiver);\n        }\n        if (nextNode?.isLeaf()) {\n          leafHandlers(\n            ensureStateCell(receiver, property, nextPath, nextNode)\n          ).set?.(target, property, value, receiver);\n          Reflect.set(target, property, value, receiver);\n          if (nextSpec?.onChangeProp) {\n            $$state.env.$props[nextSpec.onChangeProp]?.(value);\n          }\n        }\n        if (!nextNode) {\n          // can't set an unknown field in $state\n          return false;\n        }\n        if (canProxy(value) && !nextNode.isLeaf()) {\n          target[property] = rec(nextPath, nextNode);\n          Reflect.ownKeys(value).forEach((key) => {\n            target[property][key] = value[key];\n          });\n        } else if (!nextNode.isLeaf()) {\n          throw new InvalidOperation(\n            \"inserting a primitive value into a non-leaf\"\n          );\n        }\n        const newValue =\n          nextNode.isLeaf() && nextSpec?.isImmutable\n            ? mkUntrackedValue(value)\n            : value;\n\n        unsubscribeToValtio($$state, nextPath);\n        set($$state.stateValues, nextPath, newValue);\n        subscribeToValtio($$state, nextPath, nextNode);\n        return true;\n      },\n    };\n    const baseObject = currNode.hasArrayTransition() ? [] : {};\n    const proxyObj = new Proxy(baseObject, handlers);\n    if (currPath.length === 0) {\n      proxyRoot = proxyObj;\n    }\n    return proxyObj;\n  };\n\n  return rec([], $$state.rootSpecTree);\n}\n\nconst mkUntrackedValue = (o: any) =>\n  o != null && typeof o === \"object\" ? ref(o) : o;\n\nconst envFieldsAreNonNill = (\n  env: DollarStateEnv\n): NoUndefinedField<DollarStateEnv> => ({\n  $props: env.$props,\n  $ctx: env.$ctx ?? {},\n  $queries: env.$queries ?? {},\n});\n\n/**\n * We need to support two versions with different parameters to be backward compatible\n *    {\n *       specs: $StateSpec<any>[],\n *       props: Record<string, any>,\n *       $ctx?: Record<string, any>,\n *       opts?: { inCanvas: boolean; }\n *    }\n *    {\n *       specs: $StateSpec<any>[],\n *       env: { $props; $queries; $ctx },\n *       opts?: { inCanvas: boolean }\n *    }\n */\nfunction extractDollarStateParametersBackwardCompatible(\n  ...rest: any[]\n): {\n  env: DollarStateEnv;\n  opts?: { inCanvas: boolean };\n} {\n  if (\"$props\" in rest[0]) {\n    // latest version\n    return {\n      env: rest[0],\n      opts: rest[1],\n    };\n  } else {\n    return {\n      env: {\n        $props: rest[0],\n        $ctx: rest[1],\n        $queries: {},\n      },\n      opts: rest[2],\n    };\n  }\n}\n\nfunction invokeInitFuncBackwardsCompatible<T>(\n  initFunc: InitFunc<T> | DeprecatedInitFunc<T>,\n  env: NoUndefinedField<InitFuncEnv>\n) {\n  if (initFunc.length > 1) {\n    return (initFunc as DeprecatedInitFunc<T>)(\n      env.$props,\n      env.$state,\n      env.$ctx\n    );\n  } else {\n    return (initFunc as InitFunc<T>)(env);\n  }\n}\n\nexport function useDollarState(\n  specs: $StateSpec<any>[],\n  ...rest: any[]\n): $State {\n  const { env, opts } = extractDollarStateParametersBackwardCompatible(...rest);\n  const $$state = React.useRef<Internal$State>(\n    (() => {\n      const rootSpecTree = buildTree(specs);\n      return {\n        rootSpecTree: rootSpecTree,\n        specTreeLeaves: getSpecTreeLeaves(rootSpecTree),\n        stateValues: createValtioProxy({}),\n        env: envFieldsAreNonNill(env),\n        specs: [],\n        registrationsQueue: createValtioProxy([]),\n        stateInitializationEnv: { stack: [], visited: new Set<string>() },\n      };\n    })()\n  ).current;\n  $$state.env = envFieldsAreNonNill(env);\n  $$state.specs = specs;\n\n  const create$State = React.useCallback(() => {\n    const $state = Object.assign(\n      create$StateProxy($$state, (stateCell) => {\n        const spec = stateCell.node.getSpec();\n        if (stateCell.initialValue === UNINITIALIZED && spec.initFunc) {\n          initializeStateValue($$state, stateCell, $state);\n        } else if (\n          stateCell.initialValue === UNINITIALIZED &&\n          !spec.valueProp\n        ) {\n          stateCell.initialValue = spec.initVal;\n          set($state, stateCell.path, spec.initVal);\n        }\n        return {\n          get() {\n            const spec = stateCell.node.getSpec();\n            if (spec.valueProp) {\n              const valueProp = $$state.env.$props[spec.valueProp];\n              subscribeToValtio($$state, stateCell.path, stateCell.node);\n              return valueProp;\n            } else {\n              return get($$state.stateValues, stateCell.path);\n            }\n          },\n        };\n      }),\n      {\n        registerInitFunc: function <T>(\n          pathStr: string,\n          f: InitFunc<T>,\n          repetitionIndex?: number[],\n          overrideEnv?: DollarStateEnv\n        ) {\n          const { node, realPath } = findStateCell(\n            $$state.rootSpecTree,\n            pathStr,\n            repetitionIndex\n          );\n          const stateCell = getStateCellFrom$StateRoot($state, realPath);\n          const env = overrideEnv\n            ? envFieldsAreNonNill(overrideEnv)\n            : $$state.env;\n          if (!deepEqual(stateCell.initialValue, f({ $state, ...env }))) {\n            $$state.registrationsQueue.push(\n              mkUntrackedValue({\n                node,\n                path: realPath,\n                f,\n                overrideEnv: overrideEnv\n                  ? envFieldsAreNonNill(overrideEnv)\n                  : undefined,\n              })\n            );\n          }\n        },\n      }\n    );\n    return $state;\n  }, []);\n  const ref = React.useRef<undefined | $State>(undefined);\n  if (!ref.current) {\n    ref.current = create$State();\n  }\n  let $state = ref.current as $State;\n  if (opts?.inCanvas) {\n    $$state.rootSpecTree = updateTree($$state.rootSpecTree, specs);\n    const newLeaves = getSpecTreeLeaves($$state.rootSpecTree);\n    if (!arrayEq(newLeaves, $$state.specTreeLeaves)) {\n      const old$state = $state;\n      $state = ref.current = create$State();\n      $$state.specTreeLeaves = newLeaves;\n      getStateCells(old$state, $$state.rootSpecTree).forEach(({ path }) => {\n        const oldStateCell = tryGetStateCellFrom$StateRoot(old$state, path);\n        if (oldStateCell) {\n          set($state, path, get(old$state, path));\n          const newStateCell = getStateCellFrom$StateRoot($state, path);\n          newStateCell.initialValue = oldStateCell.initialValue;\n        }\n      });\n    }\n    // we need to eager initialize all states in canvas to populate the data picker\n    $$state.specTreeLeaves.forEach((node) => {\n      const spec = node.getSpec();\n      if (spec.isRepeated) {\n        return;\n      }\n      const stateCell = getStateCellFrom$StateRoot(\n        $state,\n        spec.pathObj as string[]\n      );\n      const newSpec = specs.find((sp) => sp.path === spec.path);\n      if (\n        !newSpec ||\n        (stateCell.initFuncHash === (newSpec?.initFuncHash ?? \"\") &&\n          stateCell.initialValue !== UNINITIALIZED)\n      ) {\n        return;\n      }\n      stateCell.initFunc = newSpec.initFunc;\n      stateCell.initFuncHash = newSpec.initFuncHash ?? \"\";\n      const init = spec.valueProp\n        ? $$state.env.$props[spec.valueProp]\n        : spec.initFunc\n        ? initializeStateValue($$state, stateCell, $state)\n        : spec.initVal;\n      set($state, spec.pathObj, init);\n    });\n  }\n\n  // For each spec with an initFunc, evaluate it and see if\n  // the init value has changed. If so, reset its state.\n  const resetSpecs: {\n    stateCell: StateCell<any>;\n  }[] = [];\n  getStateCells($state, $$state.rootSpecTree).forEach((stateCell) => {\n    if (stateCell.initFunc) {\n      const newInit = invokeInitFuncBackwardsCompatible(stateCell.initFunc, {\n        $state,\n        ...(stateCell.overrideEnv ?? envFieldsAreNonNill(env)),\n      });\n      if (!deepEqual(newInit, stateCell.initialValue)) {\n        resetSpecs.push({ stateCell });\n      }\n    }\n  });\n  const reInitializeState = (stateCell: StateCell<any>) => {\n    const newInit = initializeStateValue($$state, stateCell, $state);\n    const spec = stateCell.node.getSpec();\n    if (spec.onChangeProp) {\n      $$state.env.$props[spec.onChangeProp]?.(newInit);\n    }\n  };\n  useIsomorphicLayoutEffect(() => {\n    resetSpecs.forEach(({ stateCell }) => {\n      reInitializeState(stateCell);\n    });\n  }, [env.$props, resetSpecs]);\n  useIsomorphicLayoutEffect(() => {\n    while ($$state.registrationsQueue.length) {\n      const { path, f, overrideEnv } = $$state.registrationsQueue.shift()!;\n      const stateCell = getStateCellFrom$StateRoot($state, path);\n      stateCell.initFunc = f;\n      stateCell.overrideEnv = overrideEnv;\n      reInitializeState(stateCell);\n    }\n  }, [$$state.registrationsQueue.length]);\n  // immediately initialize exposed non-private states\n  useIsomorphicLayoutEffect(() => {\n    $$state.specTreeLeaves.forEach((node) => {\n      const spec = node.getSpec();\n      if (!spec.isRepeated && spec.type !== \"private\" && spec.initFunc) {\n        const stateCell = getStateCellFrom$StateRoot(\n          $state,\n          spec.pathObj as ObjectPath\n        );\n        initializeStateValue($$state, stateCell, $state);\n      }\n    });\n  }, []);\n\n  // Re-render if any value changed in one of these objects\n  useSnapshot($$state.stateValues, { sync: true });\n  useSnapshot($$state.registrationsQueue, { sync: true });\n  return $state;\n}\n\nexport default useDollarState;\n","// Utilities used by generated code\nimport _classNames from \"classnames\";\nexport {\n  PlasmicPageGuard,\n  withPlasmicPageGuard,\n} from \"./auth/PlasmicPageGuard\";\nexport { omit, pick } from \"./common\";\nexport { HTMLElementRefOf, StrictProps } from \"./react-utils\";\nexport {\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  Flex,\n  hasVariant,\n  makeFragment,\n  mergeVariantsWithStates,\n  MultiChoiceArg,\n  SingleBooleanChoiceArg,\n  SingleChoiceArg,\n  wrapWithClassName,\n} from \"./render/elements\";\nexport { ensureGlobalVariants } from \"./render/global-variants\";\nexport { PlasmicHead, plasmicHeadMeta } from \"./render/PlasmicHead\";\nexport { PlasmicIcon } from \"./render/PlasmicIcon\";\nexport { PlasmicImg } from \"./render/PlasmicImg\";\nexport { PlasmicLink } from \"./render/PlasmicLink\";\nexport { PlasmicSlot, renderPlasmicSlot } from \"./render/PlasmicSlot\";\nexport { createUseScreenVariants } from \"./render/screen-variants\";\nexport {\n  PlasmicDataSourceContextProvider,\n  PlasmicRootProvider,\n  useCurrentUser,\n  useIsSSR,\n} from \"./render/ssr\";\nexport { Stack } from \"./render/Stack\";\nexport { genTranslatableString, Trans } from \"./render/translation\";\nexport { useTrigger } from \"./render/triggers\";\nexport * from \"./states\";\nexport const classNames = _classNames;\n","import * as React from \"react\";\nimport { groupBy, mapValues } from \"../common\";\nimport { SingleChoiceArg } from \"../render/elements\";\n\nexport let PLUME_STRICT_MODE = true;\n\nexport function setPlumeStrictMode(mode: boolean) {\n  PLUME_STRICT_MODE = mode;\n}\n\ntype VariantArgChoices<T> = T extends (infer M)[]\n  ? M\n  : T extends SingleChoiceArg<infer M>\n  ? M\n  : never;\ntype VariantArgsChoices<V> = { [k in keyof V]-?: VariantArgChoices<V[k]> };\ntype DictValues<V extends Record<string, any>> = V[keyof V];\ntype DictTuples<V extends Record<string, any>> = DictValues<\n  { [K in keyof V]: [K, V[K]] }\n>;\nexport type VariantDefTuple<V> = DictTuples<VariantArgsChoices<V>>;\n\ntype DistributeTuple<T> = T extends [infer T1, infer T2]\n  ? { group: T1; variant: T2 }\n  : never;\n\nexport type VariantDef<V> = DistributeTuple<VariantDefTuple<V>>;\n\nexport type PlasmicClass<\n  V extends Record<string, any>,\n  A extends Record<string, any>,\n  O extends Record<string, any>\n> = {\n  (props: { variants?: V; args?: A; overrides?: O }): React.ReactElement | null;\n  internalVariantProps: (keyof V)[];\n  internalArgProps: (keyof A)[];\n};\n\nexport type AnyPlasmicClass = PlasmicClass<any, any, any>;\n\nexport type PlasmicClassVariants<\n  C extends AnyPlasmicClass\n> = C extends PlasmicClass<infer V, any, any> ? V : unknown;\nexport type PlasmicClassArgs<\n  C extends AnyPlasmicClass\n> = C extends PlasmicClass<any, infer A, any> ? A : unknown;\nexport type PlasmicClassOverrides<\n  C extends AnyPlasmicClass\n> = C extends PlasmicClass<any, any, infer O> ? O : unknown;\n\ntype BooleanLike = boolean | undefined | null;\n\nexport function mergeVariantToggles<V>(\n  ...toggles: { def?: VariantDef<V>; active: BooleanLike }[]\n) {\n  const definedToggles = toggles.filter((x) => !!x.def) as {\n    def: VariantDef<V>;\n    active: BooleanLike;\n  }[];\n  const grouped = groupBy(definedToggles, ({ def }) => def.group as string);\n  return mapValues(grouped, (subToggles) => {\n    return Object.fromEntries(\n      subToggles.map(({ def, active }) => [def.variant, !!active])\n    );\n  });\n}\n\nexport function noOutline() {\n  return { outline: \"none\" };\n}\n\nexport function getPlumeType(child: React.ReactChild): string | undefined {\n  if (!React.isValidElement(child)) {\n    return undefined;\n  }\n  const childType = child.type as any;\n  return (childType.__plumeType || childType.getPlumeType?.(child.props)) as\n    | string\n    | undefined;\n}\n","import * as React from \"react\";\nimport { pick, pickBy } from \"../common\";\nimport {\n  AnyPlasmicClass,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n} from \"./plume-utils\";\n\nexport interface StyleProps {\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nexport function getStyleProps<P extends StyleProps>(props: P): StyleProps {\n  return pick(props, \"className\", \"style\");\n}\n\nexport function getDefaultPlasmicProps<C extends AnyPlasmicClass>(\n  plasmicClass: C,\n  props: Record<string, any>\n) {\n  return {\n    plasmicProps: {\n      variants: pick(\n        props,\n        ...plasmicClass.internalVariantProps\n      ) as PlasmicClassVariants<C>,\n      args: pick(\n        props,\n        ...plasmicClass.internalArgProps\n      ) as PlasmicClassArgs<C>,\n      overrides: {} as PlasmicClassOverrides<C>,\n    },\n  };\n}\n\nconst RE_DATA_PROP = /^(data-.*)$/;\n\nexport function getDataProps(props: Record<string, any>) {\n  return pickBy(props, (k) => RE_DATA_PROP.test(k));\n}\n","/**\n * In general, we try not to expose react-aria's Collections API to Plume users.\n * The Collections API is how react-aria users pass data about collections of\n * things using the built-in Item and Section components, which are abstract,\n * metadata-only components that don't render anything but only serve to specify\n * data.  For example, here's how you would use react-spectrum's Picker:\n *\n *   <Picker>\n *     <Section title=\"Asia\">\n *       <Item key=\"taiwan\">Taiwan</Item>\n *       <Item key=\"japan\">Japan</Item>\n *       <Item key=\"china\">China</Item>\n *     </Section>\n *     <Section title=\"Europe\">\n *       <Item key=\"germany\">Germany</Item>\n *       <Item key=\"france\">France</Item>\n *     </Section>\n *   </Picker>\n *\n * You would re-use this same Item/Section components to pass similar things to\n * Menu, Tabs, etc.\n *\n * For Plasmic, this API is too abstract.  The user has explicitly designed components\n * like Select.Option and Select.OptionGroup, and it is weird that they don't actually\n * use these components. It is more natural to do:\n *\n *   <Select>\n *     <Select.OptionGroup title=\"Asia\">\n *       <Select.Option key=\"taiwan\">Taiwan</Select>\n *     </Select.OptionGroup>\n *   </Select>\n *\n * For Plume, we let users directly use the components they designed, both to collect\n * information and to perform actual rendering.  For example, for Plume,\n * you'd use Select.Option instead of Item, and Select.OptionGroup instead of Section.\n * This means that the Select.Option props will collect the same information Item\n * does.\n *\n * A component like Select.Option then serves two purposes:\n *\n * 1. Allow users to specify the collection of data, like in the above example\n *    Here, we're mainly interested in the props in those ReactElements so\n *    we can pass the Item/Section data onto react-aria's APIs.  We are not\n *    actually rendering these elements.\n * 2. Once react-aria's Collections API has gone through them and built\n *    Collection \"nodes\", we then create cloned versions of these elements\n *    with the corresponding node passed in as a secret prop.  These ReactElements\n *    are then actually used to _render_ the corresponding Option / OptionGroup.\n *\n * This file contains helper functions to help with implementing the above.\n *\n * Note also that most of the collections-based react-aria components expose\n * a parallel API that accepts a list of \"items\" and a render prop, instead\n * of list of Item/Section elements.  This is for efficiency, but we are opting\n * to only support the composite-component pattern for now for simplicity.\n */\n\nimport { Item, Section } from \"@react-stately/collections\";\nimport { Node } from \"@react-types/shared\";\nimport React from \"react\";\nimport { isString } from \"../common\";\nimport { getElementTypeName, toChildArray } from \"../react-utils\";\nimport { getPlumeType, PLUME_STRICT_MODE } from \"./plume-utils\";\n\nexport interface PlasmicLoaderProps<T> {\n  component: string;\n  componentProps: T;\n}\n\n/**\n * Props for a Plume component that corresponds to an Item\n */\nexport interface ItemLikeProps {\n  /**\n   * value key corresponding to this item. Not required if you use the\n   * `key` prop instead.\n   */\n  value?: string | null;\n\n  /**\n   * The text string value corresponding to this item. Used to support\n   * keyboard type-ahead.  If not specified, then will be derived from\n   * `children` if it is a string, or the `value` or `key`.\n   */\n  textValue?: string;\n\n  /**\n   * aria-label for this item.\n   */\n  \"aria-label\"?: string;\n\n  /**\n   * Primary content label for this item.\n   */\n  children?: React.ReactNode;\n\n  /**\n   * If true, this item will not be selectable.\n   */\n  isDisabled?: boolean;\n}\n\ntype LoaderAwareItemLikeProps =\n  | ItemLikeProps\n  | PlasmicLoaderProps<ItemLikeProps>;\n\n/**\n * Props for a Plume component that corresponds to a Section\n */\nexport interface SectionLikeProps {\n  /**\n   * Heading content of the title\n   */\n  title?: React.ReactNode;\n\n  /**\n   * aria-label for this section\n   */\n  \"aria-label\"?: string;\n\n  /**\n   * A list of items that belong in this group\n   */\n  children?: React.ReactNode;\n}\n\ntype LoaderAwareSectionLikeProps =\n  | SectionLikeProps\n  | PlasmicLoaderProps<SectionLikeProps>;\n\nexport type ItemJson = LeafItemJson | SectionJson;\n\nexport type LeafItemJson =\n  | string\n  | {\n      value: string;\n      label?: string;\n      textValue?: string;\n      isDisabled?: boolean;\n    };\n\nexport interface SectionJson {\n  title: string;\n  children: ItemJson[];\n}\n\nexport function deriveItemsFromProps(\n  props: any,\n  opts: {\n    itemPlumeType: string;\n    sectionPlumeType?: string;\n    invalidChildError?: string;\n    requireItemValue: boolean;\n    ItemComponent?: React.ComponentType<ItemLikeProps>;\n    SectionComponent?: React.ComponentType<SectionLikeProps>;\n    itemsProp?: string;\n  }\n) {\n  if (opts.itemsProp && opts.itemsProp in props) {\n    if (!opts.ItemComponent || !opts.SectionComponent) {\n      throw new Error(`You may need to re-generate your Plasmic* files`);\n    }\n    const items = props[opts.itemsProp] as ItemJson[] | undefined;\n    return deriveItemsFromItemsProp(items, {\n      ItemComponent: opts.ItemComponent,\n      SectionComponent: opts.SectionComponent,\n    });\n  } else {\n    return deriveItemsFromChildren(props.children as React.ReactNode, opts);\n  }\n}\n\nfunction deriveItemsFromItemsProp(\n  items: ItemJson[] | undefined,\n  opts: {\n    ItemComponent: React.ComponentType<ItemLikeProps>;\n    SectionComponent: React.ComponentType<SectionLikeProps>;\n  }\n) {\n  const { ItemComponent, SectionComponent } = opts;\n  const disabledKeys: string[] = [];\n  const transform = (item: ItemJson) => {\n    if (typeof item === \"string\") {\n      return (\n        <ItemComponent key={item} value={item}>\n          {item}\n        </ItemComponent>\n      );\n    } else if (\"children\" in item) {\n      return (\n        <SectionComponent key={item.title} title={item.title}>\n          {item.children.map((x) => transform(x))}\n        </SectionComponent>\n      );\n    } else {\n      if (item.isDisabled) {\n        disabledKeys.push(item.value);\n      }\n      return (\n        <ItemComponent\n          key={item.value}\n          value={item.value}\n          textValue={item.textValue}\n          isDisabled={item.isDisabled}\n        >\n          {item.label ?? item.value}\n        </ItemComponent>\n      );\n    }\n  };\n  return {\n    items: items?.map((x) => transform(x)) ?? [],\n    disabledKeys,\n  };\n}\n\n/**\n * Given children of a component like Select or Menu, derive the items\n * that we will pass into the Collections API.  These will be\n * ReactElement<ItemLikeProps|SectionLikeProps>[].\n *\n * Will also assign keys to items by their index in the collection,\n * and collect the keys of disabled items.\n */\nexport function deriveItemsFromChildren<T extends React.ReactElement>(\n  children: React.ReactNode,\n  opts: {\n    itemPlumeType: string;\n    sectionPlumeType?: string;\n    invalidChildError?: string;\n    requireItemValue: boolean;\n  }\n) {\n  if (!children) {\n    return {\n      items: [] as T[],\n      disabledKeys: [] as React.Key[],\n    };\n  }\n\n  const { itemPlumeType, sectionPlumeType, invalidChildError } = opts;\n\n  // For Plume items without an explicit key, we assign a key as the index\n  // of the collection.\n  let itemCount = 0;\n  let sectionCount = 0;\n\n  const ensureValue = (element: React.ReactElement) => {\n    if (!propInChild(element, \"value\")) {\n      if (opts.requireItemValue && PLUME_STRICT_MODE) {\n        throw new Error(\n          `Must specify a \"value\" prop for ${getElementTypeName(element)}`\n        );\n      } else {\n        return cloneChild(element, { value: `${itemCount++}` });\n      }\n    } else {\n      // Still increment count even if key is present, so that the\n      // auto-assigned key really reflects the index\n      itemCount++;\n      return element;\n    }\n  };\n\n  const disabledKeys: React.Key[] = [];\n\n  const flattenedChildren = (\n    children: React.ReactNode\n  ): React.ReactElement[] => {\n    return toChildArray(children).flatMap((child) => {\n      if (React.isValidElement(child)) {\n        if (child.type === React.Fragment) {\n          return flattenedChildren(\n            (child as React.ReactElement<{ children: React.ReactNode }>).props\n              .children\n          );\n        }\n        const type = getPlumeType(child);\n        if (type === itemPlumeType) {\n          child = ensureValue(child);\n          const childKey = getItemLikeKey(child);\n          if (getChildProp(child, \"isDisabled\") && !!childKey) {\n            disabledKeys.push(childKey);\n          }\n          return [child];\n        }\n        if (type === sectionPlumeType) {\n          return [\n            cloneChild(child, {\n              // key of section doesn't actually matter, just needs\n              // to be unique\n              key: child.key ?? `section-${sectionCount++}`,\n              children: flattenedChildren(getChildProp(child, \"children\")),\n            }),\n          ];\n        }\n      }\n\n      if (PLUME_STRICT_MODE) {\n        throw new Error(invalidChildError ?? `Unexpected child`);\n      } else {\n        return [];\n      }\n    });\n  };\n\n  return { items: flattenedChildren(children) as T[], disabledKeys };\n}\n\nexport function useDerivedItems(\n  props: any,\n  opts: {\n    itemPlumeType: string;\n    sectionPlumeType?: string;\n    invalidChildError?: string;\n    requireItemValue: boolean;\n    ItemComponent?: React.ComponentType<ItemLikeProps>;\n    SectionComponent?: React.ComponentType<SectionLikeProps>;\n    itemsProp?: string;\n  }\n) {\n  const { children } = props;\n  const {\n    itemPlumeType,\n    sectionPlumeType,\n    invalidChildError,\n    requireItemValue,\n    ItemComponent,\n    SectionComponent,\n    itemsProp,\n  } = opts;\n  const items = itemsProp ? props[itemsProp] : undefined;\n  return React.useMemo(() => {\n    return deriveItemsFromProps(props, {\n      itemPlumeType,\n      sectionPlumeType,\n      invalidChildError,\n      requireItemValue,\n      itemsProp,\n      ItemComponent,\n      SectionComponent,\n    });\n  }, [\n    children,\n    items,\n    itemPlumeType,\n    sectionPlumeType,\n    invalidChildError,\n    requireItemValue,\n    ItemComponent,\n    SectionComponent,\n  ]);\n}\n\nexport function useDerivedItemsFromChildren<T extends React.ReactElement>(\n  children: React.ReactNode,\n  opts: {\n    itemPlumeType: string;\n    sectionPlumeType?: string;\n    invalidChildError?: string;\n    requireItemValue: boolean;\n  }\n) {\n  const {\n    itemPlumeType,\n    sectionPlumeType,\n    invalidChildError,\n    requireItemValue,\n  } = opts;\n  return React.useMemo(() => {\n    return deriveItemsFromChildren<T>(children, {\n      itemPlumeType,\n      sectionPlumeType,\n      invalidChildError,\n      requireItemValue,\n    });\n  }, [\n    children,\n    itemPlumeType,\n    sectionPlumeType,\n    invalidChildError,\n    requireItemValue,\n  ]);\n}\n\n/**\n * Given a Collection node, create the React element that we should use\n * to render it.\n */\nexport function renderCollectionNode(node: Node<any>) {\n  // node.rendered should already have our item-like or section-like Plume\n  // component elements, so we just need to clone them with a secret\n  // _node prop that we use to render.\n  return cloneChild(node.rendered as React.ReactElement, {\n    _node: node,\n    key: node.key,\n  });\n}\n\n/**\n * Renders a item-like or section-like Plume component element into an\n * Item or a Section element.\n */\nexport function renderAsCollectionChild<\n  T extends React.ReactElement<\n    LoaderAwareItemLikeProps | LoaderAwareSectionLikeProps\n  >\n>(\n  child: T,\n  opts: {\n    itemPlumeType: string;\n    sectionPlumeType?: string;\n  }\n) {\n  const plumeType = getPlumeType(child);\n  if (plumeType === opts.itemPlumeType) {\n    const option = child as React.ReactElement<LoaderAwareItemLikeProps>;\n\n    // We look at the children passed to the item-like element, and derive key\n    // or textValue from it if it is a string\n    const content = getChildProp(option, \"children\");\n\n    // The children render prop needs to return an <Item/>\n    return (\n      <Item\n        // We use ItemLike.value if the user explicitly specified a value,\n        // and we fallback to key.  If the user specified neither, then\n        // the Collections API will generate a unique key for this item.\n        key={getItemLikeKey(option)}\n        // textValue is either explicitly specified by the user, or we\n        // try to derive it if `content` is a string.\n        textValue={\n          getChildProp(option, \"textValue\") ??\n          (isString(content)\n            ? content\n            : propInChild(option, \"value\")\n            ? getChildProp(option, \"value\")\n            : option.key)\n        }\n        aria-label={getChildProp(option, \"aria-label\")}\n      >\n        {\n          // Note that what we setting the item-like element as the children\n          // here, and not content; we want the entire item-like Plume element to\n          // end up as Node.rendered.\n        }\n        {option}\n      </Item>\n    );\n  } else {\n    const group = child as React.ReactElement<LoaderAwareSectionLikeProps>;\n    return (\n      <Section\n        // Note that we are using the whole section-like element as the title\n        // here, and not group.props.title; we want the entire section-like\n        // Plume element to end up as Node.rendered.\n        title={group}\n        aria-label={getChildProp(group, \"aria-label\")}\n        // We are flattening and deriving the descendant Options as items here.\n        // group.props.children should've already been cleaned up by\n        // deriveItemsFromChildren()\n        items={getChildProp(group, \"children\") as React.ReactElement[]}\n      >\n        {\n          // We use the same render function to turn descendent Options into Items\n        }\n        {(c: React.ReactElement) => renderAsCollectionChild(c, opts)}\n      </Section>\n    );\n  }\n}\n\nfunction getItemLikeKey(element: React.ReactElement<LoaderAwareItemLikeProps>) {\n  return getChildProp(element, \"value\") ?? element.key;\n}\n\n// PlasmicLoader-aware function to get prop from child.\nexport function getChildProp(child: React.ReactElement, prop: string) {\n  return \"componentProps\" in child.props\n    ? child.props.componentProps[prop]\n    : child.props[prop];\n}\n\n// PlasmicLoader-aware function to check `if (prop in element.props)`.\nfunction propInChild(child: React.ReactElement, prop: string): boolean {\n  return \"componentProps\" in child.props\n    ? prop in child.props.componentProps\n    : prop in child.props;\n}\n\n// PlasmicLoader-aware function to clone React element.\nfunction cloneChild(child: React.ReactElement, props: Record<string, any>) {\n  if ((child.type as any).getPlumeType) {\n    // If React element has getPlumeType(), assume that it is PlasmicLoader,\n    // so add nodeProps to componentProps instead of element props.\n    return React.cloneElement(child, {\n      componentProps: {\n        ...child.props.componentProps,\n        ...props,\n      },\n      ...(props.key ? { key: props.key } : {}),\n    });\n  }\n\n  return React.cloneElement(child, props);\n}\n","import type { Placement } from \"@react-types/overlays\";\nimport type { FocusStrategy } from \"@react-types/shared\";\nimport * as React from \"react\";\nimport type { OverlayTriggerState } from \"@react-stately/overlays\";\n\nexport interface TriggeredOverlayContextValue {\n  triggerRef: React.RefObject<HTMLElement>;\n  state: OverlayTriggerState;\n  autoFocus?: boolean | FocusStrategy;\n\n  placement?: Placement;\n  overlayMatchTriggerWidth?: boolean;\n  overlayMinTriggerWidth?: boolean;\n  overlayWidth?: number;\n}\n\nexport const TriggeredOverlayContext = React.createContext<\n  TriggeredOverlayContextValue | undefined\n>(undefined);\n","import * as React from \"react\";\nimport type { TreeState } from \"@react-stately/tree\";\nimport type { BaseMenuProps } from \"./menu\";\n\nexport interface MenuContextValue {\n  menuProps: BaseMenuProps;\n  state: TreeState<any>;\n}\n\nexport const MenuContext = React.createContext<MenuContextValue | undefined>(\n  undefined\n);\n","import { useMenu as useAriaMenu } from \"@react-aria/menu\";\nimport { useTreeState } from \"@react-stately/tree\";\nimport { AriaMenuProps } from \"@react-types/menu\";\nimport { AriaLabelingProps, DOMProps } from \"@react-types/shared\";\nimport * as React from \"react\";\nimport { pick } from \"../../common\";\nimport { mergeProps } from \"../../react-utils\";\nimport { Overrides } from \"../../render/elements\";\nimport { useEnsureSSRProvider } from \"../../render/ssr\";\nimport {\n  renderAsCollectionChild,\n  renderCollectionNode,\n  useDerivedItemsFromChildren,\n} from \"../collection-utils\";\nimport {\n  AnyPlasmicClass,\n  noOutline,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  VariantDef,\n} from \"../plume-utils\";\nimport { getStyleProps, StyleProps } from \"../props-utils\";\nimport { TriggeredOverlayContext } from \"../triggered-overlay/context\";\nimport { MenuContext } from \"./context\";\n\nexport interface BaseMenuProps extends DOMProps, AriaLabelingProps, StyleProps {\n  /**\n   * List of `Menu.Item`s or `Menu.Group`s that make up the menu\n   */\n  children?: React.ReactNode;\n\n  /**\n   * Called with the value of a `Menu.Item` when it is selected.\n   */\n  onAction?: (value: string) => void;\n}\n\nexport type MenuRef = React.Ref<MenuRefValue>;\nexport interface MenuRefValue extends MenuState {\n  getRoot: () => HTMLElement | null;\n}\n\nconst COLLECTION_OPTS = {\n  itemPlumeType: \"menu-item\",\n  sectionPlumeType: \"menu-group\",\n};\n\nexport interface MenuConfig<C extends AnyPlasmicClass> {\n  isPlacedTopVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isPlacedBottomVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isPlacedLeftVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isPlacedRightVariant?: VariantDef<PlasmicClassVariants<C>>;\n\n  itemsSlot: keyof PlasmicClassArgs<C>;\n  itemsContainer: keyof PlasmicClassOverrides<C>;\n  root: keyof PlasmicClassOverrides<C>;\n}\n\n/**\n * Converts props from BaseMenuProps to react-aria's useMenu() props.\n */\nfunction asAriaMenuProps(props: BaseMenuProps) {\n  const { children, ...rest } = props;\n  const { items, disabledKeys } = useDerivedItemsFromChildren(children, {\n    ...COLLECTION_OPTS,\n    invalidChildError: `Can only use Menu.Item and Menu.Group as children to Menu`,\n    requireItemValue: false,\n  });\n\n  const collectionChildRenderer = React.useCallback(\n    (child: any) => renderAsCollectionChild(child, COLLECTION_OPTS),\n    []\n  );\n\n  return {\n    ariaProps: {\n      ...rest,\n      children: collectionChildRenderer,\n      items,\n      disabledKeys,\n    } as AriaMenuProps<any>,\n  };\n}\n\nexport interface MenuState {\n  getFocusedValue: () => string | null;\n  setFocusedValue: (value: string) => void;\n}\n\nexport function useMenu<P extends BaseMenuProps, C extends AnyPlasmicClass>(\n  plasmicClass: C,\n  props: P,\n  config: MenuConfig<C>,\n  ref: MenuRef = null\n) {\n  useEnsureSSRProvider();\n  const { ariaProps } = asAriaMenuProps(props);\n  const triggerContext = React.useContext(TriggeredOverlayContext);\n  const rootRef = React.useRef<HTMLElement>(null);\n\n  const state = useTreeState(ariaProps);\n\n  const menuListRef = React.useRef<HTMLUListElement>(null);\n\n  const { menuProps } = useAriaMenu(\n    {\n      ...ariaProps,\n      autoFocus: triggerContext?.autoFocus,\n    },\n    state,\n    menuListRef\n  );\n\n  const contextValue = React.useMemo(() => ({ state, menuProps: props }), [\n    state,\n    props,\n  ]);\n\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n  };\n\n  const overrides: Overrides = {\n    [config.root]: {\n      props: mergeProps(getStyleProps(props), {\n        ref: rootRef,\n      }),\n    },\n    [config.itemsContainer]: {\n      as: \"ul\",\n      props: mergeProps(menuProps, {\n        ref: menuListRef,\n        style: {\n          ...noOutline(),\n        },\n      }),\n    },\n  };\n\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    [config.itemsSlot]: (\n      <MenuContext.Provider value={contextValue}>\n        {Array.from(state.collection).map((node) => renderCollectionNode(node))}\n      </MenuContext.Provider>\n    ),\n  };\n\n  const plumeState: MenuState = React.useMemo(\n    () => ({\n      getFocusedValue: () => state.selectionManager.focusedKey as string | null,\n      setFocusedValue: (value: string) =>\n        state.selectionManager.setFocusedKey(value),\n    }),\n    [state]\n  );\n\n  React.useImperativeHandle(\n    ref,\n    () => ({\n      getRoot: () => rootRef.current,\n      getFocusedValue: () => plumeState.getFocusedValue(),\n      setFocusedValue: (key) => plumeState.setFocusedValue(key),\n    }),\n    [rootRef, plumeState]\n  );\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n    state: plumeState,\n  };\n}\n","import { Placement } from \"@react-types/overlays\";\nimport * as React from \"react\";\nimport { useMenuTrigger as useAriaMenuTrigger } from \"@react-aria/menu\";\nimport { usePress } from \"@react-aria/interactions\";\nimport { MenuTriggerState } from \"@react-stately/menu\";\nimport { mergeProps } from \"../../react-utils\";\nimport { BaseMenuProps } from \"../menu/menu\";\nimport { getPlumeType, PLUME_STRICT_MODE } from \"../plume-utils\";\nimport { TriggeredOverlayContextValue } from \"../triggered-overlay/context\";\n\n/**\n * A menu trigger hook that combines react-aria's useMenuTrigger, useAriaMenuTrigger,\n * useOverlayPosition, useOverlay, and usePress\n */\nexport function useMenuTrigger(\n  opts: {\n    isDisabled?: boolean;\n    triggerRef: React.RefObject<HTMLElement>;\n    placement?: Placement;\n    menuMatchTriggerWidth?: boolean;\n    menuWidth?: number;\n    menu:\n      | React.ReactElement<BaseMenuProps>\n      | (() => React.ReactElement<BaseMenuProps>);\n  },\n  state: MenuTriggerState\n) {\n  const {\n    triggerRef,\n    isDisabled,\n    placement,\n    menuMatchTriggerWidth,\n    menuWidth,\n    menu,\n  } = opts;\n\n  const { menuTriggerProps: triggerPressProps, menuProps } = useAriaMenuTrigger(\n    {\n      type: \"menu\",\n      isDisabled,\n    },\n    state,\n    triggerRef\n  );\n\n  const { pressProps: triggerProps } = usePress({\n    ...triggerPressProps,\n    isDisabled,\n  });\n\n  const makeMenu = () => {\n    let realMenu = typeof menu === \"function\" ? menu() : menu;\n    if (!realMenu) {\n      return null;\n    }\n    if (getPlumeType(realMenu) !== \"menu\") {\n      if (PLUME_STRICT_MODE) {\n        throw new Error(`Must use an instance of the Menu component.`);\n      }\n      return null;\n    }\n\n    return React.cloneElement(realMenu, mergeProps(realMenu.props, menuProps));\n  };\n\n  const triggerContext: TriggeredOverlayContextValue = React.useMemo(\n    () => ({\n      triggerRef,\n      state,\n      autoFocus: state.focusStrategy ?? true,\n      placement,\n      overlayMatchTriggerWidth: menuMatchTriggerWidth,\n      overlayMinTriggerWidth: true,\n      overlayWidth: menuWidth,\n    }),\n    [triggerRef, state, placement, menuMatchTriggerWidth, menuWidth]\n  );\n\n  return {\n    triggerProps,\n    makeMenu,\n    triggerContext,\n  };\n}\n","import * as React from \"react\";\nimport type { ListState } from \"@react-stately/list\";\n\nexport const SelectContext = React.createContext<ListState<any> | undefined>(\n  undefined\n);\n","import { usePlasmicCanvasContext } from \"@plasmicapp/host\";\nimport { usePress } from \"@react-aria/interactions\";\nimport { useListBox } from \"@react-aria/listbox\";\nimport { HiddenSelect, useSelect as useAriaSelect } from \"@react-aria/select\";\nimport {\n  SelectState as AriaSelectState,\n  useSelectState as useAriaSelectState,\n} from \"@react-stately/select\";\nimport { Placement } from \"@react-types/overlays\";\nimport { AriaSelectProps } from \"@react-types/select\";\nimport {\n  AriaLabelingProps,\n  DOMProps,\n  FocusableDOMProps,\n  FocusableProps,\n  InputBase,\n} from \"@react-types/shared\";\nimport * as React from \"react\";\nimport { pick } from \"../../common\";\nimport { mergeProps } from \"../../react-utils\";\nimport { Overrides } from \"../../render/elements\";\nimport { useEnsureSSRProvider } from \"../../render/ssr\";\nimport {\n  getChildProp,\n  ItemJson,\n  ItemLikeProps,\n  renderAsCollectionChild,\n  renderCollectionNode,\n  SectionLikeProps,\n  useDerivedItems,\n} from \"../collection-utils\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  noOutline,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  VariantDef,\n} from \"../plume-utils\";\nimport { getStyleProps, StyleProps } from \"../props-utils\";\nimport {\n  TriggeredOverlayContext,\n  TriggeredOverlayContextValue,\n} from \"../triggered-overlay/context\";\nimport { SelectContext } from \"./context\";\nimport { BaseSelectOptionProps } from \"./select-option\";\nimport { BaseSelectOptionGroupProps } from \"./select-option-group\";\n\nexport interface BaseSelectProps\n  extends DOMProps,\n    AriaLabelingProps,\n    FocusableDOMProps,\n    InputBase,\n    FocusableProps,\n    StyleProps {\n  /**\n   * Key of the currently selected value\n   */\n  value?: string | null;\n\n  /**\n   * Event handler fired when currently selected value changes\n   */\n  onChange?: (value: string | null) => void;\n\n  /**\n   * Uncontrolled key of the default selected value\n   */\n  defaultValue?: string;\n\n  /**\n   * List of Select.Options\n   */\n  children?: React.ReactNode;\n\n  /**\n   * List of options as an array, instead of using `children` prop. If this\n   * is passed in, then `children` is ignored.\n   *\n   * The options can be a list of strings, or a list of objects with\n   * fields `value` (for the value of the option), `label` (for what's rendered\n   * in the option), and `isDisabled` (if the option should be disabled).\n   */\n  options?: ItemJson[];\n\n  /**\n   * Whether the Select is currently open\n   */\n  isOpen?: boolean;\n\n  /**\n   * Event handler fired when Select's open state changes\n   */\n  onOpenChange?: (isOpen: boolean) => void;\n\n  /**\n   * Uncontrolled default open state\n   */\n  defaultOpen?: boolean;\n\n  /**\n   * Form name of the select element\n   */\n  name?: string;\n\n  /**\n   * By default, Select will render whatever is in Select.Option as the\n   * content in the trigger button when it is selected.  You can override\n   * what content by passing in `selectedContent` here.\n   */\n  selectedContent?: React.ReactNode;\n\n  /**\n   * Desired placement location of the Select dropdown\n   */\n  placement?: Placement;\n\n  /**\n   * If true, menu width will always match the trigger button width.\n   * If false, then menu width will have min-width matching the\n   * trigger button width.\n   */\n  menuMatchTriggerWidth?: boolean;\n\n  /**\n   * If set, menu width will be exactly this width, overriding\n   * menuMatchTriggerWidth.\n   */\n  menuWidth?: number;\n\n  /**\n   * Content to display when nothing is selected.\n   */\n  placeholder?: React.ReactNode;\n}\n\nconst COLLECTION_OPTS = {\n  itemPlumeType: \"select-option\",\n  sectionPlumeType: \"select-option-group\",\n};\n\ntype AriaOptionType = React.ReactElement<BaseSelectOptionProps>;\ntype AriaGroupType = React.ReactElement<BaseSelectOptionGroupProps>;\ntype AriaSelectItemType = AriaOptionType | AriaGroupType;\n\n/**\n * Converts props in our BaseSelectProps into props that react-aria's\n * useSelect() understands.\n *\n * Because we're not exposing the Collections API (see ./index.tsx),\n * we are converting our own API into props for useSelect.\n *\n * Specifically, in Plume's API,\n * - `children` flattens to a list of ReactElements of type Select.Option\n *   or Select.OptionGroup\n *\n * and we map it this way to the Collections API:\n * - `items` is a list of those flattened ReactElements from `children`!\n * - `children`, as a render prop, is supposed to take one of the `items`\n *   and return a `Section` or `Item` element. We take an Option/OptionGroup\n *   element, and use its props to render the appropriate `Section` or\n *   `Item`. The \"trick\" here is that we then stuff the Option element as\n *   `Item.children`, and the OptionGroup element as `Section.title`.\n *\n * When the Collections API does its work deriving `Node`s, the corresponding\n * Option/OptionGroup ReactElements will end up as `Node.rendered`.\n *\n * Then, when we are actually rendering the content of the dropdown, we\n * iterate through each collected `Node`, and renders\n * React.cloneElement(Node.rendered, {_node: node}).  This \"secretly\" passes\n * the derived collection `Node` as a prop to Option and OptionGroup, and they\n * can make use of the derived `Node.key` etc in their rendering functions.\n *\n * One thing to note here is that we never \"rendered\" the Option/OptionGroup\n * React elements that the user constructed; instead, we just looked at the\n * props used on those elements, and passed those onto the Collections API.\n * What gets rendered to the screen is the cloned version of these elements\n * with the secret derived `_node` prop.  That means Option and OptionGroup\n * render functions can assume that _node is passed in.\n */\nfunction useAriaSelectProps(props: BaseSelectProps, config: SelectConfig<any>) {\n  let {\n    value,\n    defaultValue,\n    children,\n    onChange,\n    placement,\n    menuMatchTriggerWidth,\n    menuWidth,\n    ...rest\n  } = props;\n\n  const { items, disabledKeys } = useDerivedItems(props, {\n    ...COLLECTION_OPTS,\n    invalidChildError: `Can only use Select.Option and Select.OptionGroup as children to Select`,\n    requireItemValue: true,\n    ItemComponent: config.OptionComponent,\n    SectionComponent: config.OptionGroupComponent,\n    itemsProp: \"options\",\n  });\n\n  const collectionChildRenderer = React.useCallback(\n    (child: any) => renderAsCollectionChild(child, COLLECTION_OPTS),\n    []\n  );\n\n  const onSelectionChange = React.useMemo(() => {\n    if (onChange) {\n      return (val: string | null) =>\n        onChange!(\n          (val == null || val === \"null\" ? null : val) as string | null\n        );\n    } else {\n      return undefined;\n    }\n  }, [onChange]);\n\n  return {\n    ariaProps: {\n      ...rest,\n      children: collectionChildRenderer,\n      onSelectionChange,\n      items,\n      disabledKeys,\n      defaultSelectedKey: defaultValue,\n\n      // react-aria is picky about selectedKey; if it is null, it means \"no selection\";\n      // if it is undefined, it means \"uncontrolled\".  So here, if the user passes in a\n      // value prop, then we make sure selectedKey will be null and not undefined, so\n      // we don't accidentally enter uncontrolled mode.\n      ...(\"value\" in props && { selectedKey: value ?? null }),\n    } as AriaSelectProps<AriaSelectItemType>,\n  };\n}\n\nexport type SelectRef = React.Ref<SelectRefValue>;\n\nexport interface SelectRefValue extends SelectState {\n  getTrigger: () => HTMLElement | null;\n  getRoot: () => HTMLElement | null;\n  focus: () => void;\n  blur: () => void;\n}\n\ninterface SelectConfig<C extends AnyPlasmicClass> {\n  placeholderVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isOpenVariant: VariantDef<PlasmicClassVariants<C>>;\n  isDisabledVariant?: VariantDef<PlasmicClassVariants<C>>;\n\n  triggerContentSlot: keyof PlasmicClassArgs<C>;\n  optionsSlot: keyof PlasmicClassArgs<C>;\n  placeholderSlot: keyof PlasmicClassArgs<C>;\n\n  root: keyof PlasmicClassOverrides<C>;\n  trigger: keyof PlasmicClassOverrides<C>;\n  overlay: keyof PlasmicClassOverrides<C>;\n  optionsContainer: keyof PlasmicClassOverrides<C>;\n\n  OptionComponent?: React.ComponentType<ItemLikeProps>;\n  OptionGroupComponent?: React.ComponentType<SectionLikeProps>;\n}\n\ninterface SelectState {\n  open: () => void;\n  close: () => void;\n  isOpen: () => boolean;\n  getSelectedValue: () => string | null;\n  setSelectedValue: (value: string | null) => void;\n}\n\nexport function useSelect<P extends BaseSelectProps, C extends AnyPlasmicClass>(\n  plasmicClass: C,\n  props: P,\n  config: SelectConfig<C>,\n  ref: React.Ref<SelectRefValue> = null\n) {\n  useEnsureSSRProvider();\n  const { ariaProps } = useAriaSelectProps(props, config);\n  const { placement } = props;\n  const state = useAriaSelectState<AriaSelectItemType>(ariaProps);\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const rootRef = React.useRef<HTMLElement>(null);\n\n  const {\n    isDisabled,\n    name,\n    menuWidth,\n    menuMatchTriggerWidth,\n    autoFocus,\n    placeholder,\n    selectedContent,\n  } = props;\n\n  const canvasCtx = usePlasmicCanvasContext();\n\n  const { triggerProps: triggerPressProps, menuProps } = useAriaSelect(\n    ariaProps,\n    state,\n    triggerRef\n  );\n\n  const { pressProps: triggerProps } = usePress({\n    ...triggerPressProps,\n    isDisabled,\n  });\n\n  const triggerContent = state.selectedItem\n    ? selectedContent ?? getChildProp(state.selectedItem.value, \"children\")\n    : null;\n\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      { def: config.isOpenVariant, active: state.isOpen },\n      { def: config.placeholderVariant, active: !state.selectedItem },\n      { def: config.isDisabledVariant, active: isDisabled }\n    ),\n  };\n\n  const triggerContext: TriggeredOverlayContextValue = React.useMemo(\n    () => ({\n      triggerRef,\n      state,\n      placement,\n      overlayMatchTriggerWidth: menuMatchTriggerWidth,\n      overlayMinTriggerWidth: true,\n      overlayWidth: menuWidth,\n    }),\n    [triggerRef, state, placement, menuMatchTriggerWidth, menuWidth]\n  );\n\n  const overrides: Overrides = {\n    [config.root]: {\n      props: mergeProps(getStyleProps(props), {\n        ref: rootRef,\n      }),\n      wrapChildren: (children) => (\n        <>\n          {!canvasCtx && (\n            <HiddenSelect\n              state={state}\n              triggerRef={triggerRef}\n              name={name}\n              isDisabled={isDisabled}\n            />\n          )}\n          {children}\n        </>\n      ),\n    },\n    [config.trigger]: {\n      props: mergeProps(canvasCtx ? {} : triggerProps, {\n        ref: triggerRef,\n        autoFocus,\n        disabled: !!isDisabled,\n        // Don't trigger form submission!\n        type: \"button\",\n      }),\n    },\n    [config.overlay]: {\n      wrap: (content) => (\n        <TriggeredOverlayContext.Provider value={triggerContext}>\n          {content}\n        </TriggeredOverlayContext.Provider>\n      ),\n    },\n    [config.optionsContainer]: {\n      wrap: (content) => (\n        <ListBoxWrapper state={state} menuProps={menuProps}>\n          {content as React.ReactElement}\n        </ListBoxWrapper>\n      ),\n    },\n  };\n\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    [config.triggerContentSlot]: triggerContent,\n    [config.placeholderSlot]: placeholder,\n    [config.optionsSlot]: (\n      <SelectContext.Provider value={state}>\n        {Array.from(state.collection).map((node) => renderCollectionNode(node))}\n      </SelectContext.Provider>\n    ),\n  };\n\n  const plumeState: SelectState = React.useMemo(\n    () => ({\n      open: () => state.open(),\n      close: () => state.close(),\n      isOpen: () => state.isOpen,\n      getSelectedValue: () =>\n        state.selectedKey ? `${state.selectedKey}` : null,\n      setSelectedValue: (key) => state.setSelectedKey(key as any),\n    }),\n    [state]\n  );\n\n  React.useImperativeHandle(\n    ref,\n    () => ({\n      getRoot: () => rootRef.current,\n      getTrigger: () => triggerRef.current,\n      focus: () => triggerRef.current?.focus(),\n      blur: () => triggerRef.current?.blur(),\n      open: () => plumeState.open(),\n      close: () => plumeState.close(),\n      isOpen: () => plumeState.isOpen(),\n      getSelectedValue: () => plumeState.getSelectedValue(),\n      setSelectedValue: (key) => plumeState.setSelectedValue(key),\n    }),\n    [rootRef, triggerRef, plumeState]\n  );\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n    state: plumeState,\n  };\n}\n\nfunction ListBoxWrapper(props: {\n  state: AriaSelectState<any>;\n  menuProps: React.HTMLAttributes<Element>;\n  children: React.ReactElement;\n}) {\n  const { state, menuProps, children } = props;\n\n  const ref = React.useRef<HTMLElement>(null);\n  const canvasCtx = usePlasmicCanvasContext();\n\n  const { listBoxProps } = useListBox(\n    {\n      ...menuProps,\n      isVirtualized: false,\n      autoFocus: state.focusStrategy || true,\n      disallowEmptySelection: true,\n    },\n    state,\n    ref\n  );\n\n  return React.cloneElement(\n    children,\n    mergeProps(children.props, canvasCtx ? {} : listBoxProps, {\n      style: noOutline(),\n      ref,\n    })\n  );\n}\n","import { Placement } from \"@react-types/overlays\";\nimport * as React from \"react\";\nimport { useMenuTriggerState } from \"@react-stately/menu\";\nimport { mergeProps } from \"../../react-utils\";\nimport { BaseMenuProps } from \"../menu/menu\";\nimport { TriggeredOverlayContext } from \"../triggered-overlay/context\";\nimport { useMenuTrigger } from \"./menu-trigger\";\n\nexport interface DropdownMenuProps {\n  /**\n   * A ReactElement that takes in a `ref` as well as the usual mouse and\n   * pointer events. The dropdown menu will be positioned relative to this\n   * trigger.\n   */\n  children: React.ReactElement;\n\n  /**\n   * The menu to show; must be either a ReactElement of Menu type, or\n   * a function that creates one if you prefer to delay creating it until\n   * the menu has been triggered.\n   */\n  menu:\n    | React.ReactElement<BaseMenuProps>\n    | (() => React.ReactElement<BaseMenuProps>);\n\n  /**\n   * Where to place the menu relative to the trigger.\n   */\n  placement?: Placement;\n\n  /**\n   * Whether the menu is currently shown.\n   */\n  isOpen?: boolean;\n\n  /**\n   * Uncontrolled open state.\n   */\n  defaultOpen?: boolean;\n\n  /**\n   * Event handler fired when Menu's open state changes\n   */\n  onOpenChange?: (isOpen: boolean) => void;\n}\n\nexport function DropdownMenu(props: DropdownMenuProps) {\n  const {\n    isOpen,\n    defaultOpen,\n    onOpenChange,\n    children,\n    placement,\n    menu,\n  } = props;\n\n  const triggerRef = React.useRef<HTMLElement>(null);\n\n  const state = useMenuTriggerState({\n    isOpen,\n    defaultOpen,\n    onOpenChange,\n    shouldFlip: true,\n  });\n\n  const { triggerProps, makeMenu, triggerContext } = useMenuTrigger(\n    {\n      triggerRef,\n      placement,\n      menu,\n    },\n    state\n  );\n\n  return (\n    <TriggeredOverlayContext.Provider value={triggerContext}>\n      {React.cloneElement(\n        children,\n        mergeProps(children.props, triggerProps, { ref: triggerRef })\n      )}\n      {state.isOpen && makeMenu()}\n    </TriggeredOverlayContext.Provider>\n  );\n}\n","import * as React from \"react\";\n\nexport function PlasmicIcon(\n  props: React.ComponentProps<\"svg\"> & {\n    PlasmicIconType: React.ComponentType;\n  }\n) {\n  const { PlasmicIconType, ...rest } = props;\n  return <PlasmicIconType {...rest} />;\n}\n","const isDefaultValue = (val: string) => val === \"PLEASE_RENDER_INSIDE_PROVIDER\";\nconst seenDefaultVariants: Record<string, boolean> = {};\nexport function ensureGlobalVariants<T extends Record<string, any>>(\n  globalVariantValues: T\n) {\n  Object.entries(globalVariantValues)\n    .filter(([_, value]) => isDefaultValue(value))\n    .forEach(([key, _]) => {\n      (globalVariantValues as any)[key] = undefined;\n\n      if (!seenDefaultVariants[key] && process.env.NODE_ENV === \"development\") {\n        seenDefaultVariants[key] = true;\n        const providerName = `${key[0].toUpperCase()}${key.substring(\n          1\n        )}Context.Provider`;\n        console.warn(\n          `Plasmic context value for global variant \"${key}\" was not provided; please use ${providerName} at the root of your React app. Learn More: https://www.plasmic.app/learn/other-assets/#global-variants`\n        );\n      }\n    });\n  return globalVariantValues;\n}\n","import * as React from \"react\";\nimport { omit, pick } from \"../../common\";\nimport { Overrides } from \"../../render/elements\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  VariantDef,\n} from \"../plume-utils\";\n\ninterface CommonProps {\n  showStartIcon?: boolean;\n  showEndIcon?: boolean;\n  startIcon?: React.ReactNode;\n  endIcon?: React.ReactNode;\n  children?: React.ReactNode;\n  isDisabled?: boolean;\n}\n\ninterface HtmlButtonProps\n  extends Omit<React.ComponentProps<\"button\">, \"ref\" | \"disabled\"> {}\n\ninterface HtmlAnchorProps\n  extends Omit<React.ComponentProps<\"a\">, \"ref\" | \"href\"> {\n  link?: string;\n}\n\nexport type BaseButtonProps = CommonProps & HtmlButtonProps & HtmlAnchorProps;\n\nexport type HtmlAnchorOnlyProps = Exclude<\n  keyof HtmlAnchorProps,\n  keyof HtmlButtonProps\n>;\nexport type HtmlButtonOnlyProps = Exclude<\n  keyof HtmlButtonProps,\n  keyof HtmlAnchorProps\n>;\n\nexport type ButtonRef = React.Ref<HTMLButtonElement | HTMLAnchorElement>;\n\ninterface ButtonConfig<C extends AnyPlasmicClass> {\n  showStartIconVariant: VariantDef<PlasmicClassVariants<C>>;\n  showEndIconVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isDisabledVariant?: VariantDef<PlasmicClassVariants<C>>;\n  startIconSlot?: keyof PlasmicClassArgs<C>;\n  endIconSlot?: keyof PlasmicClassArgs<C>;\n  contentSlot: keyof PlasmicClassArgs<C>;\n  root: keyof PlasmicClassOverrides<C>;\n}\n\nexport function useButton<P extends BaseButtonProps, C extends AnyPlasmicClass>(\n  plasmicClass: C,\n  props: P,\n  config: ButtonConfig<C>,\n  ref: ButtonRef = null\n) {\n  const {\n    link,\n    isDisabled,\n    startIcon,\n    endIcon,\n    showStartIcon,\n    showEndIcon,\n    children,\n    ...rest\n  } = props;\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      { def: config.showStartIconVariant, active: showStartIcon },\n      { def: config.showEndIconVariant, active: showEndIcon },\n      { def: config.isDisabledVariant, active: isDisabled }\n    ),\n  };\n\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    ...(config.startIconSlot && { [config.startIconSlot]: startIcon }),\n    ...(config.endIconSlot && { [config.endIconSlot]: endIcon }),\n    [config.contentSlot]: children,\n  };\n\n  const overrides: Overrides = {\n    [config.root]: {\n      as: !!link ? \"a\" : \"button\",\n      props: {\n        ...omit(\n          rest as any,\n          ...plasmicClass.internalArgProps,\n          ...plasmicClass.internalVariantProps\n        ),\n        ref: ref,\n        disabled: isDisabled,\n        ...(!!link && { href: link }),\n      },\n    },\n  };\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n  };\n}\n","import { useCheckbox as useAriaCheckbox } from \"@react-aria/checkbox\";\nimport { VisuallyHidden } from \"@react-aria/visually-hidden\";\nimport { useToggleState } from \"@react-stately/toggle\";\nimport { AriaCheckboxProps } from \"@react-types/checkbox\";\nimport * as React from \"react\";\nimport { pick } from \"../../common\";\nimport { mergeProps } from \"../../react-utils\";\nimport { Overrides } from \"../../render/elements\";\nimport { useEnsureSSRProvider } from \"../../render/ssr\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  VariantDef,\n} from \"../plume-utils\";\nimport { getStyleProps, StyleProps } from \"../props-utils\";\n\nexport type CheckboxRef = React.Ref<CheckboxRefValue>;\nexport interface CheckboxRefValue extends CheckboxState {\n  getRoot: () => HTMLElement | null;\n  focus: () => void;\n  blur: () => void;\n}\n\ninterface CheckboxState {\n  setChecked: (checked: boolean) => void;\n}\n\nexport interface CheckboxProps\n  extends Omit<AriaCheckboxProps, \"isSelected\" | \"defaultSelected\">,\n    StyleProps {\n  /**\n   * Whether the Checkbox is checked or not; controlled\n   */\n  isChecked?: boolean;\n\n  /**\n   * Whether the Checkbox is checked by default; uncontrolled\n   */\n  defaultChecked?: boolean;\n\n  /**\n   * Whether the Checkbox is in an \"indeterminate\" state; this usually\n   * refers to a \"check all\" that is used to check / uncheck many other\n   * checkboxes, and is visually indeterminate if some of its controlled\n   * checkboxes are checked and some are not.\n   */\n  isIndeterminate?: boolean;\n}\n\nfunction asAriaCheckboxProps(props: CheckboxProps) {\n  const ariaProps = {\n    ...props,\n    isSelected: props.isChecked,\n    defaultSelected: props.defaultChecked,\n  };\n  delete ariaProps[\"isChecked\"];\n  delete ariaProps[\"defaultChecked\"];\n  return ariaProps;\n}\n\ninterface CheckboxConfig<C extends AnyPlasmicClass> {\n  isCheckedVariant: VariantDef<PlasmicClassVariants<C>>;\n  isIndeterminateVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isDisabledVariant?: VariantDef<PlasmicClassVariants<C>>;\n  noLabelVariant?: VariantDef<PlasmicClassVariants<C>>;\n  labelSlot?: keyof PlasmicClassArgs<C>;\n  root: keyof PlasmicClassOverrides<C>;\n}\n\nexport function useCheckbox<P extends CheckboxProps, C extends AnyPlasmicClass>(\n  plasmicClass: C,\n  props: P,\n  config: CheckboxConfig<C>,\n  ref: CheckboxRef = null\n) {\n  const { children, isDisabled, isIndeterminate } = props;\n  useEnsureSSRProvider();\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const rootRef = React.useRef<HTMLElement>(null);\n  const ariaProps = asAriaCheckboxProps(props);\n  const state = useToggleState(ariaProps);\n  const { inputProps } = useAriaCheckbox(ariaProps, state, inputRef);\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      {\n        def: config.isDisabledVariant,\n        active: isDisabled,\n      },\n      {\n        def: config.isCheckedVariant,\n        active: state.isSelected,\n      },\n      {\n        def: config.isIndeterminateVariant,\n        active: isIndeterminate,\n      },\n      {\n        def: config.noLabelVariant,\n        active: !children,\n      }\n    ),\n  };\n  const overrides: Overrides = {\n    [config.root]: {\n      as: \"label\",\n      props: mergeProps(getStyleProps(props), {\n        ref: rootRef,\n      }),\n      wrapChildren: (children: React.ReactNode) => (\n        <>\n          <VisuallyHidden>\n            <input {...inputProps} ref={inputRef} />\n          </VisuallyHidden>\n          {children}\n        </>\n      ),\n    },\n  };\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    ...(config.labelSlot ? { [config.labelSlot]: children } : {}),\n  };\n\n  const plumeState: CheckboxState = React.useMemo(\n    () => ({\n      setChecked: (checked: boolean) => state.setSelected(checked),\n    }),\n    [state]\n  );\n\n  React.useImperativeHandle(\n    ref,\n    () => ({\n      getRoot: () => rootRef.current,\n      focus: () => inputRef.current?.focus(),\n      blur: () => inputRef.current?.blur(),\n      setChecked: (checked) => plumeState.setChecked(checked),\n    }),\n    [rootRef, inputRef, plumeState]\n  );\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n      args: args as PlasmicClassArgs<C>,\n    },\n    state: plumeState,\n  };\n}\n","import { Placement } from \"@react-types/overlays\";\nimport { DOMProps, FocusableProps } from \"@react-types/shared\";\nimport * as React from \"react\";\nimport { useFocusable } from \"@react-aria/focus\";\nimport { useMenuTriggerState } from \"@react-stately/menu\";\nimport { pick } from \"../../common\";\nimport { mergeProps } from \"../../react-utils\";\nimport { Overrides } from \"../../render/elements\";\nimport { useEnsureSSRProvider } from \"../../render/ssr\";\nimport { BaseMenuProps } from \"../menu/menu\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  VariantDef,\n} from \"../plume-utils\";\nimport { getStyleProps, StyleProps } from \"../props-utils\";\nimport { TriggeredOverlayContext } from \"../triggered-overlay/context\";\nimport { useMenuTrigger } from \"./menu-trigger\";\n\nexport interface BaseMenuButtonProps\n  extends DOMProps,\n    FocusableProps,\n    StyleProps,\n    Pick<React.ComponentProps<\"button\">, \"title\"> {\n  /**\n   * The menu to show; can either be a Menu instance, or a function that returns a Menu\n   * instance if you want to defer creating the instance till when it's opened.\n   */\n  menu:\n    | React.ReactElement<BaseMenuProps>\n    | (() => React.ReactElement<BaseMenuProps>);\n\n  /**\n   * Whether the button is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Whether the menu is currently shown.\n   */\n  isOpen?: boolean;\n\n  /**\n   * Uncontrolled open state\n   */\n  defaultOpen?: boolean;\n\n  /**\n   * Event handler fired when Menu's open state changes\n   */\n  onOpenChange?: (isOpen: boolean) => void;\n\n  /**\n   * Desired placement location of the Select dropdown\n   */\n  placement?: Placement;\n  /**\n   * If true, menu width will always match the trigger button width.\n   * If false, then menu width will have min-width matching the\n   * trigger button width.\n   */\n  menuMatchTriggerWidth?: boolean;\n\n  /**\n   * If set, menu width will be exactly this width, overriding\n   * menuMatchTriggerWidth.\n   */\n  menuWidth?: number;\n}\n\nexport interface MenuButtonConfig<C extends AnyPlasmicClass> {\n  isOpenVariant: VariantDef<PlasmicClassVariants<C>>;\n  isDisabledVariant?: VariantDef<PlasmicClassVariants<C>>;\n\n  menuSlot: keyof PlasmicClassArgs<C>;\n\n  root: keyof PlasmicClassOverrides<C>;\n  trigger: keyof PlasmicClassOverrides<C>;\n}\n\ninterface MenuButtonState {\n  open: () => void;\n  close: () => void;\n  isOpen: () => boolean;\n}\n\nexport type MenuButtonRef = React.Ref<MenuButtonRefValue>;\n\nexport interface MenuButtonRefValue extends MenuButtonState {\n  getRoot: () => HTMLElement | null;\n  getTrigger: () => HTMLElement | null;\n  focus: () => void;\n  blur: () => void;\n}\n\nexport function useMenuButton<\n  P extends BaseMenuButtonProps,\n  C extends AnyPlasmicClass\n>(\n  plasmicClass: C,\n  props: P,\n  config: MenuButtonConfig<C>,\n  outerRef: MenuButtonRef = null\n) {\n  const {\n    placement,\n    isOpen,\n    defaultOpen,\n    onOpenChange,\n    isDisabled,\n    menu,\n    autoFocus,\n    menuMatchTriggerWidth,\n    menuWidth,\n  } = props;\n\n  useEnsureSSRProvider();\n  const rootRef = React.useRef<HTMLElement>(null);\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n\n  const state = useMenuTriggerState({\n    isOpen,\n    defaultOpen,\n    onOpenChange,\n    shouldFlip: true,\n  });\n\n  const { triggerProps, makeMenu, triggerContext } = useMenuTrigger(\n    {\n      isDisabled,\n      triggerRef,\n      placement,\n      menuMatchTriggerWidth,\n      menuWidth,\n      menu,\n    },\n    state\n  );\n\n  const { focusableProps: triggerFocusProps } = useFocusable(props, triggerRef);\n\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      { def: config.isOpenVariant, active: state.isOpen },\n      { def: config.isDisabledVariant, active: isDisabled }\n    ),\n  };\n\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    [config.menuSlot]: state.isOpen ? makeMenu() : undefined,\n  };\n\n  const overrides: Overrides = {\n    [config.root]: {\n      wrapChildren: (children) => (\n        <TriggeredOverlayContext.Provider value={triggerContext}>\n          {children}\n        </TriggeredOverlayContext.Provider>\n      ),\n      props: {\n        ref: rootRef,\n      },\n    },\n    [config.trigger]: {\n      props: mergeProps(\n        triggerProps,\n        triggerFocusProps,\n        getStyleProps(props),\n        pick(props, \"title\"),\n        {\n          ref: triggerRef,\n          autoFocus,\n          disabled: !!isDisabled,\n          // Make sure this button is not interpreted as submit\n          type: \"button\",\n        }\n      ),\n    },\n  };\n\n  const plumeState: MenuButtonState = React.useMemo(\n    () => ({\n      open: () => state.open(),\n      close: () => state.close(),\n      isOpen: () => state.isOpen,\n    }),\n    [state]\n  );\n\n  React.useImperativeHandle(\n    outerRef,\n    () => ({\n      getRoot: () => rootRef.current,\n      getTrigger: () => triggerRef.current,\n      focus: () => triggerRef.current && triggerRef.current.focus(),\n      blur: () => triggerRef.current && triggerRef.current.blur(),\n      open: plumeState.open,\n      close: plumeState.close,\n      isOpen: plumeState.isOpen,\n    }),\n    [rootRef, triggerRef, plumeState]\n  );\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n    state: plumeState,\n  };\n}\n","import { Node } from \"@react-types/shared\";\nimport * as React from \"react\";\nimport { useMenuSection } from \"@react-aria/menu\";\nimport { useSeparator } from \"@react-aria/separator\";\nimport { pick } from \"../../common\";\nimport { Overrides } from \"../../render/elements\";\nimport { renderCollectionNode, SectionLikeProps } from \"../collection-utils\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  PLUME_STRICT_MODE,\n} from \"../plume-utils\";\nimport {\n  getDefaultPlasmicProps,\n  getStyleProps,\n  StyleProps,\n} from \"../props-utils\";\nimport { MenuContext } from \"./context\";\n\nexport interface BaseMenuGroupProps extends SectionLikeProps, StyleProps {}\n\ninterface MenuGroupConfig<C extends AnyPlasmicClass> {\n  noTitleVariant: PlasmicClassVariants<C>;\n  isFirstVariant: PlasmicClassVariants<C>;\n\n  itemsSlot: keyof PlasmicClassArgs<C>;\n  titleSlot: keyof PlasmicClassArgs<C>;\n\n  root: keyof PlasmicClassOverrides<C>;\n  separator: keyof PlasmicClassOverrides<C>;\n  titleContainer: keyof PlasmicClassOverrides<C>;\n  itemsContainer: keyof PlasmicClassOverrides<C>;\n}\n\nexport function useMenuGroup<\n  P extends BaseMenuGroupProps,\n  C extends AnyPlasmicClass\n>(plasmicClass: C, props: P, config: MenuGroupConfig<C>) {\n  const context = React.useContext(MenuContext);\n\n  const node = (props as any)._node as\n    | Node<React.ReactElement<BaseMenuGroupProps>>\n    | undefined;\n\n  if (!context || !node) {\n    if (PLUME_STRICT_MODE) {\n      throw new Error(\"You can only use a Menu.Group within a Menu component.\");\n    }\n    return getDefaultPlasmicProps(plasmicClass, props);\n  }\n\n  const { headingProps, groupProps } = useMenuSection({\n    heading: props.title,\n    \"aria-label\": props[\"aria-label\"],\n  });\n\n  const { separatorProps } = useSeparator({\n    elementType: \"li\",\n  });\n\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      { def: config.noTitleVariant, active: !props.title },\n      {\n        def: config.isFirstVariant,\n        active: context.state.collection.getFirstKey() === node.key,\n      }\n    ),\n  };\n\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    [config.titleSlot]: props.title,\n    [config.itemsSlot]: Array.from(node.childNodes).map((childNode) =>\n      renderCollectionNode(childNode)\n    ),\n  };\n\n  const overrides: Overrides = {\n    [config.root]: {\n      props: getStyleProps(props),\n    },\n    [config.separator]: {\n      props: {\n        ...separatorProps,\n      },\n      as: \"li\",\n    },\n    [config.titleContainer]: {\n      props: {\n        role: \"presentation\",\n        ...headingProps,\n      },\n      ...(!props.title && {\n        render: () => null,\n      }),\n    },\n    [config.itemsContainer]: {\n      props: {\n        ...groupProps,\n      },\n      as: \"ul\",\n    },\n  };\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n  };\n}\n","import { Node } from \"@react-types/shared\";\nimport * as React from \"react\";\nimport { useMenuItem as useAriaMenuItem } from \"@react-aria/menu\";\nimport { pick } from \"../../common\";\nimport { mergeProps } from \"../../react-utils\";\nimport { Overrides } from \"../../render/elements\";\nimport { ItemLikeProps } from \"../collection-utils\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  noOutline,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  PLUME_STRICT_MODE,\n  VariantDef,\n} from \"../plume-utils\";\nimport { getDefaultPlasmicProps } from \"../props-utils\";\nimport { TriggeredOverlayContext } from \"../triggered-overlay/context\";\nimport { MenuContext } from \"./context\";\n\nexport interface BaseMenuItemProps extends ItemLikeProps {\n  /**\n   * Called when this item is selected\n   */\n  onAction?: (key: string) => void;\n}\n\ninterface MenuItemConfig<C extends AnyPlasmicClass> {\n  isDisabledVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isHighlightedVariant?: VariantDef<PlasmicClassVariants<C>>;\n\n  labelSlot: keyof PlasmicClassArgs<C>;\n\n  root: keyof PlasmicClassOverrides<C>;\n  labelContainer: keyof PlasmicClassOverrides<C>;\n}\n\nexport function useMenuItem<\n  P extends BaseMenuItemProps,\n  C extends AnyPlasmicClass\n>(plasmicClass: C, props: P, config: MenuItemConfig<C>) {\n  const menuContext = React.useContext(MenuContext);\n  const triggerContext = React.useContext(TriggeredOverlayContext);\n\n  if (!menuContext) {\n    if (PLUME_STRICT_MODE) {\n      throw new Error(\"You can only use a Menu.Item within a Menu component.\");\n    }\n\n    return getDefaultPlasmicProps(plasmicClass, props);\n  }\n\n  const { children, onAction } = props;\n\n  const { state, menuProps } = menuContext;\n\n  // We pass in the Node secretly as an undocumented prop from <Select />\n  const node = (props as any)._node as Node<\n    React.ReactElement<BaseMenuItemProps>\n  >;\n\n  const isDisabled = state.disabledKeys.has(node.key);\n  const isHighlighted =\n    state.selectionManager.isFocused &&\n    state.selectionManager.focusedKey === node.key;\n\n  const ref = React.useRef<HTMLLIElement>(null);\n\n  const { menuItemProps, labelProps } = useAriaMenuItem(\n    mergeProps(\n      {\n        // We need to merge both the onAction on MenuItem and the onAction\n        // on Menu\n        onAction,\n      },\n      {\n        onAction: menuProps.onAction,\n        onClose: triggerContext?.state.close,\n      },\n      {\n        isDisabled,\n        \"aria-label\": node && node[\"aria-label\"],\n        key: node.key,\n        isVirtualized: false,\n        closeOnSelect: true,\n      }\n    ),\n    state,\n    ref\n  );\n\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      { def: config.isDisabledVariant, active: isDisabled },\n      { def: config.isHighlightedVariant, active: isHighlighted }\n    ),\n  };\n\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    [config.labelSlot]: children,\n  };\n\n  const overrides: Overrides = {\n    [config.root]: {\n      as: \"li\",\n      props: mergeProps(menuItemProps, { ref, style: noOutline() }),\n    },\n    [config.labelContainer]: {\n      props: { ...labelProps },\n    },\n  };\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n  };\n}\n","import { usePlasmicCanvasContext } from \"@plasmicapp/host\";\nimport { useOption as useAriaOption } from \"@react-aria/listbox\";\nimport { Node } from \"@react-types/shared\";\nimport * as React from \"react\";\nimport { pick } from \"../../common\";\nimport { mergeProps, mergeRefs } from \"../../react-utils\";\nimport { Overrides } from \"../../render/elements\";\nimport { ItemLikeProps } from \"../collection-utils\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  noOutline,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  PLUME_STRICT_MODE,\n  VariantDef,\n} from \"../plume-utils\";\nimport {\n  getDefaultPlasmicProps,\n  getStyleProps,\n  StyleProps,\n} from \"../props-utils\";\nimport { SelectContext } from \"./context\";\n\nexport interface BaseSelectOptionProps extends ItemLikeProps, StyleProps {}\n\ninterface SelectOptionConfig<C extends AnyPlasmicClass> {\n  isSelectedVariant: VariantDef<PlasmicClassVariants<C>>;\n  isDisabledVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isHighlightedVariant?: VariantDef<PlasmicClassVariants<C>>;\n\n  labelSlot: keyof PlasmicClassArgs<C>;\n\n  root: keyof PlasmicClassOverrides<C>;\n  labelContainer: keyof PlasmicClassOverrides<C>;\n}\n\nexport type SelectOptionRef = React.Ref<HTMLElement>;\n\nexport function useSelectOption<\n  P extends BaseSelectOptionProps,\n  C extends AnyPlasmicClass\n>(\n  plasmicClass: C,\n  props: P,\n  config: SelectOptionConfig<C>,\n  outerRef: SelectOptionRef = null\n) {\n  const state = React.useContext(SelectContext);\n\n  if (!state) {\n    // If no context, then we are being incorrectly used.  Complain or just don't\n    // bother installing any hooks.  It's okay to violate rules of hooks here\n    // because this instance won't suddenly be used correctly in another render.\n    if (PLUME_STRICT_MODE) {\n      throw new Error(\n        \"You can only use a Select.Option within a Select component.\"\n      );\n    }\n\n    return getDefaultPlasmicProps(plasmicClass, props);\n  }\n\n  const { children } = props;\n\n  const canvasCtx = usePlasmicCanvasContext();\n  const rootRef = React.useRef<HTMLElement>(null);\n  const onRef = mergeRefs(rootRef, outerRef);\n\n  // We pass in the Node secretly as an undocumented prop from <Select />\n  const node = (props as any)._node as Node<\n    React.ReactElement<BaseSelectOptionProps>\n  >;\n\n  const isSelected = state.selectionManager.isSelected(node.key);\n  const isDisabled = state.disabledKeys.has(node.key);\n  const isHighlighted =\n    state.selectionManager.isFocused &&\n    state.selectionManager.focusedKey === node.key;\n\n  const { optionProps, labelProps } = useAriaOption(\n    {\n      isSelected,\n      isDisabled,\n      \"aria-label\": node && node[\"aria-label\"],\n      key: node.key,\n      shouldSelectOnPressUp: true,\n      shouldFocusOnHover: true,\n      isVirtualized: false,\n      shouldUseVirtualFocus: !!canvasCtx,\n    },\n    state,\n    rootRef\n  );\n\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      { def: config.isSelectedVariant, active: isSelected },\n      { def: config.isDisabledVariant, active: isDisabled },\n      { def: config.isHighlightedVariant, active: isHighlighted }\n    ),\n  };\n\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    [config.labelSlot]: children,\n  };\n\n  const overrides: Overrides = {\n    [config.root]: {\n      props: mergeProps(canvasCtx ? {} : optionProps, getStyleProps(props), {\n        ref: onRef,\n        style: noOutline(),\n      }),\n    },\n    [config.labelContainer]: {\n      props: labelProps,\n    },\n  };\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n  };\n}\n","import { Node } from \"@react-types/shared\";\nimport * as React from \"react\";\nimport { useListBoxSection } from \"@react-aria/listbox\";\nimport { useSeparator } from \"@react-aria/separator\";\nimport { pick } from \"../../common\";\nimport { Overrides } from \"../../render/elements\";\nimport { renderCollectionNode, SectionLikeProps } from \"../collection-utils\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  PLUME_STRICT_MODE,\n} from \"../plume-utils\";\nimport {\n  getDefaultPlasmicProps,\n  getStyleProps,\n  StyleProps,\n} from \"../props-utils\";\nimport { SelectContext } from \"./context\";\n\nexport interface BaseSelectOptionGroupProps\n  extends SectionLikeProps,\n    StyleProps {}\n\ninterface SelectOptionGroupConfig<C extends AnyPlasmicClass> {\n  noTitleVariant: PlasmicClassVariants<C>;\n  isFirstVariant: PlasmicClassVariants<C>;\n\n  optionsSlot: keyof PlasmicClassArgs<C>;\n  titleSlot: keyof PlasmicClassArgs<C>;\n\n  root: keyof PlasmicClassOverrides<C>;\n  separator: keyof PlasmicClassOverrides<C>;\n  titleContainer: keyof PlasmicClassOverrides<C>;\n  optionsContainer: keyof PlasmicClassOverrides<C>;\n}\n\nexport function useSelectOptionGroup<\n  P extends BaseSelectOptionGroupProps,\n  C extends AnyPlasmicClass\n>(plasmicClass: C, props: P, config: SelectOptionGroupConfig<C>) {\n  const state = React.useContext(SelectContext);\n\n  // `node` should exist if the OptionGroup was instantiated properly\n  // within a Select\n  const node = (props as any)._node as\n    | Node<React.ReactElement<BaseSelectOptionGroupProps>>\n    | undefined;\n\n  if (!state || !node) {\n    if (PLUME_STRICT_MODE) {\n      throw new Error(\n        \"You can only use a Select.OptionGroup within a Select component.\"\n      );\n    }\n    return getDefaultPlasmicProps(plasmicClass, props);\n  }\n\n  const { headingProps, groupProps } = useListBoxSection({\n    heading: props.title,\n    \"aria-label\": props[\"aria-label\"],\n  });\n\n  const { separatorProps } = useSeparator({\n    elementType: \"li\",\n  });\n\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      { def: config.noTitleVariant, active: !props.title },\n      {\n        def: config.isFirstVariant,\n        active: state.collection.getFirstKey() === node.key,\n      }\n    ),\n  };\n\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    [config.titleSlot]: props.title,\n    [config.optionsSlot]: Array.from(node.childNodes).map((childNode) =>\n      renderCollectionNode(childNode)\n    ),\n  };\n\n  const overrides: Overrides = {\n    [config.root]: {\n      props: getStyleProps(props),\n    },\n    [config.separator]: {\n      props: {\n        ...separatorProps,\n      },\n    },\n    [config.titleContainer]: {\n      props: {\n        role: \"presentation\",\n        ...headingProps,\n      },\n      ...(!props.title && {\n        render: () => null,\n      }),\n    },\n    [config.optionsContainer]: {\n      props: {\n        ...groupProps,\n      },\n    },\n  };\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n  };\n}\n","import { useSwitch as useAriaSwitch } from \"@react-aria/switch\";\nimport { VisuallyHidden } from \"@react-aria/visually-hidden\";\nimport { useToggleState } from \"@react-stately/toggle\";\nimport { AriaSwitchProps } from \"@react-types/switch\";\nimport * as React from \"react\";\nimport { pick } from \"../../common\";\nimport { mergeProps } from \"../../react-utils\";\nimport { Overrides } from \"../../render/elements\";\nimport { useEnsureSSRProvider } from \"../../render/ssr\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  VariantDef,\n} from \"../plume-utils\";\nimport { getStyleProps, StyleProps } from \"../props-utils\";\n\nexport type SwitchRef = React.Ref<SwitchRefValue>;\nexport interface SwitchRefValue extends SwitchState {\n  getRoot: () => HTMLElement | null;\n  focus: () => void;\n  blur: () => void;\n}\n\ninterface SwitchState {\n  setChecked: (checked: boolean) => void;\n}\n\nexport interface SwitchProps\n  extends Omit<AriaSwitchProps, \"isSelected\" | \"defaultSelected\">,\n    StyleProps {\n  /**\n   * Whether the Switch is checked or not; controlled\n   */\n  isChecked?: boolean;\n\n  /**\n   * Whether the Switch is checked by default; uncontrolled\n   */\n  defaultChecked?: boolean;\n}\n\nfunction asAriaSwitchProps(props: SwitchProps) {\n  const ariaProps = {\n    ...props,\n    isSelected: props.isChecked,\n    defaultSelected: props.defaultChecked,\n  };\n  delete ariaProps[\"isChecked\"];\n  delete ariaProps[\"defaultChecked\"];\n  return ariaProps;\n}\n\ninterface SwitchConfig<C extends AnyPlasmicClass> {\n  isCheckedVariant: VariantDef<PlasmicClassVariants<C>>;\n  isDisabledVariant?: VariantDef<PlasmicClassVariants<C>>;\n  noLabelVariant?: VariantDef<PlasmicClassVariants<C>>;\n  labelSlot?: keyof PlasmicClassArgs<C>;\n  root: keyof PlasmicClassOverrides<C>;\n}\n\nexport function useSwitch<P extends SwitchProps, C extends AnyPlasmicClass>(\n  plasmicClass: C,\n  props: P,\n  config: SwitchConfig<C>,\n  ref: SwitchRef = null\n) {\n  const { children, isDisabled } = props;\n  useEnsureSSRProvider();\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const rootRef = React.useRef<HTMLElement>(null);\n  const ariaProps = asAriaSwitchProps(props);\n  const state = useToggleState(ariaProps);\n  const { inputProps } = useAriaSwitch(ariaProps, state, inputRef);\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      {\n        def: config.isDisabledVariant,\n        active: isDisabled,\n      },\n      {\n        def: config.isCheckedVariant,\n        active: state.isSelected,\n      },\n      {\n        def: config.noLabelVariant,\n        active: !children,\n      }\n    ),\n  };\n  const overrides: Overrides = {\n    [config.root]: {\n      as: \"label\",\n      props: mergeProps(getStyleProps(props), {\n        ref: rootRef,\n      }),\n      wrapChildren: (children: React.ReactNode) => (\n        <>\n          <VisuallyHidden>\n            <input {...inputProps} ref={inputRef} />\n          </VisuallyHidden>\n          {children}\n        </>\n      ),\n    },\n  };\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    ...(config.labelSlot ? { [config.labelSlot]: children } : {}),\n  };\n\n  const plumeState: SwitchState = React.useMemo(\n    () => ({\n      setChecked: (checked: boolean) => state.setSelected(checked),\n    }),\n    [state]\n  );\n\n  React.useImperativeHandle(\n    ref,\n    () => ({\n      getRoot: () => rootRef.current,\n      focus: () => inputRef.current?.focus(),\n      blur: () => inputRef.current?.blur(),\n      setChecked: (checked) => plumeState.setChecked(checked),\n    }),\n    [rootRef, inputRef, plumeState]\n  );\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n      args: args as PlasmicClassArgs<C>,\n    },\n    state: plumeState,\n  };\n}\n","import * as React from \"react\";\nimport { omit, pick } from \"../../common\";\nimport { Overrides } from \"../../render/elements\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  VariantDef,\n} from \"../plume-utils\";\n\nexport interface BaseTextInputProps\n  extends Omit<React.ComponentProps<\"input\">, \"type\" | \"disabled\"> {\n  showStartIcon?: boolean;\n  showEndIcon?: boolean;\n  startIcon?: React.ReactNode;\n  endIcon?: React.ReactNode;\n  isDisabled?: boolean;\n  type?: \"text\" | \"password\" | \"email\" | \"url\" | string;\n  inputClassName?: string;\n  inputStyle?: React.CSSProperties;\n}\n\nexport interface TextInputRefValue {\n  focus: () => void;\n  blur: () => void;\n  getRoot: () => HTMLElement | null;\n  getInput: () => HTMLInputElement | null;\n}\n\nexport type TextInputRef = React.Ref<TextInputRefValue>;\n\ninterface TextInputConfig<C extends AnyPlasmicClass> {\n  showStartIconVariant: VariantDef<PlasmicClassVariants<C>>;\n  showEndIconVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isDisabledVariant?: VariantDef<PlasmicClassVariants<C>>;\n  startIconSlot?: keyof PlasmicClassArgs<C>;\n  endIconSlot?: keyof PlasmicClassArgs<C>;\n  root: keyof PlasmicClassOverrides<C>;\n  input: keyof PlasmicClassOverrides<C>;\n}\n\nexport function useTextInput<\n  P extends BaseTextInputProps,\n  C extends AnyPlasmicClass\n>(\n  plasmicClass: C,\n  props: P,\n  config: TextInputConfig<C>,\n  ref: TextInputRef = null\n) {\n  const {\n    isDisabled,\n    startIcon,\n    endIcon,\n    showStartIcon,\n    showEndIcon,\n    className,\n    style,\n    inputClassName,\n    inputStyle,\n    ...rest\n  } = props;\n  const rootRef = React.useRef<HTMLElement>(null);\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  React.useImperativeHandle(\n    ref,\n    () => ({\n      focus() {\n        inputRef.current?.focus();\n      },\n      blur() {\n        inputRef.current?.blur();\n      },\n      getRoot() {\n        return rootRef.current;\n      },\n      getInput() {\n        return inputRef.current;\n      },\n    }),\n    [rootRef, inputRef]\n  );\n\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      { def: config.showStartIconVariant, active: showStartIcon },\n      { def: config.showEndIconVariant, active: showEndIcon },\n      { def: config.isDisabledVariant, active: isDisabled }\n    ),\n  };\n\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    ...(config.startIconSlot && { [config.startIconSlot]: startIcon }),\n    ...(config.endIconSlot && { [config.endIconSlot]: endIcon }),\n  };\n\n  const overrides: Overrides = {\n    [config.root]: {\n      props: {\n        ref: rootRef,\n        className,\n        style,\n      },\n    },\n    [config.input]: {\n      props: {\n        ...omit(\n          rest as any,\n          // We need to remove `required` from the list of internalArgProps to\n          // be omitted in the props being passed through because Plume pkg\n          // <= 19.1.1 had a bug: input[required] was not linked to the\n          // `required` arg as it should.\n          ...plasmicClass.internalArgProps.filter(\n            (prop) => prop !== \"required\"\n          ),\n          ...plasmicClass.internalVariantProps\n        ),\n        disabled: isDisabled,\n        ref: inputRef,\n        className: inputClassName,\n        style: inputStyle,\n      },\n    },\n  };\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n  };\n}\n","import { usePlasmicCanvasContext } from \"@plasmicapp/host\";\nimport { FocusScope } from \"@react-aria/focus\";\nimport {\n  DismissButton,\n  useOverlay,\n  useOverlayPosition,\n} from \"@react-aria/overlays\";\nimport { DOMProps } from \"@react-types/shared\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { pick } from \"../../common\";\nimport {\n  mergeProps,\n  mergeRefs,\n  useIsomorphicLayoutEffect,\n} from \"../../react-utils\";\nimport { Overrides } from \"../../render/elements\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  PLUME_STRICT_MODE,\n  VariantDef,\n} from \"../plume-utils\";\nimport {\n  getDefaultPlasmicProps,\n  getStyleProps,\n  StyleProps,\n} from \"../props-utils\";\nimport { TriggeredOverlayContext } from \"./context\";\n\nexport interface BaseTriggeredOverlayProps extends StyleProps, DOMProps {\n  children?: React.ReactNode;\n}\n\nexport interface TriggeredOverlayConfig<C extends AnyPlasmicClass> {\n  isPlacedTopVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isPlacedBottomVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isPlacedLeftVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isPlacedRightVariant?: VariantDef<PlasmicClassVariants<C>>;\n\n  contentSlot: keyof PlasmicClassArgs<C>;\n  root: keyof PlasmicClassOverrides<C>;\n  contentContainer: keyof PlasmicClassOverrides<C>;\n}\n\nexport type TriggeredOverlayRef = React.Ref<HTMLElement>;\n\nexport function useTriggeredOverlay<\n  P extends BaseTriggeredOverlayProps,\n  C extends AnyPlasmicClass\n>(\n  plasmicClass: C,\n  props: P,\n  config: TriggeredOverlayConfig<C>,\n  outerRef: TriggeredOverlayRef = null,\n  isDismissable = true\n) {\n  const overlayRef = React.useRef<HTMLElement>(null);\n  const onOverlayRef = mergeRefs(overlayRef, outerRef);\n\n  const context = React.useContext(TriggeredOverlayContext);\n\n  if (!context) {\n    // If no context, then we are not being correctly used.  Either complain, or\n    // exit early.  It's okay to exit early and break the rules of React hooks\n    // because we won't suddenly have the appropriate context anyway for this instance.\n    if (PLUME_STRICT_MODE) {\n      throw new Error(\n        \"You can only use a triggered overlay with a TriggeredOverlayContext\"\n      );\n    }\n    return getDefaultPlasmicProps(plasmicClass, props);\n  }\n\n  const { children } = props;\n  const {\n    triggerRef,\n    placement,\n    overlayMatchTriggerWidth,\n    overlayMinTriggerWidth,\n    overlayWidth,\n    state,\n  } = context;\n\n  // Measure the width of the trigger to inform the width of the menu (below).\n  const [isRendered, setRendered] = React.useState(false);\n  const triggerWidth =\n    triggerRef.current && (overlayMatchTriggerWidth || overlayMinTriggerWidth)\n      ? triggerRef.current.offsetWidth\n      : undefined;\n\n  useIsomorphicLayoutEffect(() => {\n    if (\n      !isRendered &&\n      triggerRef.current &&\n      (overlayMatchTriggerWidth || overlayMinTriggerWidth)\n    ) {\n      setRendered(true);\n    }\n  }, [\n    triggerRef,\n    isRendered,\n    overlayMatchTriggerWidth,\n    overlayMinTriggerWidth,\n  ]);\n\n  const { overlayProps: overlayAriaProps } = useOverlay(\n    {\n      isOpen: state.isOpen,\n      onClose: state.close,\n      isDismissable,\n      shouldCloseOnBlur: true,\n    },\n    overlayRef\n  );\n\n  const {\n    overlayProps: overlayPositionProps,\n    updatePosition,\n    placement: placementAxis,\n  } = useOverlayPosition({\n    targetRef: triggerRef,\n    overlayRef,\n    placement: placement ?? \"bottom left\",\n    shouldFlip: true,\n    isOpen: state.isOpen,\n    onClose: state.close,\n    containerPadding: 0,\n  });\n\n  useIsomorphicLayoutEffect(() => {\n    if (state.isOpen) {\n      requestAnimationFrame(() => {\n        updatePosition();\n      });\n    }\n  }, [state.isOpen, updatePosition]);\n\n  const overlayProps = mergeProps(\n    {\n      style: {\n        left: \"auto\",\n        right: \"auto\",\n        top: \"auto\",\n        bottom: \"auto\",\n        position: \"absolute\",\n        width:\n          overlayWidth ?? (overlayMatchTriggerWidth ? triggerWidth : \"auto\"),\n        minWidth: overlayMinTriggerWidth ? triggerWidth : \"auto\",\n      },\n    },\n    overlayAriaProps,\n    overlayPositionProps\n  );\n\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      { def: config.isPlacedTopVariant, active: placementAxis === \"top\" },\n      { def: config.isPlacedBottomVariant, active: placementAxis === \"bottom\" },\n      { def: config.isPlacedLeftVariant, active: placementAxis === \"left\" },\n      { def: config.isPlacedRightVariant, active: placementAxis === \"right\" }\n    ),\n  };\n\n  const canvasCtx = usePlasmicCanvasContext();\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    [config.contentSlot]: canvasCtx ? (\n      children\n    ) : (\n      <FocusScope restoreFocus>\n        <DismissButton onDismiss={state.close} />\n        {children}\n        {/* We don't use the DismissButton at the end because it ends up taking up 1px space :-/ */}\n        {/* <DismissButton onDismiss={state.close} /> */}\n      </FocusScope>\n    ),\n  };\n\n  const overrides: Overrides = {\n    [config.root]: {\n      props: mergeProps(overlayProps, getStyleProps(props), {\n        ref: onOverlayRef,\n      }),\n      wrap: (root) => {\n        if (typeof document !== \"undefined\") {\n          return ReactDOM.createPortal(root, document.body);\n        } else {\n          // Possibly being invoked on the server during SSR; no need to\n          // bother with a portal in that case.\n          return root;\n        }\n      },\n    },\n  };\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n  };\n}\n"],"names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","uuidv4","replace","c","crypto","getRandomValues","Uint8Array","toString","_triggerLogin","appId","authorizeEndpoint","redirectUri","sha256","_sha","text","encoder","TextEncoder","data","encode","_context","subtle","digest","hashArray","Array","from","hashHex","map","b","padStart","join","continueTo","window","location","href","JSON","stringify","code_verifier","localStorage","setItem","_context2","code_challenge","params","URLSearchParams","set","url","PlasmicPageGuard","props","minRole","canTriggerLogin","children","dataSourceCtxValue","usePlasmicDataSourceContext","React","useEffect","isUserLoading","user","triggerLogin","authRedirectUri","isArray","roleIds","includes","notNil","x","pick","res","omit","chainSingleArgFuncs","funcs","func","ensure","groupBy","collection","keyFunc","mapValues","mapper","isBrowser","NONE","useIsomorphicLayoutEffect","useLayoutEffect","createElementWithChildren","elementType","createElement","toChildArray","isValidElement","child","isReactText","flatMap","mergeProps","restProps","every","rest","mergePropVals","updateRef","ref","isFrozen","current","mergeRefs","refs","val1","val2","classNames","startsWith","renderStack","as","hasGap","wrappedChildren","wrapFlexContainerChildren","FlexStack_","outerRef","makeStackImpl","Stack","assign","div","a","button","h1","h2","h3","h4","h5","h6","label","form","section","head","main","nav","className","createPlasmicElement","override","defaultRoot","defaultProps","wrapChildrenInFlex","override2","deriveOverride","mergeOverrideProps","render","root","wrapChildren","Fragment","ensureNotArray","seenElements","Map","createPlasmicElementFromJsx","defaultElement","wrapFlexChild","triggerProps","UNSET","defaults","overrides","defaultVal","overrideVal","isReactNode","a1","a2","mergeFlexOverrides","o1","o2","merged","Set","mergeFlexOverride","fo1","fo2","filter","PlasmicHeadContext","DEVICE_SIZES","ALL_SIZES","PlasmicImg","forwardRef","src","displayWidth","displayHeight","displayMinWidth","displayMinHeight","displayMaxWidth","displayMaxHeight","quality","loader","imgRef","style","loading","imgProps","fullWidth","fullHeight","aspectRatio","srcStr","isSvg","computedDisplayWidth","getPixelLength","spacerWidth","spacerHeight","isFinite","DEFAULT_SVG_WIDTH","Math","round","width","extra","minWidth","pixelWidth","pixelMinWidth","widthDescs","getClosestPresetSize","max","desc","sizes","usefulSizes","size","getWidths","imageLoader","PLASMIC_IMAGE_LOADER","getImageLoader","spacerSvg","spacerSvgBase64","Buffer","btoa","wrapperStyle","spacerStyle","maxWidth","height","minHeight","maxHeight","alt","opts","supportsUrl","srcSet","wd","transformUrl","format","decoding","makePicture","endsWith","nextBiggerIndex","findIndex","w","nextBigger","parsed","val","match","num","units","parseNumeric","PlasmicLink","platform","nextjsProps","component","legacyBehavior","test","to","PlasmicTranslatorContext","createContext","genTranslatableString","elt","components","componentsCount","str","getText","node","nodeChildren","hasKey","contents","Children","toArray","componentId","cloneElement","Trans","transKey","_t","useContext","hasWarned","console","warn","v","renderPlasmicSlot","defaultContents","content","maybeString","maybeAsString","p","listeners","queries","matchScreenVariants","entries","matchMedia","matches","curScreenVariants","addEventListener","screenVariant","ReactDOM","unstable_batchedUpdates","listener","PlasmicRootContext","useIsSSR","useAriaIsSSR","useEnsureSSRProvider","TRIGGER_TO_HOOK","useHover","setHover","onMouseEnter","onMouseLeave","useFocused","useAriaFocusRing","within","isTextInput","isFocused","focusProps","useFocusVisible","isFocusVisible","useFocusedWithin","useFocusVisibleWithin","usePressed","setPressed","onMouseDown","onMouseUp","ARRAY_SYMBOL","PLASMIC_STATE_PROXY_SYMBOL","UNINITIALIZED","CyclicStatesReferencesError","stateAccessCycle","_Error2","_inheritsLoose","InvalidOperation","msg","_Error3","UnknownError","_Error4","StateSpecNode","specs","_specs","_edges","_proto","setSpecs","edges","hasEdge","has","addEdge","clearEdges","makeTransition","get","isLeaf","getAllSpecs","hasArrayTransition","getSpec","transformPathStringToObj","split","splitStatePathPart","buildTree","internalSpec","spec","pathObj","path","isRepeated","some","part","rec","currentPath","shallowEqual","nextKey","updateTree","oldNode","nodeSpecs","oldEdges","getSpecTreeLeaves","leaves","findStateCell","pathStr","repetitionIndex","realPath","currRepIndex","isNum","proxyObjToStateCell","WeakMap","valtioSubscriptions","ensureStateCell","target","property","stateCell","initialValue","initFunc","initFuncHash","tryGetStateCellFrom$StateRoot","$state","_proxyObjToStateCell$","getStateCell","getStateCellFrom$StateRoot","subscribeToValtio","$$state","statePath","maybeValtioProxy","valueProp","env","$props","stateValues","isValtioProxy","onChangeProp","unsub","subscribe","_$$state$env$$props$s","initializeStateValue","initialStateCell","proxyRoot","initialStateName","stateAccess","stateInitializationEnv","visited","add","stack","create$StateProxy","internalStateCell","curr","newValue","invokeInitFuncBackwardsCompatible","overrideEnv","clone","initialSpec","isImmutable","mkUntrackedValue","_$$state$env$$props$i","leafHandlers","currPath","currNode","getNextPath","handlers","deleteProperty","_$$state$env$$props$s2","Reflect","receiver","nextPath","nextNode","_leafHandlers$get","nextSpec","_leafHandlers$set","_$$state$env$$props$n","canProxy","ownKeys","oldValue","_valtioSubscriptions$","f","unsubscribeToValtio","baseObject","proxyObj","Proxy","rootSpecTree","o","envFieldsAreNonNill","$ctx","$queries","extractDollarStateParametersBackwardCompatible","generateStateOnChangeProp","isPlasmicStateProxy","getStateCells","stateCells","arrayEq","xs","ys","_","index","k","l","t","indexOf","objValue","other","eq","baseAssignValue","_classNames","PLUME_STRICT_MODE","mergeVariantToggles","toggles","definedToggles","def","grouped","group","subToggles","fromEntries","variant","active","getPlumeType","childType","__plumeType","getStyleProps","getDefaultPlasmicProps","plasmicClass","plasmicProps","variants","internalVariantProps","args","internalArgProps","RE_DATA_PROP","deriveItemsFromChildren","items","disabledKeys","itemPlumeType","sectionPlumeType","invalidChildError","itemCount","sectionCount","flattenedChildren","childKey","getItemLikeKey","element","propInChild","requireItemValue","comp","_comp$render","getElementTypeName","cloneChild","ensureValue","getChildProp","renderCollectionNode","rendered","_node","renderAsCollectionChild","option","Item","textValue","Section","title","prop","componentProps","TriggeredOverlayContext","MenuContext","COLLECTION_OPTS","useMenuTrigger","triggerRef","isDisabled","placement","menuMatchTriggerWidth","menuWidth","menu","useAriaMenuTrigger","menuProps","usePress","menuTriggerProps","pressProps","makeMenu","realMenu","triggerContext","autoFocus","focusStrategy","overlayMatchTriggerWidth","overlayMinTriggerWidth","overlayWidth","SelectContext","ListBoxWrapper","canvasCtx","usePlasmicCanvasContext","useListBox","isVirtualized","disallowEmptySelection","listBoxProps","outline","isOpen","defaultOpen","onOpenChange","useMenuTriggerState","shouldFlip","Provider","Head","image","description","canonical","PlasmicIconType","userAuthToken","dataSourceContextValue","SSRProvider","PlasmicDataSourceContextProvider","translator","isRoot","forNodeName","forNode","clear","isMulti","screenQueries","updateState","lastScreenVariantsRef","updateIfChanged","splice","config","v1","v2","descendantNames","internalVariantPropNames","internalArgPropNames","reservedPropNames","leftoverProps","globalVariantValues","stateName","plasmicStatePath","componentHelpers","onChangeArgsToValue","states","_componentHelpers$sta2","_componentHelpers$sta3","apply","_tryGetStateCellFrom$","pickBy","rootPath","isOutside","isImplicitStateArray","groupName","groupVariants","child$Props","stateHelpers","registerInitFunc","plasmicStateName","_stateHelpers$name$in","_loop","linkedStates","variantGroup","importName","importPath","isRepeatable","styleSections","mode","link","startIcon","endIcon","showStartIcon","showEndIcon","showStartIconVariant","showEndIconVariant","isDisabledVariant","startIconSlot","endIconSlot","contentSlot","disabled","isIndeterminate","inputRef","rootRef","ariaProps","isSelected","isChecked","defaultSelected","defaultChecked","asAriaCheckboxProps","useToggleState","inputProps","useAriaCheckbox","isCheckedVariant","isIndeterminateVariant","noLabelVariant","VisuallyHidden","labelSlot","plumeState","setChecked","checked","setSelected","getRoot","focus","_inputRef$current","blur","_inputRef$current2","useRef","specTreeLeaves","createValtioProxy","registrationsQueue","create$State","useCallback","initVal","deepEqual","inCanvas","newLeaves","old$state","oldStateCell","newSpec","find","sp","init","resetSpecs","newInit","reInitializeState","_$$state$env$$props$s3","shift","useSnapshot","sync","useMemo","useDerivedItemsFromChildren","asAriaMenuProps","useTreeState","menuListRef","useAriaMenu","contextValue","itemsContainer","itemsSlot","getFocusedValue","selectionManager","focusedKey","setFocusedValue","setFocusedKey","triggerFocusProps","useFocusable","focusableProps","isOpenVariant","menuSlot","trigger","open","close","getTrigger","useMenuSection","heading","aria-label","headingProps","groupProps","separatorProps","useSeparator","noTitleVariant","isFirstVariant","getFirstKey","titleSlot","childNodes","childNode","separator","titleContainer","role","menuContext","onAction","isHighlighted","useAriaMenuItem","onClose","closeOnSelect","menuItemProps","labelProps","isHighlightedVariant","labelContainer","defaultValue","onChange","ItemComponent","SectionComponent","itemsProp","transform","item","deriveItemsFromItemsProp","deriveItemsFromProps","useDerivedItems","OptionComponent","OptionGroupComponent","onSelectionChange","defaultSelectedKey","selectedKey","useAriaSelectProps","useAriaSelectState","placeholder","selectedContent","useAriaSelect","triggerContent","selectedItem","placeholderVariant","HiddenSelect","overlay","optionsContainer","triggerContentSlot","placeholderSlot","optionsSlot","getSelectedValue","setSelectedValue","setSelectedKey","_triggerRef$current","_triggerRef$current2","onRef","useAriaOption","shouldSelectOnPressUp","shouldFocusOnHover","shouldUseVirtualFocus","optionProps","isSelectedVariant","useListBoxSection","asAriaSwitchProps","useAriaSwitch","inputClassName","inputStyle","getInput","input","isDismissable","overlayRef","onOverlayRef","isRendered","setRendered","triggerWidth","offsetWidth","overlayAriaProps","useOverlay","shouldCloseOnBlur","overlayProps","useOverlayPosition","targetRef","containerPadding","overlayPositionProps","updatePosition","placementAxis","requestAnimationFrame","left","right","top","bottom","position","isPlacedTopVariant","isPlacedBottomVariant","isPlacedLeftVariant","isPlacedRightVariant","FocusScope","restoreFocus","DismissButton","onDismiss","document","body","WrappedComponent","options","display"],"mappings":"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"}